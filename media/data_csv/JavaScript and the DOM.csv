course,sub_course,module,sub_module,content_html_list,img_list,video_url,,,,,,,,,,,,,,,,,,,,,,
JavaScript and the DOM,JavaScript and the DOM,Lesson 1: The Document Object Model,1.1  Introduction,"['<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Which of the following is the correct way to declare a variable in JavaScript? (assume each line is run in isolation)</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><code class=""chakra-code css-1u83yg1"">name: \'Dominique\';</code></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><code class=""chakra-code css-1u83yg1"">const name = \'Miguel\';</code></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><code class=""chakra-code css-1u83yg1"">var name = \'Orvin\';</code></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><code class=""chakra-code css-1u83yg1"">set(name, \'Kagure\');</code></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Using the code below, which of the following correctly access the string <code class=""chakra-code css-1u83yg1"">\'Malaysia\'</code>?</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-js"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">const</span><span> locations </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">=</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">[</span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'Florida\'</span><span class=""token"" style=""color: rgb(15, 43, 61);"">,</span><span> </span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'England\'</span><span class=""token"" style=""color: rgb(15, 43, 61);"">,</span><span> </span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'Malaysia\'</span><span class=""token"" style=""color: rgb(15, 43, 61);"">,</span><span> </span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'South Africa\'</span><span class=""token"" style=""color: rgb(15, 43, 61);"">,</span><span> </span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'Fiji\'</span><span class=""token"" style=""color: rgb(15, 43, 61);"">,</span><span> </span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'China\'</span><span class=""token"" style=""color: rgb(15, 43, 61);"">]</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span></code></div></div></pre></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><code class=""chakra-code css-1u83yg1"">locations[\'Malaysia\'];</code></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><code class=""chakra-code css-1u83yg1"">locations[2];</code></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><code class=""chakra-code css-1u83yg1"">locations[3];</code></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Throughout this course, you\'ll be using lot of fundamental JavaScript skills, so if you\'re feeling a bit rusty, make sure to brush up on them now before we start diving into this new content.</p>\n<p class=""chakra-text css-o3oz8b"">And speaking of this new content, we\'re going to be covering some really exciting stuff!</p>\n<p class=""chakra-text css-o3oz8b"">Throughout this course, you\'ll level up not only your web knowledge, but also your browser and JavaScript knowledge, so get excited!</p></div>']",[],https://www.youtube.com/embed/abDDSfoG_fI,,,,,,,,,,,,,,,,,,,,,,
JavaScript and the DOM,JavaScript and the DOM,Lesson 1: The Document Object Model,1.2  The DOM,"['<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">In this section, we\'ll look at the Document Object Model - otherwise known as the DOM.</p>\n<p class=""chakra-text css-o3oz8b"">The words ""the DOM"" are used all over developer documentation sites and tutorials on writing interactive JavaScript code. But what is it? Perhaps you\'ve even used the DOM and still aren\'t quite sure what it is. Is it the browser? Is it a special part of JavaScript? ¯\\_(ツ)_/¯</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Take a couple of minutes think about what you think ""the DOM"" is/refers to, and write out a description of the DOM.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">To recap the video, the following steps happen:</p>\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp"">HTML is received</li><li class=""css-cvpopp"">HTML tags are converted to tokens</li><li class=""css-cvpopp"">Tokens are converted to Nodes</li><li class=""css-cvpopp"">Nodes are converted to the DOM</li></ul>\n<p class=""chakra-text css-o3oz8b"">When you request a website, no matter what backend language is powering that website, it will respond with HTML. The browser receives a stream of HTML. The bytes are run through a complicated (but fully documented) parsing process that determines the different characters (e.g. the start tag character <code class=""chakra-code css-1u83yg1"">&lt;</code>, an attribute like <code class=""chakra-code css-1u83yg1"">href</code>, a closing angle bracket like <code class=""chakra-code css-1u83yg1"">&gt;</code>). After parsing has occurred, a process called <strong>tokenization</strong> begins. Tokenization takes one character at a time and builds up <strong>tokens</strong>. The tokens are:</p>\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp"">DOCTYPE</li><li class=""css-cvpopp"">start tag</li><li class=""css-cvpopp"">end tag</li><li class=""css-cvpopp"">comment</li><li class=""css-cvpopp"">character</li><li class=""css-cvpopp"">end-of-file</li></ul>\n<p class=""chakra-text css-o3oz8b"">Let\'s take a break for a second. At this state, the browser has received the bytes that\'ve been sent by a server. The browser has converted the bytes to tags and has read through the tags to create a list of tokens.</p>\n<p class=""chakra-text css-o3oz8b"">This list of tokens then goes through the tree construction stage. The output of this stage is a tree-like structure - this is the DOM!</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">I want to point out two important quotes that Illya said in the video:</p>\n<blockquote class=""css-6jmydm"">\n<p class=""chakra-text css-o3oz8b"">a tree structure that captures the content and properties of the HTML and all the relationships between the nodes</p>\n</blockquote>\n<blockquote class=""css-6jmydm"">\n<p class=""chakra-text css-o3oz8b"">the DOM is the full, parsed representation of the HTML</p>\n</blockquote></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">So the DOM is a model (representation) of the relationships and attributes of the HTML document that was received. Remember that DOM stands for ""Document Object Model"". Something that I\'ve found to be true as I\'ve been learning is that to break something down, just read the thing backwards:</p>\n<p class=""chakra-text css-o3oz8b"">Document Object Model</p>\n<p class=""chakra-text css-o3oz8b"">...would become…</p>\n<p class=""chakra-text css-o3oz8b"">Object Model of the Document!</p>\n<p class=""chakra-text css-o3oz8b"">Remember that a JavaScript object is a tree-like structure that has properties and values. So the DOM can be accessed using a special object provided by the browser: <code class=""chakra-code css-1u83yg1"">document</code></p>\n<p class=""chakra-text css-o3oz8b"">Try this:</p>\n<ol role=""list"" class=""css-13a5a39""><li class=""css-cvpopp"">open the console on this page</li></ol>\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp"">type out the word <code class=""chakra-code css-1u83yg1"">document</code>\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp"">careful not to declare it (<code class=""chakra-code css-1u83yg1"">const document</code>)</li><li class=""css-cvpopp"">careful not to wrap it in quotes (<code class=""chakra-code css-1u83yg1"">""document""</code>)</li></ul>\n</li><li class=""css-cvpopp"">press enter</li></ul></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><em class=""chakra-text css-o3oz8b"">Viewing the <code class=""chakra-code css-1u83yg1"">document</code> object in the DevTools\' Console pane.</em></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">The <code class=""chakra-code css-1u83yg1"">document</code> object is provided by the browser and is a representation of the HTML document. This object is <em class=""chakra-text css-o3oz8b"">not</em> provided by the JavaScript language. ECMAScript is the language specification that JavaScript is based on, and it only references the document object model in one place, in its ""Global Object"" section:</p>\n<blockquote class=""css-6jmydm"">\n<p class=""chakra-text css-o3oz8b"">In addition to the properties defined in this specification the global object may have additional host defined properties. This may include a property whose value is the global object itself; for example, in the HTML document object model the window property of the global object is the global object itself. (<a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://www.ecma-international.org/ecma-262/#sec-global-object"">source<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a>)</p>\n</blockquote>\n<p class=""chakra-text css-o3oz8b"">Basically, this says that the <code class=""chakra-code css-1u83yg1"">document</code> object is not part of JavaScript, but is expected to <em class=""chakra-text css-o3oz8b"">already exist</em> and be freely accessible to JavaScript code.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">The DOM is standardized by the W3C. There are a number of specifications that make up the DOM, here are few:</p>\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp"">Core Specification</li><li class=""css-cvpopp"">Events Specification</li><li class=""css-cvpopp"">Style Specification</li><li class=""css-cvpopp"">Validation Specification</li><li class=""css-cvpopp"">Load and Save Specification</li></ul>\n<p class=""chakra-text css-o3oz8b"">To see the full list of DOM specs, check out the standard at: <a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://www.w3.org/standards/techs/dom#w3c_all"">https://www.w3.org/standards/techs/dom#w3c_all<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Ok, so do not scroll back up or review what you just read. Just take a moment, think about everything you\'ve learned about the DOM and the document object and, in your own words, write an explanation of what ""the DOM"" is.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><h3 class=""chakra-heading css-k57syw"">Further Research</h3>\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://developer.mozilla.org/en-US/docs/Web/API/Document_Object_Model/Introduction"">DOM Introduction<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a></li><li class=""css-cvpopp""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://www.w3.org/TR/html5/syntax.html#parsing"">Section 8.2 Parsing HTML documents<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a> from the W3C\'s HTML Documentation</li><li class=""css-cvpopp""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://www.w3.org/standards/techs/dom#w3c_all"">DOM Specification<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a> on W3C</li><li class=""css-cvpopp""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://www.ecma-international.org/ecma-262/#sec-global-object"">HTML Document Object Model mentioned in the ECMAScript Specification<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a> - the language specification used by JavaScript</li></ul></div>']",['https://video.udacity-data.com/topher/2017/December/5a22336a_ud117-l1-document-object-in-console/ud117-l1-document-object-in-console.jpg'],https://www.youtube.com/embed/4HKsH0MxuxU,,,,,,,,,,,,,,,,,,,,,,
JavaScript and the DOM,JavaScript and the DOM,Lesson 1: The Document Object Model,1.3  Selecting Page Elements With CSS Selectors,"['<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Which of the following will style an element by its ID?</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><code class=""chakra-code css-1u83yg1"">.left-nav { ... }</code></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><code class=""chakra-code css-1u83yg1"">.id { ... }</code></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><code class=""chakra-code css-1u83yg1"">#footer { ... }</code></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><code class=""chakra-code css-1u83yg1"">p { ... }</code></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Which of the following will style an element by its class?</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><code class=""chakra-code css-1u83yg1"">.left-nav { ... }</code></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><code class=""chakra-code css-1u83yg1"">.id { ... }</code></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><code class=""chakra-code css-1u83yg1"">#footer { ... }</code></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><code class=""chakra-code css-1u83yg1"">p { ... }</code></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Which of the following will style an element by targeting the tag name?</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><code class=""chakra-code css-1u83yg1"">.left-nav { ... }</code></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><code class=""chakra-code css-1u83yg1"">.id { ... }</code></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><code class=""chakra-code css-1u83yg1"">#footer { ... }</code></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><code class=""chakra-code css-1u83yg1"">p { ... }</code></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">So this was a quick review on how to select elements by ID, class, and tag. Believe it or not, being able to select HTML elements this way is actually going to be a vital skill in this section where we learn how to access page elements using JavaScript and the DOM!</p>\n<p class=""chakra-text css-o3oz8b"">If you struggled a little bit with this section, perhaps you should do a quick review of CSS by reviewing the <a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://www.udacity.com/course/intro-to-html-and-css--ud001"">HTML and CSS course<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a>.</p>\n<p class=""chakra-text css-o3oz8b"">Alrighty - let\'s get right to it and let the fun begin! 🙌🏼</p></div>']",[],,,,,,,,,,,,,,,,,,,,,,,
JavaScript and the DOM,JavaScript and the DOM,Lesson 1: The Document Object Model,1.4  Select Page Element By ID,"['<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">To recap what we just did:</p>\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp"">we opened the DevTools for the page we were looking at</li><li class=""css-cvpopp"">we switched to the Console pane</li><li class=""css-cvpopp"">we ran <code class=""chakra-code css-1u83yg1"">document.getElementById(\'content\');</code> on the console</li></ul>\n<p class=""chakra-text css-o3oz8b"">Running this code caused the <code class=""chakra-code css-1u83yg1"">document</code> object to search through its entire tree-like structure for the element that has an ID of ""content"".</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Now it\'s your turn!</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">I loaded the HTML page</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">I opened the DevTools</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">I switched to the Console pane</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">I used <code class=""chakra-code css-1u83yg1"">document.getElementById()</code> to locate an element by its ID</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Now, what do you think will happen if you used <code class=""chakra-code css-1u83yg1"">document.getElementById(\'&lt;some-nonexistent-ID&gt;\')</code> to search for some ID that doesn\'t actually exist in the HTML page? </p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">a dummy element will be returned</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><code class=""chakra-code css-1u83yg1"">false</code> will be returned</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><code class=""chakra-code css-1u83yg1"">null</code> will be returned</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">it will cause an error</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Which of the following will select the element with the ID of <code class=""chakra-code css-1u83yg1"">logo</code>?</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><code class=""chakra-code css-1u83yg1"">document.getElementById(\'logo\');</code></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><code class=""chakra-code css-1u83yg1"">document.getElementByID(\'logo\');</code></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><code class=""chakra-code css-1u83yg1"">document.getElementById(\'#logo\');</code></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Write the DOM code to select the element with ID <code class=""chakra-code css-1u83yg1"">strawberry-banner</code>.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><h3 class=""chakra-heading css-k57syw"">Further Research</h3>\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://developer.mozilla.org/en-US/docs/Web/API/Document/getElementById"">.getElementById()<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a> on MDN</li></ul></div>']",[],https://www.youtube.com/embed/HTwkHkERtvQ,,,,,,,,,,,,,,,,,,,,,,
JavaScript and the DOM,JavaScript and the DOM,Lesson 1: The Document Object Model,1.5  Select Page Elements By Class Or Tag,"['<div class=""ureact-markdown css-tc5hjw""><blockquote class=""css-6jmydm"">\n<h3 class=""chakra-heading css-k57syw"">Beware of the S!</h3>\n</blockquote>\n<blockquote class=""css-6jmydm"">\n<p class=""chakra-text css-o3oz8b"">I know we haven\'t looked at <code class=""chakra-code css-1u83yg1"">.getElementsByTagName()</code> just yet, but there\'s something different about <code class=""chakra-code css-1u83yg1"">.getElementById()</code> compared with both <code class=""chakra-code css-1u83yg1"">.getElementsByClassName()</code> and <code class=""chakra-code css-1u83yg1"">.getElementsByTagName()</code> that I want to point out because it can be easy to miss; both <code class=""chakra-code css-1u83yg1"">.getElementsByClassName()</code> and <code class=""chakra-code css-1u83yg1"">.getElementsByTagName()</code> have an extra ""s"" in their name.</p>\n</blockquote>\n<blockquote class=""css-6jmydm"">\n<p class=""chakra-text css-o3oz8b"">The method\'s name is <code class=""chakra-code css-1u83yg1"">.getElementsByClassName()</code>, not <code class=""chakra-code css-1u83yg1"">.getElementByClassName()</code>. Notice the word right in the middle, it\'s ""Elements"" not ""Element"". If you think about it, this actually makes a lot of sense! Since both <code class=""chakra-code css-1u83yg1"">.getElementsByClassName()</code> and <code class=""chakra-code css-1u83yg1"">.getElementsByTagName()</code> could return multiple items, their method names tell us that directly. Now compare this with <code class=""chakra-code css-1u83yg1"">.getElementById()</code> that will only ever return at most <em class=""chakra-text css-o3oz8b"">one</em> element. Its name has the singular ""Element"" in it.</p>\n</blockquote>\n<blockquote class=""css-6jmydm"">\n<p class=""chakra-text css-o3oz8b"">I just wanted to point this out because I\'ve been bitten by that missing ""s"" many-a-time when running code like:</p>\n</blockquote>\n<blockquote class=""css-6jmydm"">\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-js"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span class=""token dom"" style=""color: rgb(2, 124, 124);"">document</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token method property-access"" style=""color: rgb(153, 0, 0); font-weight: bold;"">getElementByClassName</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'highlight-spanned\'</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span></code></div></div></pre>\n</blockquote>\n<blockquote class=""css-6jmydm"">\n<p class=""chakra-text css-o3oz8b"">This code above will <em class=""chakra-text css-o3oz8b"">not</em> work, because there is no DOM method <code class=""chakra-code css-1u83yg1"">.getElementByClassName()</code> (with singular ""Element"").</p>\n</blockquote></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Which of the following would correctly select all elements with class: <code class=""chakra-code css-1u83yg1"">\'splort\'</code>?</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><code class=""chakra-code css-1u83yg1"">document.getElementsByClassName(\'splort\');</code></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><code class=""chakra-code css-1u83yg1"">document.getElementsByClassname(\'splort\');</code></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><code class=""chakra-code css-1u83yg1"">document.getElementsByClassName(\'.splort\');</code></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><code class=""chakra-code css-1u83yg1"">document.getElementByClassName(\'splort\');</code></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Write the DOM code to select all <code class=""chakra-code css-1u83yg1"">&lt;article&gt;</code> elements.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Write the DOM code to select all elements with class: <code class=""chakra-code css-1u83yg1"">fancy-footer</code>.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">We just saw that <code class=""chakra-code css-1u83yg1"">.getElementsByClassName()</code> returns an array-like data structure of elements. But what exactly is an element?</p>\n<p class=""chakra-text css-o3oz8b"">In the next section, we\'ll take the plunge and look at Elements and Nodes.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><h3 class=""chakra-heading css-k57syw"">Further Research</h3>\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://developer.mozilla.org/en-US/docs/Web/API/Document/getElementsByClassName"">.getElementsByClassName()<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a> on MDN</li><li class=""css-cvpopp""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://developer.mozilla.org/en-US/docs/Web/API/Element/getElementsByTagName"">.getElementsByTagName()<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a> on MDN</li></ul></div>']",[],https://www.youtube.com/embed/mP04gbpghpY,,,,,,,,,,,,,,,,,,,,,,
JavaScript and the DOM,JavaScript and the DOM,Lesson 1: The Document Object Model,"1.6  Nodes, Elements, and Interfaces...Oh My!","['<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Put these in the correct order of operation.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">DOM</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">tag</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">token</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">nodes</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">happens first</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">happens second</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">happens third</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">happens fourth</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">We looked at this in an earlier section, but let\'s take one more quick look at what Illya said about how the DOM is constructed.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">So to reiterate the process, it\'s:</p>\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp"">characters</li><li class=""css-cvpopp"">tags</li><li class=""css-cvpopp"">tokens</li><li class=""css-cvpopp"">nodes</li><li class=""css-cvpopp"">DOM</li></ul>\n<p class=""chakra-text css-o3oz8b"">But what is a ""node"", exactly?</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Node (with a capital ""N""!) is a blueprint that contains information about all of the properties and methods for real nodes (with a lowercase ""n""!).\nIf you\'re not used to them, the words ""<strong>interface</strong>"", ""<strong>property</strong>"", and ""<strong>method</strong>"" can be kind of cryptic at first. Just remember that:</p>\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp"">interface = blueprint</li><li class=""css-cvpopp"">properties = data</li><li class=""css-cvpopp"">methods = functionality</li></ul>\n<p class=""chakra-text css-o3oz8b"">Let\'s check out Node on MDN: <a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://developer.mozilla.org/en-US/docs/Web/API/Node"">Node Interface on MDN<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">So the Node Interface is a blueprint for all of the properties (data) and methods (functionality) that every real node has after it\'s been created. Now, the Node Interface has a lot of properties and methods, but it\'s not very <em class=""chakra-text css-o3oz8b"">specific</em>...I mean, what <em class=""chakra-text css-o3oz8b"">is</em> a node???</p>\n<p class=""chakra-text css-o3oz8b"">Just like ""blueprint for a Building"" is not as specific as ""blueprint for a house"" or ""blueprint for a skyscraper"". These are more-specific blueprints. And these more-specific blueprints would probably have their own properties and methods that are specific to <em class=""chakra-text css-o3oz8b"">just</em> houses or <em class=""chakra-text css-o3oz8b"">just</em> skyscrapers.</p>\n<p class=""chakra-text css-o3oz8b"">This brings us to the ""Element Interface"".</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><em class=""chakra-text css-o3oz8b"">Element points to its parent, Node.</em></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Since Element is pointing at Node, this indicates that the Element Interface inherits all of the Node Interface\'s properties and methods. This means that any element (lowercase ""e""!) that was created from the Element Interface is <em class=""chakra-text css-o3oz8b"">also</em> a descendent from the Node Interface...which means the element (lowercase ""e""!) is also a node (lowercase ""n""!).</p>\n<p class=""chakra-text css-o3oz8b"">Let\'s do a little digging around on an element!</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Does the <code class=""chakra-code css-1u83yg1"">.outerHTML</code> property come from the Node Interface or the Element Interface? Check all that apply.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Node Interface</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Element Interface</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">neither</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Which interface does the <code class=""chakra-code css-1u83yg1"">.id</code> property come from?</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Node Interface</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Element Interface</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">neither</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Which interface does the <code class=""chakra-code css-1u83yg1"">.textContent</code> property come from?</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Node Interface</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Element Interface</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">neither</p></div>', '<div class=""ureact-markdown css-tc5hjw""><blockquote class=""css-6jmydm"">\n<p class=""chakra-text css-o3oz8b"">Do you remember the <code class=""chakra-code css-1u83yg1"">.getElementsByClassName()</code> method on the <code class=""chakra-code css-1u83yg1"">document</code> object that we looked at previously? While reviewing the Element interface, you might\'ve noticed that it <em class=""chakra-text css-o3oz8b"">also</em> has a <code class=""chakra-code css-1u83yg1"">.getElementsByClassName()</code> method! The Element Interface inherits from the Node Interface, not the Document Interface (yep, there\'s a Document Interface!). The Element Interface has its own <code class=""chakra-code css-1u83yg1"">.getElementsByClassName()</code> that does the exact same thing as the one on the <code class=""chakra-code css-1u83yg1"">document</code> object.</p>\n<p class=""chakra-text css-o3oz8b"">This means that you can use the <code class=""chakra-code css-1u83yg1"">document</code> object to select an element, <em class=""chakra-text css-o3oz8b"">then</em> you can call <code class=""chakra-code css-1u83yg1"">.getElementsByClassName()</code> on that element to receive a list of elements with the class name that are descendents of that specific element!</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-js"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span class=""token"" style=""color: rgb(113, 113, 101); font-style: italic;"">// selects the DOM element with an ID of ""sidebar""</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">const</span><span> sidebarElement </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">=</span><span> </span><span class=""token dom"" style=""color: rgb(2, 124, 124);"">document</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token method property-access"" style=""color: rgb(153, 0, 0); font-weight: bold;"">getElementById</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'sidebar\'</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span>\n<span></span><span class=""token"" style=""color: rgb(113, 113, 101); font-style: italic;"">// searches within the ""sidebar"" element for any elements with a class of ""sub-heading""</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">const</span><span> subHeadingList </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">=</span><span> sidebarElement</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token method property-access"" style=""color: rgb(153, 0, 0); font-weight: bold;"">getElementsByClassName</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'sub-heading\'</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span></code></div></div></pre>\n</blockquote></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">To check out all of the different interfaces, check here: <a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://developer.mozilla.org/en-US/docs/Web/API"">Web API Interfaces<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a></p></div>', '<div class=""ureact-markdown css-tc5hjw""><h3 class=""chakra-heading css-k57syw"">Further Research</h3>\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://developer.mozilla.org/en-US/docs/Web/API/Node"">Node Interface<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a></li><li class=""css-cvpopp""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://developer.mozilla.org/en-US/docs/Web/API/Element"">Element Interface<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a></li><li class=""css-cvpopp""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://developer.mozilla.org/en-US/docs/Web/API"">list of Web API Interfaces<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a></li></ul></div>']",['https://video.udacity-data.com/topher/2017/December/5a22d197_ud117-l1-interface-chain/ud117-l1-interface-chain.jpg'],https://www.youtube.com/embed/B2UPRofY5ig,,,,,,,,,,,,,,,,,,,,,,
JavaScript and the DOM,JavaScript and the DOM,Lesson 1: The Document Object Model,1.7  More Ways To Access Elements,"['<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">We\'ve been looking at the:</p>\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp""><code class=""chakra-code css-1u83yg1"">.getElementById()</code></li><li class=""css-cvpopp""><code class=""chakra-code css-1u83yg1"">.getElementsByClassName()</code></li><li class=""css-cvpopp"">and <code class=""chakra-code css-1u83yg1"">.getElementsByTagName()</code></li></ul>\n<p class=""chakra-text css-o3oz8b"">Now these DOM methods are standardized. However, not all browsers support every standard. They do <em class=""chakra-text css-o3oz8b"">now</em>, for these three methods, but there are hundreds of other methods with varying levels of support.</p>\n<p class=""chakra-text css-o3oz8b"">That\'s why almost every method on MDN has a Browser compatibility table that lists when each browser started supporting that specific method.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><em class=""chakra-text css-o3oz8b"">The Browser compatibility table for the <code class=""chakra-code css-1u83yg1"">.getElementsByClassName()</code> method.</em></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Thankfully, all browsers have pretty much aligned to support the official standard.</p>\n<p class=""chakra-text css-o3oz8b"">However, back in the day, that wasn\'t the case. You had to write different code to perform the same action in different browsers. Then you had to write code to check which browser you were in to run the correct code for that browser. Let me tell you, it was a bit of a nightmare.</p>\n<p class=""chakra-text css-o3oz8b"">Several JavaScript libraries came along to help mitigate these issues. Let\'s take a brief look at the <a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://jquery.com/"">jQuery library<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a>.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">We already reviewed this in a previous section, but let\'s recap it one more time!</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-css"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span class=""token id"" style=""color: navy;"">#header</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">{</span><span>\n</span><span>    </span><span class=""token"" style=""color: rgb(2, 124, 124);"">color</span><span class=""token"" style=""color: rgb(15, 43, 61);"">:</span><span> </span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'red\'</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(15, 43, 61);"">}</span><span>\n</span>\n<span></span><span class=""token class"" style=""color: navy;"">.header</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">{</span><span>\n</span><span>    </span><span class=""token"" style=""color: rgb(2, 124, 124);"">color</span><span class=""token"" style=""color: rgb(15, 43, 61);"">:</span><span> </span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'red\'</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(15, 43, 61);"">}</span><span>\n</span>\n<span></span><span class=""token"" style=""color: navy;"">header</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">{</span><span>\n</span><span>    </span><span class=""token"" style=""color: rgb(2, 124, 124);"">color</span><span class=""token"" style=""color: rgb(15, 43, 61);"">:</span><span> </span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'red\'</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(15, 43, 61);"">}</span></code></div></div></pre>\n<p class=""chakra-text css-o3oz8b"">Each one of these sets the color to red. The only difference is in the selector; selecting by ID, selecting by class, and selecting by tag. Got it? Good!</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">You\'ve already learned the DOM methods to select by ID, class, and tag, too:</p>\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp""><code class=""chakra-code css-1u83yg1"">.document.getElementById()</code></li><li class=""css-cvpopp""><code class=""chakra-code css-1u83yg1"">.document.getElementsByClassName()</code></li><li class=""css-cvpopp""><code class=""chakra-code css-1u83yg1"">.document.getElementsByTagName()</code></li></ul>\n<p class=""chakra-text css-o3oz8b"">Three different methods that do almost the exact same thing. Wouldn\'t it be awesome if there were a way to do element selecting similar to how CSS does it?</p>\n<p class=""chakra-text css-o3oz8b"">Wait for it - there is!</p></div>', '<div class=""ureact-markdown css-tc5hjw""><blockquote class=""css-6jmydm"">\n<h3 class=""chakra-heading css-k57syw"">⚠️ <code class=""chakra-code css-1u83yg1"">.querySelector()</code> Returns A Single Element ⚠️</h3>\n</blockquote>\n<blockquote class=""css-6jmydm"">\n<p class=""chakra-text css-o3oz8b"">I want to point out one potentially tricky thing - the <code class=""chakra-code css-1u83yg1"">.querySelector()</code> method only returns <em class=""chakra-text css-o3oz8b"">one</em> element. This makes sense if you use it to search for an element by ID. However, even though <code class=""chakra-code css-1u83yg1"">.getElementsByClassName()</code> and <code class=""chakra-code css-1u83yg1"">.getElementsByTagName()</code> both return a list of multiple elements, using <code class=""chakra-code css-1u83yg1"">.querySelector()</code> with a class selector or a tag selector will still only return the <em class=""chakra-text css-o3oz8b"">first</em> item it finds.</p>\n</blockquote></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Write the <code class=""chakra-code css-1u83yg1"">.querySelector()</code> code to find the first item with an ID of: <code class=""chakra-code css-1u83yg1"">fanciful-butterfly</code>.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Write the <code class=""chakra-code css-1u83yg1"">.querySelector()</code> code to find the first paragraph element that <em class=""chakra-text css-o3oz8b"">also</em> has a class of: <code class=""chakra-code css-1u83yg1"">callout</code></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Write the <code class=""chakra-code css-1u83yg1"">.querySelectorAll()</code> code to find all paragraph elements that are descendents of elements that have the class: <code class=""chakra-code css-1u83yg1"">articles</code></p></div>', '<div class=""ureact-markdown css-tc5hjw""><h3 class=""chakra-heading css-k57syw"">Further Research</h3>\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://jquery.com/"">jQuery website<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a></li><li class=""css-cvpopp""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelector"">.querySelector() method on MDN<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a></li><li class=""css-cvpopp""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelectorAll"">.querySelectorAll() method on MDN<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a></li><li class=""css-cvpopp""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://developer.mozilla.org/en-US/docs/Web/API/NodeList"">NodeList on MDN<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a></li></ul></div>']",['https://video.udacity-data.com/topher/2017/December/5a22d8c5_ud117-l1-browser-compatibility-table/ud117-l1-browser-compatibility-table.jpg'],https://www.youtube.com/embed/FjpYmoQlYgI,,,,,,,,,,,,,,,,,,,,,,
JavaScript and the DOM,JavaScript and the DOM,Lesson 1: The Document Object Model,1.8  Lesson Summary,[],[],https://www.youtube.com/embed/G7Je14a9svA,,,,,,,,,,,,,,,,,,,,,,
JavaScript and the DOM,JavaScript and the DOM,Lesson 2: Creating Content with JavaScript,2.1  Introduction,"['<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">A snapshot of Udacity\'s project repository</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">I have cloned the project</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">I understand that this project is <em class=""chakra-text css-o3oz8b"">just</em> the index page of the Udacity site.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">I understand that the code in this repo is not representative of how Udacity builds its site. ;-)</p></div>']",['https://video.udacity-data.com/topher/2020/April/5e9d7cca_screenshot-2020-04-20-at-4.05.17-pm/screenshot-2020-04-20-at-4.05.17-pm.png'],https://www.youtube.com/embed/leMPNA8okHk,,,,,,,,,,,,,,,,,,,,,,
JavaScript and the DOM,JavaScript and the DOM,Lesson 2: Creating Content with JavaScript,2.2  Update Existing Page Content,"['<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Let\'s jump right into it. Open up the project in your browser. There\'s only one HTML file (<code class=""chakra-code css-1u83yg1"">index.html</code>) so this is what it should look like after you open it:</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><em class=""chakra-text css-o3oz8b"">The index page of the Udacity website loaded in a browser.</em></p></div>', '<div class=""ureact-markdown css-tc5hjw""><blockquote class=""css-6jmydm"">\n<h3 class=""chakra-heading css-k57syw""><code class=""chakra-code css-1u83yg1"">index.html</code></h3>\n</blockquote>\n<br>\nThe `index.html` serves as a starter template for you to get started. There might be a slight mismatch between the actual content of `index.html` file downloaded from GitHub vs. the one shown in the demo. However, the mismatch would not block you from practicing the classroom instructions. </div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Write the DOM code necessary to select the <em class=""chakra-text css-o3oz8b"">first</em> element with class: <code class=""chakra-code css-1u83yg1"">card</code></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Let\'s store the first <code class=""chakra-code css-1u83yg1"">.card</code> element in a variable for easy access:</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-js"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">const</span><span> nanodegreeCard </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">=</span><span> </span><span class=""token dom"" style=""color: rgb(2, 124, 124);"">document</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token method property-access"" style=""color: rgb(153, 0, 0); font-weight: bold;"">querySelector</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'.card\'</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span></code></div></div></pre>\n<p class=""chakra-text css-o3oz8b"">Now that we\'ve stored the first card element in the <code class=""chakra-code css-1u83yg1"">nanodegreeCard</code> variable, we can use <code class=""chakra-code css-1u83yg1"">nanodegreeCard</code> to refer to this element instead of having to use <code class=""chakra-code css-1u83yg1"">document.querySelector(\'.card\')</code> to select the element every time we need access to it.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">What is <code class=""chakra-code css-1u83yg1"">.innerHTML</code>?</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">a property</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">a method</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">an element</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">an interface</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">What does <code class=""chakra-code css-1u83yg1"">.innerHTML</code> return?</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">a DOM element</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">a Node</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">a string</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">an array</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">an object</p></div>', '<div class=""ureact-markdown css-tc5hjw""><h3 class=""chakra-heading css-k57syw"">💡 Innie vs Outie 💡</h3>\n<p class=""chakra-text css-o3oz8b"">The <code class=""chakra-code css-1u83yg1"">.innerHTML</code> property sets or returns the HTML content <em class=""chakra-text css-o3oz8b"">inside</em> the selected element (i.e. between the tags).</p>\n<p class=""chakra-text css-o3oz8b"">There\'s also the rarely used <code class=""chakra-code css-1u83yg1"">.outerHTML</code> property. <code class=""chakra-code css-1u83yg1"">.outerHTML</code> represents the HTML element itself, <em class=""chakra-text css-o3oz8b"">as well as its children</em>.</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-js"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">&lt;</span><span>h1 id</span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">=</span><span class=""token"" style=""color: rgb(221, 17, 68);"">""pick-me""</span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">&gt;</span><span class=""token maybe-class-name"">Greetings</span><span> </span><span class=""token maybe-class-name"">To</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">&lt;</span><span>span</span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">&gt;</span><span class=""token maybe-class-name"">All</span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">&lt;</span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">/</span><span>span</span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">&gt;</span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">!</span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">&lt;</span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">/</span><span>h1</span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">&gt;</span><span>\n</span>\n<span></span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">const</span><span> innerResults </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">=</span><span> </span><span class=""token dom"" style=""color: rgb(2, 124, 124);"">document</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token method property-access"" style=""color: rgb(153, 0, 0); font-weight: bold;"">querySelector</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'#pick-me\'</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token property-access"">innerHTML</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span><span></span><span class=""token console"" style=""color: rgb(68, 85, 136); font-weight: bold;"">console</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token method property-access"" style=""color: rgb(153, 0, 0); font-weight: bold;"">log</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span>innerResults</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span> </span><span class=""token"" style=""color: rgb(113, 113, 101); font-style: italic;"">// logs the string: ""Greetings To &lt;span&gt;All&lt;/span&gt;!""</span><span>\n</span>\n<span></span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">const</span><span> outerResults </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">=</span><span> </span><span class=""token dom"" style=""color: rgb(2, 124, 124);"">document</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token method property-access"" style=""color: rgb(153, 0, 0); font-weight: bold;"">querySelector</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'#pick-me\'</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token property-access"">outerHTML</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span><span></span><span class=""token console"" style=""color: rgb(68, 85, 136); font-weight: bold;"">console</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token method property-access"" style=""color: rgb(153, 0, 0); font-weight: bold;"">log</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span>outerResults</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span> </span><span class=""token"" style=""color: rgb(113, 113, 101); font-style: italic;"">// logs the string: ""&lt;h1 id=""pick-me""&gt;Greetings To &lt;span&gt;All&lt;/span&gt;!&lt;/h1&gt;""</span></code></div></div></pre></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Check out the <code class=""chakra-code css-1u83yg1"">.textContent</code>\'s documentation page on MDN: <a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://developer.mozilla.org/en-US/docs/Web/API/Node/textContent"">textContent docs<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a></p>\n<p class=""chakra-text css-o3oz8b"">Setting an element\'s text content is easy, just set it like you would any other property:</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-js"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span>nanodegreeCard</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token property-access"">textContent</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">=</span><span> </span><span class=""token"" style=""color: rgb(221, 17, 68);"">""I will be the updated text for the nanodegreeCard element!""</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span></code></div></div></pre></div>', '<div class=""ureact-markdown css-tc5hjw""><pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-html"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span class=""token"" style=""color: rgb(15, 43, 61);"">&lt;</span><span class=""token"" style=""color: navy;"">h1</span><span class=""token"" style=""color: navy;""> </span><span class=""token"" style=""color: rgb(2, 124, 124);"">id</span><span class=""token attr-equals"" style=""color: rgb(15, 43, 61);"">=</span><span class=""token"" style=""color: rgb(15, 43, 61);"">""</span><span class=""token"" style=""color: rgb(221, 17, 68);"">test</span><span class=""token"" style=""color: rgb(15, 43, 61);"">""</span><span class=""token"" style=""color: rgb(15, 43, 61);"">&gt;</span><span>Ice Cream Flavors</span><span class=""token"" style=""color: rgb(15, 43, 61);"">&lt;/</span><span class=""token"" style=""color: navy;"">h1</span><span class=""token"" style=""color: rgb(15, 43, 61);"">&gt;</span></code></div></div></pre>\n<p class=""chakra-text css-o3oz8b"">Given the HTML above, what will be the <code class=""chakra-code css-1u83yg1"">.textContent</code> value after running this code:</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-js"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">const</span><span> myElement </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">=</span><span> </span><span class=""token dom"" style=""color: rgb(2, 124, 124);"">document</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token method property-access"" style=""color: rgb(153, 0, 0); font-weight: bold;"">querySelector</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'#test\'</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span><span>myElement</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token property-access"">textContent</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">=</span><span> </span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'The &lt;strong&gt;Greatest&lt;/strong&gt; Ice Cream Flavors\'</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span></code></div></div></pre></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Ice Cream Flavors</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">The Greatest Ice Cream Flavors</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">The &lt; strong &gt;Greatest&lt;/ strong &gt; Ice Cream Flavors</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">running this code will cause an error</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">We just saw that passing text that contains HTML characters to <code class=""chakra-code css-1u83yg1"">.textContent</code> will not display the content as HTML. Instead, it will still display everything as text - even the HTML characters!</p>\n<p class=""chakra-text css-o3oz8b"">If you\'d like to update an element, <em class=""chakra-text css-o3oz8b"">including</em> its HTML, then you need to use the <code class=""chakra-code css-1u83yg1"">.innerHTML</code> property:</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-js"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span>myElement</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token property-access"">textContent</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">=</span><span> </span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'The &lt;strong&gt;Greatest&lt;/strong&gt; Ice Cream Flavors\'</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span> </span><span class=""token"" style=""color: rgb(113, 113, 101); font-style: italic;"">// doesn\'t work as expected</span><span>\n</span>\n<span>myElement</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token property-access"">innerHTML</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">=</span><span> </span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'The &lt;strong&gt;Greatest&lt;/strong&gt; Ice Cream Flavors\'</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>  </span><span class=""token"" style=""color: rgb(113, 113, 101); font-style: italic;"">// works as expected</span></code></div></div></pre></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">As you saw, <code class=""chakra-code css-1u83yg1"">.innerText</code> will get the <em class=""chakra-text css-o3oz8b"">visible</em> text of the element. This is an important distinction! If CSS is used to hide any text inside that element, <code class=""chakra-code css-1u83yg1"">.innerText</code> <em class=""chakra-text css-o3oz8b"">will not</em> return that text, while <code class=""chakra-code css-1u83yg1"">.textContent</code> <em class=""chakra-text css-o3oz8b"">will</em> return it. And it\'s not just the hiding/showing nature of CSS that <code class=""chakra-code css-1u83yg1"">.innerText</code> adheres to, <code class=""chakra-code css-1u83yg1"">.innerText</code> will also honor changes to things like capitalization.</p>\n<p class=""chakra-text css-o3oz8b"">The <code class=""chakra-code css-1u83yg1"">.textContent</code> property has been a standard for quite a long time. Conversely, <code class=""chakra-code css-1u83yg1"">.innerText</code> property is a relatively new addition to the HTML specification. It has been around for a while but was not fully supported by all browsers because it was not a part of the HTML specification.</p>\n<p class=""chakra-text css-o3oz8b"">Between <code class=""chakra-code css-1u83yg1"">.textContent</code> and <code class=""chakra-code css-1u83yg1"">.innerText</code>, you probably want to use <code class=""chakra-code css-1u83yg1"">.textContent</code> since that will return all of the text no matter what. Rarely will you actually want <em class=""chakra-text css-o3oz8b"">only</em> the <em class=""chakra-text css-o3oz8b"">visible</em> text.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><h3 class=""chakra-heading css-k57syw"">Further Research</h3>\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://developer.mozilla.org/en-US/docs/Web/API/Element/innerHTML"">innerHTML on MDN<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a></li><li class=""css-cvpopp""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://developer.mozilla.org/en-US/docs/Web/API/Node/textContent"">textContent on MDN<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a></li><li class=""css-cvpopp""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://developer.mozilla.org/en-US/docs/Web/API/Node/innerText"">innerText on MDN<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a></li><li class=""css-cvpopp""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""http://perfectionkills.com/the-poor-misunderstood-innerText/"">Article: The poor, misunderstood innerText<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a></li><li class=""css-cvpopp""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://kellegous.com/j/2013/02/27/innertext-vs-textcontent/"">Article: innertext vs. textcontent<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a></li></ul></div>']",['https://video.udacity-data.com/topher/2017/December/5a22e14b_ud117-l1-project/ud117-l1-project.jpg'],https://www.youtube.com/embed/J_e_k_e__LM,,,,,,,,,,,,,,,,,,,,,,
JavaScript and the DOM,JavaScript and the DOM,Lesson 2: Creating Content with JavaScript,2.3  Add New Page Content,"['<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">You\'ve learned about the <code class=""chakra-code css-1u83yg1"">document</code> object, the Node Interface, and the Element interface. Where does .createElement() come from?</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">the <code class=""chakra-code css-1u83yg1"">document</code> object</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">the Element interface</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">the Node interface</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">from another, as-of-yet unintroduced way</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">What is the URL for the ""createElement"" page on MDN?</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Which of the following would create a new paragraph element?</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><code class=""chakra-code css-1u83yg1"">document.createElement(\'p\');</code></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><code class=""chakra-code css-1u83yg1"">document.createElement(p);</code></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><code class=""chakra-code css-1u83yg1"">element.createElement(\'p\');</code></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><code class=""chakra-code css-1u83yg1"">element.createElement(\'paragraph\');</code></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">As you\'ve already discovered, the <code class=""chakra-code css-1u83yg1"">.createElement()</code> method is a method on the <code class=""chakra-code css-1u83yg1"">document</code> object:</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-js"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span class=""token"" style=""color: rgb(113, 113, 101); font-style: italic;"">// creates and returns a &lt;span&gt; element</span><span>\n</span><span></span><span class=""token dom"" style=""color: rgb(2, 124, 124);"">document</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token method property-access"" style=""color: rgb(153, 0, 0); font-weight: bold;"">createElement</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'span\'</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span>\n<span></span><span class=""token"" style=""color: rgb(113, 113, 101); font-style: italic;"">// creates and returns an &lt;h3&gt; element</span><span>\n</span><span></span><span class=""token dom"" style=""color: rgb(2, 124, 124);"">document</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token method property-access"" style=""color: rgb(153, 0, 0); font-weight: bold;"">createElement</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'h3\'</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span></code></div></div></pre>\n<p class=""chakra-text css-o3oz8b"">Here\'s the <code class=""chakra-code css-1u83yg1"">.createElement()</code> documentation page on MDN: <a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://developer.mozilla.org/en-US/docs/Web/API/Document/createElement"">createElement docs<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">What happens after running this code?</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-js"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">const</span><span> mainHeading </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">=</span><span> </span><span class=""token dom"" style=""color: rgb(2, 124, 124);"">document</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token method property-access"" style=""color: rgb(153, 0, 0); font-weight: bold;"">querySelector</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'#main-heading\'</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">const</span><span> otherHeading </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">=</span><span> </span><span class=""token dom"" style=""color: rgb(2, 124, 124);"">document</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token method property-access"" style=""color: rgb(153, 0, 0); font-weight: bold;"">querySelector</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'#other-heading\'</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">const</span><span> excitedText </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">=</span><span> </span><span class=""token dom"" style=""color: rgb(2, 124, 124);"">document</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token method property-access"" style=""color: rgb(153, 0, 0); font-weight: bold;"">createElement</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'span\'</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span>\n<span>excitedText</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token property-access"">textContent</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">=</span><span> </span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'!!!\'</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span><span>mainHeading</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token method property-access"" style=""color: rgb(153, 0, 0); font-weight: bold;"">appendChild</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span>excitedText</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span><span>otherHeading</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token method property-access"" style=""color: rgb(153, 0, 0); font-weight: bold;"">appendChild</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span>excitedText</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span></code></div></div></pre>\n<p class=""chakra-text css-o3oz8b"">Don\'t guess it, test it! This one might surprise you!</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">only <code class=""chakra-code css-1u83yg1"">mainHeading</code> has three exclamation marks</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">only <code class=""chakra-code css-1u83yg1"">otherHeading</code> has three exclamation marks</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">both headings have three exclamation marks</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">neither has any exclamation marks</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">At 0:22 seconds, the instructor says ""<em class=""chakra-text css-o3oz8b"">... this has to be text, not HTML. If you pass HTML, then that HTML will actually be displayed</em>"". There is a correction:</p>\n<blockquote class=""css-6jmydm"">\n<p class=""chakra-text css-o3oz8b"">The second argument <em class=""chakra-text css-o3oz8b"">text</em> of <code class=""chakra-code css-1u83yg1"">insertAdjacentHTML()</code> method parses the specified <em class=""chakra-text css-o3oz8b"">text</em> as HTML and inserts the resulting nodes into the DOM tree at a specified position.</p>\n</blockquote></div>', '<div class=""ureact-markdown css-tc5hjw""><h3 class=""chakra-heading css-k57syw"">Further Research</h3>\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://developer.mozilla.org/en-US/docs/Web/API/Document/createElement"">createElement on MDN<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a></li><li class=""css-cvpopp""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://developer.mozilla.org/en-US/docs/Web/API/Document/createTextNode"">createTextNode on MDN<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a></li><li class=""css-cvpopp""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://developer.mozilla.org/en-US/docs/Web/API/Node/appendChild"">appendChild on MDN<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a></li><li class=""css-cvpopp""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://developer.mozilla.org/en-US/docs/Web/API/Element/insertAdjacentHTML"">insertAdjacentHTML on MDN<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a></li></ul></div>']",[],https://www.youtube.com/embed/HE278gUprhU,,,,,,,,,,,,,,,,,,,,,,
JavaScript and the DOM,JavaScript and the DOM,Lesson 2: Creating Content with JavaScript,2.4  Remove Page Content,"['<div class=""ureact-markdown css-tc5hjw""><h3 class=""chakra-heading css-k57syw"">A drawback (and workaround!) with the <code class=""chakra-code css-1u83yg1"">.removeChild()</code> Method</h3>\n<p class=""chakra-text css-o3oz8b"">Just like the <code class=""chakra-code css-1u83yg1"">.appendChild()</code> method, there\'s a (somewhat minor) drawback to the <code class=""chakra-code css-1u83yg1"">.removeChild()</code> method. Both methods:</p>\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp"">require access to parent to function</li></ul>\n<p class=""chakra-text css-o3oz8b"">However, we don\'t actually need to have the parent element because there is a workaround! Just like the <code class=""chakra-code css-1u83yg1"">.firstElementChild</code> property can be called on a parent element to access its first element, every element also has a <code class=""chakra-code css-1u83yg1"">parentElement</code> property that refers to its parent! So if we have access to the child element that we\'re about to add or remove, you can use the <code class=""chakra-code css-1u83yg1"">parentElement</code> property to ""move focus"" to the element\'s parent. Then we can call <code class=""chakra-code css-1u83yg1"">.removeChild()</code> (or <code class=""chakra-code css-1u83yg1"">.appendChild()</code>) on that referenced parent element.</p>\n<p class=""chakra-text css-o3oz8b"">Let\'s look at an example:</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-js"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">const</span><span> mainHeading </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">=</span><span> </span><span class=""token dom"" style=""color: rgb(2, 124, 124);"">document</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token method property-access"" style=""color: rgb(153, 0, 0); font-weight: bold;"">querySelector</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'h1\'</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span>\n<span>mainHeading</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token property-access"">parentElement</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token method property-access"" style=""color: rgb(153, 0, 0); font-weight: bold;"">removeChild</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span>mainHeading</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span></code></div></div></pre>\n<p class=""chakra-text css-o3oz8b"">Let\'s walk through this code.</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-js"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">const</span><span> mainHeading </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">=</span><span> </span><span class=""token dom"" style=""color: rgb(2, 124, 124);"">document</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token method property-access"" style=""color: rgb(153, 0, 0); font-weight: bold;"">querySelector</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'h1\'</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span></code></div></div></pre>\n<p class=""chakra-text css-o3oz8b"">The preceding code will select the first <code class=""chakra-code css-1u83yg1"">&lt;h1&gt;</code> on the page and stores it in the <code class=""chakra-code css-1u83yg1"">mainHeading</code> variable. Now to the next line:</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-js"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span>mainHeading</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token property-access"">parentElement</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token method property-access"" style=""color: rgb(153, 0, 0); font-weight: bold;"">removeChild</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span>mainHeading</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span></code></div></div></pre>\n<p class=""chakra-text css-o3oz8b"">This starts with the <code class=""chakra-code css-1u83yg1"">mainHeading</code> variable. It calls <code class=""chakra-code css-1u83yg1"">.parentElement</code>, so the focus of the next code is directed at the parent element. Then <code class=""chakra-code css-1u83yg1"">.removeChild()</code> is called on the parent element. Finally, <code class=""chakra-code css-1u83yg1"">mainHeading</code> itself is passed as the element that needs to be removed from its parent.</p>\n<p class=""chakra-text css-o3oz8b"">So an element uses itself to remove itself from its parent. Pretty cool, huh?</p></div>', '<div class=""ureact-markdown css-tc5hjw""><h3 class=""chakra-heading css-k57syw"">Further Research</h3>\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://developer.mozilla.org/en-US/docs/Web/API/Node/removeChild"">removeChild on MDN<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a></li><li class=""css-cvpopp""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://developer.mozilla.org/en-US/docs/Web/API/ChildNode/remove"">remove on MDN<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a></li><li class=""css-cvpopp""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://developer.mozilla.org/en-US/docs/Web/API/Node/firstChild"">firstChild on MDN<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a></li><li class=""css-cvpopp""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://developer.mozilla.org/en-US/docs/Web/API/ParentNode/firstElementChild"">firstElementChild on MDN<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a></li><li class=""css-cvpopp""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://developer.mozilla.org/en-US/docs/Web/API/Node/parentElement"">parentElement on MDN<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a></li></ul></div>']",[],https://www.youtube.com/embed/xeLZabb-nXc,,,,,,,,,,,,,,,,,,,,,,
JavaScript and the DOM,JavaScript and the DOM,Lesson 2: Creating Content with JavaScript,2.5  Style Page Content,"['<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">In this section, we\'ll be looking at controlling page and element styling using the following properties and methods:</p>\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp""><code class=""chakra-code css-1u83yg1"">.style.&lt;prop&gt;</code></li><li class=""css-cvpopp""><code class=""chakra-code css-1u83yg1"">.cssText</code></li><li class=""css-cvpopp""><code class=""chakra-code css-1u83yg1"">.setAttribute()</code></li><li class=""css-cvpopp""><code class=""chakra-code css-1u83yg1"">.className</code></li><li class=""css-cvpopp""><code class=""chakra-code css-1u83yg1"">.classList</code></li></ul></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Before we begin, put these in the correct order of CSS specificity. Put the least-specific option at the top and the most-specific option at the bottom.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">rules in a stylesheet</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">rules in a tag\'s style attribute</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">rules in a <code class=""chakra-code css-1u83yg1"">&lt;style&gt;</code> tag</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Least specific</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">More specific</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Most specific</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Why do you think it has to be <code class=""chakra-code css-1u83yg1"">fontSize</code>? Why would <code class=""chakra-code css-1u83yg1"">font-size</code> not work?</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Write the JavaScript code to set the width of element to 50%;</p></div>', '<div class=""ureact-markdown css-tc5hjw""><pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-html"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span class=""token"" style=""color: rgb(15, 43, 61);"">&lt;</span><span class=""token"" style=""color: navy;"">p</span><span class=""token"" style=""color: navy;""> </span><span class=""token"" style=""color: rgb(2, 124, 124);"">id</span><span class=""token attr-equals"" style=""color: rgb(15, 43, 61);"">=</span><span class=""token"" style=""color: rgb(15, 43, 61);"">""</span><span class=""token"" style=""color: rgb(221, 17, 68);"">quizzing-quizzes</span><span class=""token"" style=""color: rgb(15, 43, 61);"">""</span><span class=""token"" style=""color: navy;""> </span><span class=""token special-attr"" style=""color: rgb(2, 124, 124);"">style</span><span class=""token special-attr attr-equals"" style=""color: rgb(15, 43, 61);"">=</span><span class=""token special-attr"" style=""color: rgb(15, 43, 61);"">""</span><span class=""token special-attr value css language-css"" style=""color: rgb(221, 17, 68);"">color</span><span class=""token special-attr value css language-css"" style=""color: rgb(221, 17, 68);"">:</span><span class=""token special-attr value css language-css"" style=""color: rgb(221, 17, 68);""> </span><span class=""token special-attr value css language-css color"" style=""color: rgb(221, 17, 68);"">orange</span><span class=""token special-attr value css language-css"" style=""color: rgb(221, 17, 68);"">;</span><span class=""token special-attr"" style=""color: rgb(15, 43, 61);"">""</span><span class=""token"" style=""color: rgb(15, 43, 61);"">&gt;</span><span>Howdy</span><span class=""token"" style=""color: rgb(15, 43, 61);"">&lt;/</span><span class=""token"" style=""color: navy;"">p</span><span class=""token"" style=""color: rgb(15, 43, 61);"">&gt;</span></code></div></div></pre>\n<p class=""chakra-text css-o3oz8b"">For the element above, which of the following styles will be applied after running this code?</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-js"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span class=""token dom"" style=""color: rgb(2, 124, 124);"">document</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token method property-access"" style=""color: rgb(153, 0, 0); font-weight: bold;"">querySelector</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'#quizzing-quizzes\'</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token property-access"">style</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token property-access"">cssText</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">=</span><span> </span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'width: 30px; textDecoration: underline;\'</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span></code></div></div></pre></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">color</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">text-decoration</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">width</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">none</p></div>', '<div class=""ureact-markdown css-tc5hjw""><h3 class=""chakra-heading css-k57syw""><code class=""chakra-code css-1u83yg1"">.setAttribute()</code> Is Not Just For Styling</h3>\n<p class=""chakra-text css-o3oz8b"">The <code class=""chakra-code css-1u83yg1"">setAttribute()</code> method is not <em class=""chakra-text css-o3oz8b"">just</em> for styling page elements. You can use this method to set <em class=""chakra-text css-o3oz8b"">any</em> attribute for an element. If you want to give an element an ID, you can do that!:</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-js"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">const</span><span> mainHeading </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">=</span><span> </span><span class=""token dom"" style=""color: rgb(2, 124, 124);"">document</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token method property-access"" style=""color: rgb(153, 0, 0); font-weight: bold;"">querySelector</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'h1\'</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span>\n<span></span><span class=""token"" style=""color: rgb(113, 113, 101); font-style: italic;"">// add an ID to the heading\'s sibling element</span><span>\n</span><span>mainHeading</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token property-access"">nextElementSibling</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token method property-access"" style=""color: rgb(153, 0, 0); font-weight: bold;"">setAttribute</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'id\'</span><span class=""token"" style=""color: rgb(15, 43, 61);"">,</span><span> </span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'heading-sibling\'</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span>\n<span></span><span class=""token"" style=""color: rgb(113, 113, 101); font-style: italic;"">// use the newly added ID to access that element</span><span>\n</span><span></span><span class=""token dom"" style=""color: rgb(2, 124, 124);"">document</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token method property-access"" style=""color: rgb(153, 0, 0); font-weight: bold;"">querySelector</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'#heading-sibling\'</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token property-access"">style</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token property-access"">backgroundColor</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">=</span><span> </span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'red\'</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span></code></div></div></pre>\n<p class=""chakra-text css-o3oz8b"">The last two lines could\'ve been combined into one to bypass setting an ID and just styling the element directly:</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-js"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span>mainHeading</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token property-access"">nextElementSibling</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token property-access"">style</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token property-access"">backgroundColor</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">=</span><span> </span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'red\'</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span></code></div></div></pre>\n<p class=""chakra-text css-o3oz8b"">...but this was just to demonstrate that it\'s possible to set an attribute with JavaScript that affects the DOM which then can be used immediately</p></div>', '<div class=""ureact-markdown css-tc5hjw""><h3 class=""chakra-heading css-k57syw"">The <code class=""chakra-code css-1u83yg1"">.classList</code> Property</h3>\n<p class=""chakra-text css-o3oz8b"">The <code class=""chakra-code css-1u83yg1"">.classList</code> property is newer than the <code class=""chakra-code css-1u83yg1"">.className</code> property, but is much nicer, check it out:</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-html"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span class=""token"" style=""color: rgb(15, 43, 61);"">&lt;</span><span class=""token"" style=""color: navy;"">h1</span><span class=""token"" style=""color: navy;""> </span><span class=""token"" style=""color: rgb(2, 124, 124);"">id</span><span class=""token attr-equals"" style=""color: rgb(15, 43, 61);"">=</span><span class=""token"" style=""color: rgb(15, 43, 61);"">""</span><span class=""token"" style=""color: rgb(221, 17, 68);"">main-heading</span><span class=""token"" style=""color: rgb(15, 43, 61);"">""</span><span class=""token"" style=""color: navy;""> </span><span class=""token"" style=""color: rgb(2, 124, 124);"">class</span><span class=""token attr-equals"" style=""color: rgb(15, 43, 61);"">=</span><span class=""token"" style=""color: rgb(15, 43, 61);"">""</span><span class=""token"" style=""color: rgb(221, 17, 68);"">ank-student jpk-modal</span><span class=""token"" style=""color: rgb(15, 43, 61);"">""</span><span class=""token"" style=""color: rgb(15, 43, 61);"">&gt;</span><span>Learn Web Development at Udacity</span><span class=""token"" style=""color: rgb(15, 43, 61);"">&lt;/</span><span class=""token"" style=""color: navy;"">h1</span><span class=""token"" style=""color: rgb(15, 43, 61);"">&gt;</span></code></div></div></pre>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-js"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">const</span><span> mainHeading </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">=</span><span> </span><span class=""token dom"" style=""color: rgb(2, 124, 124);"">document</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token method property-access"" style=""color: rgb(153, 0, 0); font-weight: bold;"">querySelector</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'#main-heading\'</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span>\n<span></span><span class=""token"" style=""color: rgb(113, 113, 101); font-style: italic;"">// store the list of classes in a variable</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">const</span><span> listOfClasses </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">=</span><span> mainHeading</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token property-access"">classList</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span>\n<span></span><span class=""token"" style=""color: rgb(113, 113, 101); font-style: italic;"">// logs out [""ank-student"", ""jpk-modal""]</span><span>\n</span><span></span><span class=""token console"" style=""color: rgb(68, 85, 136); font-weight: bold;"">console</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token method property-access"" style=""color: rgb(153, 0, 0); font-weight: bold;"">log</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span>listOfClasses</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span></code></div></div></pre>\n<p class=""chakra-text css-o3oz8b"">Check out the documentation page on MDN: <a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://developer.mozilla.org/en-US/docs/Web/API/Element/classList"">classList docs<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Review the <a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://developer.mozilla.org/en-US/docs/Web/API/Element/classList"">classList property\'s documentation<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a>. What data structure does the <code class=""chakra-code css-1u83yg1"">.classList</code> property return?</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">an array</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">a NodeList</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">a DOMTokenList</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">an ElementList</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">The <code class=""chakra-code css-1u83yg1"">.classList</code> property has a number of properties of its own. Some of the most popularly used ones are:</p>\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp""><code class=""chakra-code css-1u83yg1"">.add()</code> - to add a class to the list</li><li class=""css-cvpopp""><code class=""chakra-code css-1u83yg1"">.remove()</code> - to remove a class from the list</li><li class=""css-cvpopp""><code class=""chakra-code css-1u83yg1"">.toggle()</code> - to add the class if it doesn\'t exists or remove it from the list if it does already exist</li><li class=""css-cvpopp""><code class=""chakra-code css-1u83yg1"">.contains()</code> - returns a boolean based on if the class exists in the list or not</li></ul>\n<p class=""chakra-text css-o3oz8b"">Let\'s take a look!</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">What happens if you try to toggle a nonexistent class? For example, if you had this HTML:</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-html"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span class=""token"" style=""color: rgb(15, 43, 61);"">&lt;</span><span class=""token"" style=""color: navy;"">h1</span><span class=""token"" style=""color: navy;""> </span><span class=""token"" style=""color: rgb(2, 124, 124);"">id</span><span class=""token attr-equals"" style=""color: rgb(15, 43, 61);"">=</span><span class=""token"" style=""color: rgb(15, 43, 61);"">""</span><span class=""token"" style=""color: rgb(221, 17, 68);"">main-heading</span><span class=""token"" style=""color: rgb(15, 43, 61);"">""</span><span class=""token"" style=""color: navy;""> </span><span class=""token"" style=""color: rgb(2, 124, 124);"">class</span><span class=""token attr-equals"" style=""color: rgb(15, 43, 61);"">=</span><span class=""token"" style=""color: rgb(15, 43, 61);"">""</span><span class=""token"" style=""color: rgb(221, 17, 68);"">ank-student jpk-modal</span><span class=""token"" style=""color: rgb(15, 43, 61);"">""</span><span class=""token"" style=""color: rgb(15, 43, 61);"">&gt;</span><span>Learn Web Development at Udacity</span><span class=""token"" style=""color: rgb(15, 43, 61);"">&lt;/</span><span class=""token"" style=""color: navy;"">h1</span><span class=""token"" style=""color: rgb(15, 43, 61);"">&gt;</span></code></div></div></pre>\n<p class=""chakra-text css-o3oz8b"">...what would happen after running the following JavaScript:</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-js"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">const</span><span> mainHeading </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">=</span><span> </span><span class=""token dom"" style=""color: rgb(2, 124, 124);"">document</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token method property-access"" style=""color: rgb(153, 0, 0); font-weight: bold;"">querySelector</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'#main-heading\'</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span>\n<span>mainHeading</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token property-access"">classList</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token method property-access"" style=""color: rgb(153, 0, 0); font-weight: bold;"">toggle</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'richard\'</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span></code></div></div></pre></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">the <code class=""chakra-code css-1u83yg1"">richard</code> class is added to the list of classes</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">the <code class=""chakra-code css-1u83yg1"">richard</code> class is not added to the list; the existing list of classes remains the same</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">the <code class=""chakra-code css-1u83yg1"">richard</code> class replaces the other classes</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">an error happens</p></div>', '<div class=""ureact-markdown css-tc5hjw""><h3 class=""chakra-heading css-k57syw"">Further Research</h3>\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/style"">style on MDN<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a></li><li class=""css-cvpopp""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://developer.mozilla.org/en-US/docs/Web/API/CSS_Object_Model/Using_dynamic_styling_information"">Article: Using dynamic styling information<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a></li><li class=""css-cvpopp""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://developer.mozilla.org/en-US/docs/Web/CSS/Reference#DOM-CSS_CSSOM"">DOM methods to control styling<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a></li><li class=""css-cvpopp""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://developer.mozilla.org/en-US/docs/Web/API/NonDocumentTypeChildNode/nextElementSibling"">nextElementSibling on MDN<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a></li><li class=""css-cvpopp""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://developer.mozilla.org/en-US/docs/Web/API/Element/className"">className on MDN<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a></li><li class=""css-cvpopp""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://developer.mozilla.org/en-US/docs/Web/API/Element/classList"">classList on MDN<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a></li><li class=""css-cvpopp""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://developer.mozilla.org/en-US/docs/Web/CSS/Specificity"">Specificity on MDN<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a></li></ul></div>']",[],https://www.youtube.com/embed/gnEj1o58o_8,,,,,,,,,,,,,,,,,,,,,,
JavaScript and the DOM,JavaScript and the DOM,Lesson 2: Creating Content with JavaScript,2.6  Lesson Summary,[],[],https://www.youtube.com/embed/_iWc_IwatOc,,,,,,,,,,,,,,,,,,,,,,
JavaScript and the DOM,JavaScript and the DOM,Lesson 3: Working with Browser Events,3.1  Introduction,"['<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">In this video, you saw the following events:</p>\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp""><code class=""chakra-code css-1u83yg1"">click</code></li><li class=""css-cvpopp""><code class=""chakra-code css-1u83yg1"">dblclick</code></li><li class=""css-cvpopp""><code class=""chakra-code css-1u83yg1"">scroll</code></li><li class=""css-cvpopp""><code class=""chakra-code css-1u83yg1"">resize</code></li></ul>\n<p class=""chakra-text css-o3oz8b"">However, there are <em class=""chakra-text css-o3oz8b"">hundreds</em> more!</p>\n<p class=""chakra-text css-o3oz8b"">The monitorEvents function will keep spitting out all of the events that are happening on the targeted element until the end of time...that, or until you refresh the page. Alternatively, the Chrome browser <em class=""chakra-text css-o3oz8b"">does</em> offer an <code class=""chakra-code css-1u83yg1"">unmonitorEvents()</code> function that will turn off the announcing of events for the targeted element:</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-js"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span class=""token"" style=""color: rgb(113, 113, 101); font-style: italic;"">// start displaying all events on the document object</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">monitorEvents</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token dom"" style=""color: rgb(2, 124, 124);"">document</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span>\n<span></span><span class=""token"" style=""color: rgb(113, 113, 101); font-style: italic;"">// turn off the displaying of all events on the document object.</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">unmonitorEvents</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token dom"" style=""color: rgb(2, 124, 124);"">document</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span></code></div></div></pre>\n<p class=""chakra-text css-o3oz8b"">One last little bit of info on <code class=""chakra-code css-1u83yg1"">monitorEvents</code> is that this is for development/testing purposes only. It\'s not supposed to be used for production code.</p></div>']",[],https://www.youtube.com/embed/UtJyZeapAsc,,,,,,,,,,,,,,,,,,,,,,
JavaScript and the DOM,JavaScript and the DOM,Lesson 3: Working with Browser Events,3.2  Respond to Events,"['<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><em class=""chakra-text css-o3oz8b"">The EventTarget Interface is inherited by all nodes and elements.</em></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">The <a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://developer.mozilla.org/en-US/docs/Web/API/EventTarget"">EventTarget page<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a> says that EventTarget:</p>\n<blockquote class=""css-6jmydm"">\n<p class=""chakra-text css-o3oz8b"">is an interface implemented by objects that can receive events and may have listeners for them.</p>\n</blockquote>\n<p class=""chakra-text css-o3oz8b"">and</p>\n<blockquote class=""css-6jmydm"">\n<p class=""chakra-text css-o3oz8b"">Element, document, and window are the most common event targets, but other objects can be event targets too…</p>\n</blockquote>\n<p class=""chakra-text css-o3oz8b"">As you can see from the image above, the EventTarget is at the top of the chain. This means that it does not inherit any properties or methods from any other interfaces. However, every other interface inherits from it and therefore contain its properties and methods. This means that each of the following is an ""event target"";</p>\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp"">the <code class=""chakra-code css-1u83yg1"">document</code> object</li><li class=""css-cvpopp"">a paragraph element</li><li class=""css-cvpopp"">a video element</li><li class=""css-cvpopp"">etc.</li></ul>\n<p class=""chakra-text css-o3oz8b"">Remember that both the <em class=""chakra-text css-o3oz8b""><strong>document</strong></em> object and <em class=""chakra-text css-o3oz8b""><strong>any DOM element</strong></em> can be an event target. And again, why is this?...because both the Element Interface and the Document Interface inherit from the EventTarget Interface. So any individual element inherits from the Element Interface, which in turn inherits from the EventTarget Interface. Likewise, the document object comes from the Document Interface, which in turn inherits from the EventTarget Interface.</p>\n<p class=""chakra-text css-o3oz8b"">If you take a look at the EventTarget Interface, you\'ll notice that it doesn\'t have <em class=""chakra-text css-o3oz8b"">any</em> properties and only three methods! These methods are:</p>\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp""><code class=""chakra-code css-1u83yg1"">.addEventListener()</code></li><li class=""css-cvpopp""><code class=""chakra-code css-1u83yg1"">.removeEventListener()</code></li><li class=""css-cvpopp""><code class=""chakra-code css-1u83yg1"">.dispatchEvent()</code></li></ul>\n<p class=""chakra-text css-o3oz8b"">The one that we\'ll be looking at for the rest of this course will be the <code class=""chakra-code css-1u83yg1"">.addEventListener()</code> method.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">In the following code, what is the <em class=""chakra-text css-o3oz8b"">event type</em>?</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-js"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">const</span><span> lotsOfElements </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">=</span><span> </span><span class=""token dom"" style=""color: rgb(2, 124, 124);"">document</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token method property-access"" style=""color: rgb(153, 0, 0); font-weight: bold;"">querySelectorAll</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'.quizzing-quizzby\'</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">const</span><span> element </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">=</span><span> lotsOfElements</span><span class=""token"" style=""color: rgb(15, 43, 61);"">[</span><span class=""token"" style=""color: rgb(2, 124, 124);"">2</span><span class=""token"" style=""color: rgb(15, 43, 61);"">]</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span>\n<span>element</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token method property-access"" style=""color: rgb(153, 0, 0); font-weight: bold;"">addEventListener</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'animationend\'</span><span class=""token"" style=""color: rgb(15, 43, 61);"">,</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">function</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">{</span><span>\n</span><span>    </span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">const</span><span> mainHeading </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">=</span><span> </span><span class=""token dom"" style=""color: rgb(2, 124, 124);"">document</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token method property-access"" style=""color: rgb(153, 0, 0); font-weight: bold;"">querySelector</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'h1\'</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span>\n<span>    mainHeading</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token property-access"">style</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token property-access"">backgroundColor</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">=</span><span> </span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'purple\'</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span> \n</span><span></span><span class=""token"" style=""color: rgb(15, 43, 61);"">}</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span></code></div></div></pre></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">The third element with the class <code class=""chakra-code css-1u83yg1"">quizzing-quizzby</code></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">The first <code class=""chakra-code css-1u83yg1"">&lt;h1&gt;</code> on the page</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">The string <code class=""chakra-code css-1u83yg1"">animationend</code></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">The function that changes the first heading\'s background to purple</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Given this code:</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-js"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span class=""token dom"" style=""color: rgb(2, 124, 124);"">document</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token method property-access"" style=""color: rgb(153, 0, 0); font-weight: bold;"">addEventListener</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'keypress\'</span><span class=""token"" style=""color: rgb(15, 43, 61);"">,</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">function</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">{</span><span>\n</span><span>    </span><span class=""token dom"" style=""color: rgb(2, 124, 124);"">document</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token property-access"">body</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token method property-access"" style=""color: rgb(153, 0, 0); font-weight: bold;"">remove</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(15, 43, 61);"">}</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span></code></div></div></pre>\n<p class=""chakra-text css-o3oz8b"">What will happen if the mouse is used to click the page?</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">nothing</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">the <code class=""chakra-code css-1u83yg1"">&lt;body&gt;</code> element would be removed</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">an error would occur</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">a warning would be logged to the console</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Now it\'s your turn to write an event listener!</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">go to one of your favorite sites</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">open the Console pane in DevTools</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">use <code class=""chakra-code css-1u83yg1"">.addEventListener()</code> to register a listener on the <code class=""chakra-code css-1u83yg1"">document</code> object</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">listen for a click event</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">when a click happens, log a message to the console</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Think about these interfaces:</p>\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp"">EventTarget</li><li class=""css-cvpopp"">Node</li><li class=""css-cvpopp"">Element</li></ul>\n<p class=""chakra-text css-o3oz8b"">Is there a difference between these two:</p>\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp""><code class=""chakra-code css-1u83yg1"">document.addEventListener()</code></li><li class=""css-cvpopp""><code class=""chakra-code css-1u83yg1"">myHeading.addEventListener()</code> (assume the <code class=""chakra-code css-1u83yg1"">myHeading</code> variable is an element)</li></ul></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">So far, we\'ve only looked at the <code class=""chakra-code css-1u83yg1"">""click""</code> event and a couple of other ones. When we used the <code class=""chakra-code css-1u83yg1"">monitorEvents()</code> function in the previous section, we saw a number of different event types (e.g. <code class=""chakra-code css-1u83yg1"">dblclick</code>, <code class=""chakra-code css-1u83yg1"">scroll</code>, <code class=""chakra-code css-1u83yg1"">resize</code>).</p>\n<p class=""chakra-text css-o3oz8b"">How do you know what events are even out there to listen for? The answer is easy - documentation! To see a full list of all of the possible events you can listen for, check out the Events documentation: <a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://developer.mozilla.org/en-US/docs/Web/Events"">list of events<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a></p></div>', '<div class=""ureact-markdown css-tc5hjw""><h3 class=""chakra-heading css-k57syw"">Further Research</h3>\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener"">addEventListener on MDN<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a></li><li class=""css-cvpopp""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://developer.mozilla.org/en-US/docs/Web/API/EventTarget"">EventTarget Interface<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a></li><li class=""css-cvpopp""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events"">Introduction to events<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a></li></ul></div>']",['https://video.udacity-data.com/topher/2017/December/5a22d197_ud117-l1-interface-chain/ud117-l1-interface-chain.jpg'],https://www.youtube.com/embed/bj4Lrxdx9Vo,,,,,,,,,,,,,,,,,,,,,,
JavaScript and the DOM,JavaScript and the DOM,Lesson 3: Working with Browser Events,3.3  Remove an Event Listener,"['<div class=""ureact-markdown css-tc5hjw""><h3 class=""chakra-heading css-k57syw"">Are Objects Equal in JavaScript</h3>\n<p class=""chakra-text css-o3oz8b"">Equality is a common task in most programming languages, but in JavaScript, it can be a little bit tricky because JavaScript does this thing called type coercion where it will try to convert the items being compared into the same type. (e.g. string, number,). JavaScript has the double equality (<code class=""chakra-code css-1u83yg1"">==</code>) operator that <em class=""chakra-text css-o3oz8b"">will allow type coercion</em>. It also has the triple equality (<code class=""chakra-code css-1u83yg1"">===</code>) symbol that will prevent type coercion when comparing.</p>\n<p class=""chakra-text css-o3oz8b"">Hopefully, this is all review. But let\'s talk about <em class=""chakra-text css-o3oz8b"">just</em> object equality, which includes objects, arrays, and functions. Try giving this quiz a shot:</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Will the following equality test result in <code class=""chakra-code css-1u83yg1"">true</code> or <code class=""chakra-code css-1u83yg1"">false</code>?</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-js"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span class=""token"" style=""color: rgb(15, 43, 61);"">{</span><span> </span><span class=""token literal-property"" style=""color: rgb(2, 124, 124);"">name</span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">:</span><span> </span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'Richard\'</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">}</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">===</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">{</span><span> </span><span class=""token literal-property"" style=""color: rgb(2, 124, 124);"">name</span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">:</span><span> </span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'Richard\'</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">}</span></code></div></div></pre></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><code class=""chakra-code css-1u83yg1"">true</code></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><code class=""chakra-code css-1u83yg1"">false</code></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Given this code:</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-js"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">var</span><span> a </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">=</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">{</span><span>\n</span><span>    </span><span class=""token function-variable"" style=""color: rgb(153, 0, 0); font-weight: bold;"">myFunction</span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">:</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">function</span><span> </span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">quiz</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">{</span><span> </span><span class=""token console"" style=""color: rgb(68, 85, 136); font-weight: bold;"">console</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token method property-access"" style=""color: rgb(153, 0, 0); font-weight: bold;"">log</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'hi\'</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">}</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(15, 43, 61);"">}</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">var</span><span> b </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">=</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">{</span><span>\n</span><span>    </span><span class=""token function-variable"" style=""color: rgb(153, 0, 0); font-weight: bold;"">myFunction</span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">:</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">function</span><span> </span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">quiz</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">{</span><span> </span><span class=""token console"" style=""color: rgb(68, 85, 136); font-weight: bold;"">console</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token method property-access"" style=""color: rgb(153, 0, 0); font-weight: bold;"">log</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'hi\'</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">}</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(15, 43, 61);"">}</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span></code></div></div></pre>\n<p class=""chakra-text css-o3oz8b"">Does the following code evaluate to <code class=""chakra-code css-1u83yg1"">true</code> or <code class=""chakra-code css-1u83yg1"">false</code>?</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-js"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span>a</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token property-access"">myFunction</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">===</span><span> b</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token property-access"">myFunction</span></code></div></div></pre></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><code class=""chakra-code css-1u83yg1"">true</code></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><code class=""chakra-code css-1u83yg1"">false</code></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Given this code:</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-js"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">function</span><span> </span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">quiz</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">{</span><span> </span><span class=""token spread"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">...</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">}</span><span>\n</span>\n<span></span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">var</span><span> a </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">=</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">{</span><span>\n</span><span>    </span><span class=""token literal-property"" style=""color: rgb(2, 124, 124);"">myFunction</span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">:</span><span> quiz\n</span><span></span><span class=""token"" style=""color: rgb(15, 43, 61);"">}</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">var</span><span> b </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">=</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">{</span><span>\n</span><span>    </span><span class=""token literal-property"" style=""color: rgb(2, 124, 124);"">myFunction</span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">:</span><span> quiz\n</span><span></span><span class=""token"" style=""color: rgb(15, 43, 61);"">}</span></code></div></div></pre>\n<p class=""chakra-text css-o3oz8b"">Does the following code evaluate to <code class=""chakra-code css-1u83yg1"">true</code> or <code class=""chakra-code css-1u83yg1"">false</code>?</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-js"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span>a</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token property-access"">myFunction</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">===</span><span> b</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token property-access"">myFunction</span></code></div></div></pre></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><code class=""chakra-code css-1u83yg1"">true</code></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><code class=""chakra-code css-1u83yg1"">false</code></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Ok, so why do we care about any of this object/function equality? The reason is that the <code class=""chakra-code css-1u83yg1"">.removeEventListener()</code> method requires you to pass <em class=""chakra-text css-o3oz8b"">the same exact listener function</em> to it as the one you passed to <code class=""chakra-code css-1u83yg1"">.addEventListener()</code>.</p>\n<p class=""chakra-text css-o3oz8b"">Let\'s see some pseudo-code for the <code class=""chakra-code css-1u83yg1"">.removeEventListener()</code>:</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-js"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">&lt;</span><span>event</span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">-</span><span>target</span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">&gt;</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token method property-access"" style=""color: rgb(153, 0, 0); font-weight: bold;"">removeEventListener</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">&lt;</span><span>event</span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">-</span><span>to</span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">-</span><span>listen</span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">-</span><span class=""token control-flow"" style=""color: rgb(15, 43, 61); font-weight: bold;"">for</span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">&gt;</span><span class=""token"" style=""color: rgb(15, 43, 61);"">,</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">&lt;</span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">function</span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">-</span><span>to</span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">-</span><span>remove</span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">&gt;</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span></code></div></div></pre>\n<p class=""chakra-text css-o3oz8b"">So an event listener needs three things:</p>\n<ol role=""list"" class=""css-13a5a39""><li class=""css-cvpopp"">an event target - this is called the <strong>target</strong></li></ol>\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp"">the type of event to listen for - this is called the <strong>type</strong></li><li class=""css-cvpopp"">the function to remove - this is called the <strong>listener</strong></li></ul>\n<p class=""chakra-text css-o3oz8b"">Remember, the <em class=""chakra-text css-o3oz8b"">listener</em> function must be the <em class=""chakra-text css-o3oz8b"">exact</em> same function as the one used in the <code class=""chakra-code css-1u83yg1"">.addEventListener()</code> call...not just an identical looking function. Let\'s look at a couple of examples.</p>\n<p class=""chakra-text css-o3oz8b"">This code will successfully add and then remove an event listener:</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-js"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">function</span><span> </span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">myEventListeningFunction</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">{</span><span>\n</span><span>    </span><span class=""token console"" style=""color: rgb(68, 85, 136); font-weight: bold;"">console</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token method property-access"" style=""color: rgb(153, 0, 0); font-weight: bold;"">log</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'howdy\'</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(15, 43, 61);"">}</span><span>\n</span>\n<span></span><span class=""token"" style=""color: rgb(113, 113, 101); font-style: italic;"">// adds a listener for clicks, to run the `myEventListeningFunction` function</span><span>\n</span><span></span><span class=""token dom"" style=""color: rgb(2, 124, 124);"">document</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token method property-access"" style=""color: rgb(153, 0, 0); font-weight: bold;"">addEventListener</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'click\'</span><span class=""token"" style=""color: rgb(15, 43, 61);"">,</span><span> myEventListeningFunction</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span>\n<span></span><span class=""token"" style=""color: rgb(113, 113, 101); font-style: italic;"">// immediately removes the click listener that should run the `myEventListeningFunction` function</span><span>\n</span><span></span><span class=""token dom"" style=""color: rgb(2, 124, 124);"">document</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token method property-access"" style=""color: rgb(153, 0, 0); font-weight: bold;"">removeEventListener</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'click\'</span><span class=""token"" style=""color: rgb(15, 43, 61);"">,</span><span> myEventListeningFunction</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span></code></div></div></pre>\n<p class=""chakra-text css-o3oz8b"">Now, why does this work? It works because both <code class=""chakra-code css-1u83yg1"">.addEventListener()</code> and <code class=""chakra-code css-1u83yg1"">.removeEventListener</code>:</p>\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp"">have the same <em class=""chakra-text css-o3oz8b"">target</em></li><li class=""css-cvpopp"">have the same <em class=""chakra-text css-o3oz8b"">type</em></li><li class=""css-cvpopp"">and pass <em class=""chakra-text css-o3oz8b"">the exact same listener</em></li></ul>\n<p class=""chakra-text css-o3oz8b"">Now let\'s look at an example that would <em class=""chakra-text css-o3oz8b"">not</em> work (it does <em class=""chakra-text css-o3oz8b"">not</em> remove the event listener):</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-js"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span class=""token"" style=""color: rgb(113, 113, 101); font-style: italic;"">// adds a listener for clicks, to run the `myEventListeningFunction` function</span><span>\n</span><span></span><span class=""token dom"" style=""color: rgb(2, 124, 124);"">document</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token method property-access"" style=""color: rgb(153, 0, 0); font-weight: bold;"">addEventListener</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'click\'</span><span class=""token"" style=""color: rgb(15, 43, 61);"">,</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">function</span><span> </span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">myEventListeningFunction</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">{</span><span>\n</span><span>    </span><span class=""token console"" style=""color: rgb(68, 85, 136); font-weight: bold;"">console</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token method property-access"" style=""color: rgb(153, 0, 0); font-weight: bold;"">log</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'howdy\'</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(15, 43, 61);"">}</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span>\n<span></span><span class=""token"" style=""color: rgb(113, 113, 101); font-style: italic;"">// immediately removes the click listener that should run the `myEventListeningFunction` function</span><span>\n</span><span></span><span class=""token dom"" style=""color: rgb(2, 124, 124);"">document</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token method property-access"" style=""color: rgb(153, 0, 0); font-weight: bold;"">removeEventListener</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'click\'</span><span class=""token"" style=""color: rgb(15, 43, 61);"">,</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">function</span><span> </span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">myEventListeningFunction</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">{</span><span>\n</span><span>    </span><span class=""token console"" style=""color: rgb(68, 85, 136); font-weight: bold;"">console</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token method property-access"" style=""color: rgb(153, 0, 0); font-weight: bold;"">log</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'howdy\'</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(15, 43, 61);"">}</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span></code></div></div></pre>\n<p class=""chakra-text css-o3oz8b"">This code does <em class=""chakra-text css-o3oz8b"">not</em> successfully remove the event listener. Again, why does this <em class=""chakra-text css-o3oz8b"">not</em> work?</p>\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp"">both <code class=""chakra-code css-1u83yg1"">.addEventListener()</code> and <code class=""chakra-code css-1u83yg1"">.removeEventListener</code> have the same <em class=""chakra-text css-o3oz8b"">target</em></li><li class=""css-cvpopp"">both <code class=""chakra-code css-1u83yg1"">.addEventListener()</code> and <code class=""chakra-code css-1u83yg1"">.removeEventListener</code> have the same <em class=""chakra-text css-o3oz8b"">type</em></li><li class=""css-cvpopp""><code class=""chakra-code css-1u83yg1"">.addEventListener()</code> and <code class=""chakra-code css-1u83yg1"">.removeEventListener</code> have their own distinct <em class=""chakra-text css-o3oz8b"">listener</em> functions...they do not refer to the exact same function (<strong>this is the reason the event listener removal fails!</strong>)</li></ul></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Two functions can look the same, but live in two different places in memory. Looks can be deceiving!</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">When we wrote</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-js"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">function</span><span> </span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">myEventListeningFunction</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">{</span><span>\n</span><span>    </span><span class=""token console"" style=""color: rgb(68, 85, 136); font-weight: bold;"">console</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token method property-access"" style=""color: rgb(153, 0, 0); font-weight: bold;"">log</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'howdy\'</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(15, 43, 61);"">}</span></code></div></div></pre>\n<p class=""chakra-text css-o3oz8b"">a second time, we actually created a completely new function that was stored in a completely new location in memory! They may look the same and do the same thing, but that doesn\'t make them the same. Imagine a scenario where you see two houses that look exactly the same. While the houses might look the same, their addresses are different! That\'s exactly what just happened in our previous example.</p>\n<p class=""chakra-text css-o3oz8b"">Why don\'t you try your hand at this!</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Assuming that <code class=""chakra-code css-1u83yg1"">myForm</code> is a <code class=""chakra-code css-1u83yg1"">&lt;form&gt;</code> element, will the <code class=""chakra-code css-1u83yg1"">&lt;form&gt;</code> element have a <code class=""chakra-code css-1u83yg1"">submit</code> event listener after running the following code, or not?</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-js"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span>myForm</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token method property-access"" style=""color: rgb(153, 0, 0); font-weight: bold;"">addEventListener</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'submit\'</span><span class=""token"" style=""color: rgb(15, 43, 61);"">,</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">function</span><span> </span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">respondToSubmit</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">{</span><span class=""token spread"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">...</span><span class=""token"" style=""color: rgb(15, 43, 61);"">}</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span><span>myForm</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token method property-access"" style=""color: rgb(153, 0, 0); font-weight: bold;"">removeEventListener</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(221, 17, 68",,,,,,,,,,,,,,,,,,,,,,,,
";"""">\'submit\'</span><span class=""""token"""" style=""""color: rgb(15",43," 61);"""">","</span><span> </span><span class=""""token"""" style=""""color: rgb(15",43," 61); font-weight: bold;"""">function</span><span> </span><span class=""""token"""" style=""""color: rgb(153",0," 0); font-weight: bold;"""">respondToSubmit</span><span class=""""token"""" style=""""color: rgb(15",43," 61);"""">(</span><span class=""""token"""" style=""""color: rgb(15",43," 61);"""">)</span><span class=""""token"""" style=""""color: rgb(15",43," 61);"""">{</span><span class=""""token spread"""" style=""""color: rgb(15",43, 61); background: rgb(255,255," 255);"""">...</span><span class=""""token"""" style=""""color: rgb(15",43," 61);"""">}</span><span class=""""token"""" style=""""color: rgb(15",43," 61);"""">)</span><span class=""""token"""" style=""""color: rgb(15",43," 61);"""">;</span></code></div></div></pre></div>'"," '<div class=""""ureact-markdown css-tc5hjw""""><p class=""""chakra-text css-o3oz8b"""">the element will have no event listeners</p></div>'"," '<div class=""""ureact-markdown css-tc5hjw""""><p class=""""chakra-text css-o3oz8b"""">the element will still have an event listener</p></div>'"," '<div class=""""ureact-markdown css-tc5hjw""""><h3 class=""""chakra-heading css-k57syw"""">Further Research</h3>\n<ul role=""""list"""" class=""""css-19qh3zo""""><li class=""""css-cvpopp""""><a target=""""_blank"""" rel=""""noopener noreferrer"""" class=""""chakra-link css-190botj"""" href=""""https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/removeEventListener"""">removeEventListener on MDN<span class=""""chakra-text css-1lktits"""">(opens in a new tab)</span></a></li><li class=""""css-cvpopp""""><a target=""""_blank"""" rel=""""noopener noreferrer"""" class=""""chakra-link css-190botj"""" href=""""https://developers.google.com/web/updates/2015/05/easily-jump-to-event-listeners"""">Easily jump to event listeners<span class=""""chakra-text css-1lktits"""">(opens in a new tab)</span></a></li><li class=""""css-cvpopp""""><a target=""""_blank"""" rel=""""noopener noreferrer"""" class=""""chakra-link css-190botj"""" href=""""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Equality_comparisons_and_sameness"""">Equality comparisons and sameness<span class=""""chakra-text css-1lktits"""">(opens in a new tab)</span></a></li><li class=""""css-cvpopp""""><a target=""""_blank"""" rel=""""noopener noreferrer"""" class=""""chakra-link css-190botj"""" href=""""http://adripofjavascript.com/blog/drips/object-equality-in-javascript.html"""">Article: Object Equality in JavaScript<span class=""""chakra-text css-1lktits"""">(opens in a new tab)</span></a></li><li class=""""css-cvpopp""""><a target=""""_blank"""" rel=""""noopener noreferrer"""" class=""""chakra-link css-190botj"""" href=""""https://developer.mozilla.org/en-US/docs/Web/API/EventTarget"""">EventTarget Interface<span class=""""chakra-text css-1lktits"""">(opens in a new tab)</span></a></li></ul></div>']""",['https://video.udacity-data.com/topher/2020/April/5ea20aaf_screen-shot-2020-04-23-at-2.37.30-pm/screen-shot-2020-04-23-at-2.37.30-pm.png'],https://www.youtube.com/embed/A1hfTM8pagg
JavaScript and the DOM,JavaScript and the DOM,Lesson 3: Working with Browser Events,3.4  Phases of an Event,"['<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Thinking about nodes and how the DOM is structured, after running the code below, which event listener will fire first when the page is clicked? Write out your answer and your explanation of why it will be in that order:</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-js"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span class=""token dom"" style=""color: rgb(2, 124, 124);"">document</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token method property-access"" style=""color: rgb(153, 0, 0); font-weight: bold;"">addEventListener</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'click\'</span><span class=""token"" style=""color: rgb(15, 43, 61);"">,</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">function</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">{</span><span>\n</span><span>   </span><span class=""token console"" style=""color: rgb(68, 85, 136); font-weight: bold;"">console</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token method property-access"" style=""color: rgb(153, 0, 0); font-weight: bold;"">log</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'The document was clicked\'</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(15, 43, 61);"">}</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span>\n<span></span><span class=""token dom"" style=""color: rgb(2, 124, 124);"">document</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token property-access"">body</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token method property-access"" style=""color: rgb(153, 0, 0); font-weight: bold;"">addEventListener</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'click\'</span><span class=""token"" style=""color: rgb(15, 43, 61);"">,</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">function</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">{</span><span>\n</span><span>    </span><span class=""token console"" style=""color: rgb(68, 85, 136); font-weight: bold;"">console</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token method property-access"" style=""color: rgb(153, 0, 0); font-weight: bold;"">log</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'The document body was clicked\'</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(15, 43, 61);"">}</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span></code></div></div></pre></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><em class=""chakra-text css-o3oz8b"">The three event phases of an event: capturing, at target, and bubbling.</em></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">So of the three phases in an event, which one does the <code class=""chakra-code css-1u83yg1"">.addEventListener()</code> method actually use? And, how can we change it?</p>\n<p class=""chakra-text css-o3oz8b"">Up until this point, we\'ve only seen the <code class=""chakra-code css-1u83yg1"">.addEventListener()</code> method called with <em class=""chakra-text css-o3oz8b"">two</em> arguments, the:</p>\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp"">event <em class=""chakra-text css-o3oz8b"">type</em></li><li class=""css-cvpopp"">and the <em class=""chakra-text css-o3oz8b"">listener</em></li></ul>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-js"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span class=""token dom"" style=""color: rgb(2, 124, 124);"">document</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token method property-access"" style=""color: rgb(153, 0, 0); font-weight: bold;"">addEventListener</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'click\'</span><span class=""token"" style=""color: rgb(15, 43, 61);"">,</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">function</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">{</span><span>\n</span><span>   </span><span class=""token console"" style=""color: rgb(68, 85, 136); font-weight: bold;"">console</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token method property-access"" style=""color: rgb(153, 0, 0); font-weight: bold;"">log</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'The document was clicked\'</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(15, 43, 61);"">}</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span></code></div></div></pre>\n<p class=""chakra-text css-o3oz8b"">There\'s actually a <em class=""chakra-text css-o3oz8b"">third</em> argument to the <code class=""chakra-code css-1u83yg1"">.addEventListener()</code> method; the <em class=""chakra-text css-o3oz8b"">useCapture</em> argument. From it\'s name, you\'d think that if this argument were left out, <code class=""chakra-code css-1u83yg1"">.addEventListener()</code> would default to using the <em class=""chakra-text css-o3oz8b"">capturing</em> phase. This is an incorrect assumption! <strong>By default, when <code class=""chakra-code css-1u83yg1"">.addEventListener()</code> is called with only two arguments, the method defaults to using the bubbling phase.</strong></p>\n<p class=""chakra-text css-o3oz8b"">The code below uses <code class=""chakra-code css-1u83yg1"">.addEventListener()</code> with only two arguments, so it will invoke the listener during the bubbling phase:</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-js"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span class=""token dom"" style=""color: rgb(2, 124, 124);"">document</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token method property-access"" style=""color: rgb(153, 0, 0); font-weight: bold;"">addEventListener</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'click\'</span><span class=""token"" style=""color: rgb(15, 43, 61);"">,</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">function</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">{</span><span>\n</span><span>   </span><span class=""token console"" style=""color: rgb(68, 85, 136); font-weight: bold;"">console</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token method property-access"" style=""color: rgb(153, 0, 0); font-weight: bold;"">log</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'The document was clicked\'</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(15, 43, 61);"">}</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span></code></div></div></pre>\n<p class=""chakra-text css-o3oz8b"">However, in this code, <code class=""chakra-code css-1u83yg1"">.addEventListener()</code> is called with <em class=""chakra-text css-o3oz8b"">three arguments</em> with the third argument being <code class=""chakra-code css-1u83yg1"">true</code> (meaning it <em class=""chakra-text css-o3oz8b"">should invoke the listener earlier, during the capturing phase</em>!).</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-js"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span class=""token dom"" style=""color: rgb(2, 124, 124);"">document</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token method property-access"" style=""color: rgb(153, 0, 0); font-weight: bold;"">addEventListener</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'click\'</span><span class=""token"" style=""color: rgb(15, 43, 61);"">,</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">function</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">{</span><span>\n</span><span>   </span><span class=""token console"" style=""color: rgb(68, 85, 136); font-weight: bold;"">console</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token method property-access"" style=""color: rgb(153, 0, 0); font-weight: bold;"">log</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'The document was clicked\'</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(15, 43, 61);"">}</span><span class=""token"" style=""color: rgb(15, 43, 61);"">,</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">true</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span></code></div></div></pre></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Which of the phases is the following code set up for?</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-js"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">const</span><span> items </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">=</span><span> </span><span class=""token dom"" style=""color: rgb(2, 124, 124);"">document</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token method property-access"" style=""color: rgb(153, 0, 0); font-weight: bold;"">querySelectorAll</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'.quizzing-quizzes\'</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">const</span><span> el </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">=</span><span> items</span><span class=""token"" style=""color: rgb(15, 43, 61);"">[</span><span class=""token"" style=""color: rgb(2, 124, 124);"">1</span><span class=""token"" style=""color: rgb(15, 43, 61);"">]</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span>\n<span>el</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token method property-access"" style=""color: rgb(153, 0, 0); font-weight: bold;"">addEventListener</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'click\'</span><span class=""token"" style=""color: rgb(15, 43, 61);"">,</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">function</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">{</span><span>\n</span><span>    </span><span class=""token console"" style=""color: rgb(68, 85, 136); font-weight: bold;"">console</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token method property-access"" style=""color: rgb(153, 0, 0); font-weight: bold;"">log</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'You clicked on the 2nd quizzing-quizzes item!\'</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(15, 43, 61);"">}</span><span class=""token"" style=""color: rgb(15, 43, 61);"">,</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">false</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span></code></div></div></pre></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">the capturing phase</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">the at target phase</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">the bubbling phase</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Now that you have a little more knowledge about the ""capturing"", ""at target"", and ""bubbling"" phases, we\'re going to go back to the question at the beginning of this section.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">After running the code below and clicking on the page, two console.log messages will display in the console. Put the messages in the correct order.</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-js"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span class=""token dom"" style=""color: rgb(2, 124, 124);"">document</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token method property-access"" style=""color: rgb(153, 0, 0); font-weight: bold;"">addEventListener</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'click\'</span><span class=""token"" style=""color: rgb(15, 43, 61);"">,</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">function</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">{</span><span>\n</span><span>   </span><span class=""token console"" style=""color: rgb(68, 85, 136); font-weight: bold;"">console</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token method property-access"" style=""color: rgb(153, 0, 0); font-weight: bold;"">log</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'The document was clicked\'</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(15, 43, 61);"">}</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span>\n<span></span><span class=""token dom"" style=""color: rgb(2, 124, 124);"">document</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token property-access"">body</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token method property-access"" style=""color: rgb(153, 0, 0); font-weight: bold;"">addEventListener</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'click\'</span><span class=""token"" style=""color: rgb(15, 43, 61);"">,</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">function</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">{</span><span>\n</span><span>    </span><span class=""token console"" style=""color: rgb(68, 85, 136); font-weight: bold;"">console</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token method property-access"" style=""color: rgb(153, 0, 0); font-weight: bold;"">log</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'The body element was clicked\'</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(15, 43, 61);"">}</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span></code></div></div></pre></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">The document was clicked.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">The body element was clicked.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">First Message</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Second Message</p></div>', '<div class=""ureact-markdown css-tc5hjw""><h3 class=""chakra-heading css-k57syw"">💡 An ""event"" is an ""evt"" is an ""e"" 💡</h3>\n<p class=""chakra-text css-o3oz8b"">Remember that a function\'s parameter is just like a regular variable. In the following example, I\'m using a parameter with the name <code class=""chakra-code css-1u83yg1"">event</code>.</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-js"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">const</span><span> items </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">=</span><span> </span><span class=""token dom"" style=""color: rgb(2, 124, 124);"">document</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token method property-access"" style=""color: rgb(153, 0, 0); font-weight: bold;"">querySelectorAll</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'.quizzing-quizzes\'</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">const</span><span> el </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">=</span><span> items</span><span class=""token"" style=""color: rgb(15, 43, 61);"">[</span><span class=""token"" style=""color: rgb(2, 124, 124);"">1</span><span class=""token"" style=""color: rgb(15, 43, 61);"">]</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span>\n<span>el</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token method property-access"" style=""color: rgb(153, 0, 0); font-weight: bold;"">addEventListener</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'keypress\'</span><span class=""token"" style=""color: rgb(15, 43, 61);"">,</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">function</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token parameter"">event</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">{</span><span>\n</span><span>    </span><span class=""token console"" style=""color: rgb(68, 85, 136); font-weight: bold;"">console</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token method property-access"" style=""color: rgb(153, 0, 0); font-weight: bold;"">log</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'You clicked on the 2nd quizzing-quizzes item!\'</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(15, 43, 61);"">}</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span></code></div></div></pre>\n<p class=""chakra-text css-o3oz8b"">Instead of <code class=""chakra-code css-1u83yg1"">event</code>, the parameter\'s name could just as easily be:</p>\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp""><code class=""chakra-code css-1u83yg1"">evt</code></li><li class=""css-cvpopp""><code class=""chakra-code css-1u83yg1"">e</code></li><li class=""css-cvpopp""><code class=""chakra-code css-1u83yg1"">theEvent</code></li><li class=""css-cvpopp""><code class=""chakra-code css-1u83yg1"">horse</code></li></ul>\n<p class=""chakra-text css-o3oz8b"">The name <code class=""chakra-code css-1u83yg1"">event</code> or <code class=""chakra-code css-1u83yg1"">evt</code> does not provide any inherent meaning or special capabilities; there is nothing special to the name... it\'s just the name of the parameter. Feel free to give it any name that\'s informative/descriptive!</p></div>', '<div class=""ureact-markdown css-tc5hjw""><h3 class=""chakra-heading css-k57syw"">Further Research</h3>\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://www.w3.org/TR/DOM-Level-3-Events/#event-flow"">Event dispatch and DOM event flow<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a> on W3C\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://www.w3.org/TR/DOM-Level-3-Events/#capture-phase"">capture phase<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a> on W3C</li><li class=""css-cvpopp""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://www.w3.org/TR/DOM-Level-3-Events/#target-phase"">target phase<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a> on W3C</li><li class=""css-cvpopp""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://www.w3.org/TR/DOM-Level-3-Events/#bubble-phase"">bubble phase<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a> on W3C</li></ul>\n</li><li class=""css-cvpopp""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://developer.mozilla.org/en-US/docs/Web/API/Event"">Event<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a> on MDN</li><li class=""css-cvpopp""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://developer.mozilla.org/en-US/docs/Web/Events"">Event reference<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a> on MDN</li><li class=""css-cvpopp""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener"">addEventListener<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a> on MDN</li></ul></div>']",[],https://www.youtube.com/embed/rGhgPPYc2sg,,,,,,,,,,,,,,,,,,,,,,
JavaScript and the DOM,JavaScript and the DOM,Lesson 3: Working with Browser Events,3.5  Avoid Too Many Events,"['<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">How many event listeners are created with this code?</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-js"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">const</span><span> myCustomDiv </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">=</span><span> </span><span class=""token dom"" style=""color: rgb(2, 124, 124);"">document</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token method property-access"" style=""color: rgb(153, 0, 0); font-weight: bold;"">createElement</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'div\'</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span>\n<span></span><span class=""token control-flow"" style=""color: rgb(15, 43, 61); font-weight: bold;"">for</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">let</span><span> i </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">=</span><span> </span><span class=""token"" style=""color: rgb(2, 124, 124);"">1</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span> i </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">&lt;=</span><span> </span><span class=""token"" style=""color: rgb(2, 124, 124);"">200</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span> i</span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">++</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">{</span><span>\n</span><span>    </span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">const</span><span> newElement </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">=</span><span> </span><span class=""token dom"" style=""color: rgb(2, 124, 124);"">document</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token method property-access"" style=""color: rgb(153, 0, 0); font-weight: bold;"">createElement</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'p\'</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span><span>    newElement</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token property-access"">textContent</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">=</span><span> </span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'This is paragraph number \'</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">+</span><span> i</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span>\n<span>    newElement</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token method property-access"" style=""color: rgb(153, 0, 0); font-weight: bold;"">addEventListener</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'click\'</span><span class=""token"" style=""color: rgb(15, 43, 61);"">,</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">function</span><span> </span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">respondToTheClick</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token parameter"">evt</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">{</span><span>\n</span><span>        </span><span class=""token console"" style=""color: rgb(68, 85, 136); font-weight: bold;"">console</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token method property-access"" style=""color: rgb(153, 0, 0); font-weight: bold;"">log</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'A paragraph was clicked.\'</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span><span>    </span><span class=""token"" style=""color: rgb(15, 43, 61);"">}</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span>\n<span>    myCustomDiv</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token method property-access"" style=""color: rgb(153, 0, 0); font-weight: bold;"">appendChild</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span>newElement</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(15, 43, 61);"">}</span><span>\n</span>\n<span></span><span class=""token dom"" style=""color: rgb(2, 124, 124);"">document</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token property-access"">body</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token method property-access"" style=""color: rgb(153, 0, 0); font-weight: bold;"">appendChild</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span>myCustomDiv</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span></code></div></div></pre></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Enter the number of event listeners below. (enter numbers, only)</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">This is a great step in the right direction!</p>\n<p class=""chakra-text css-o3oz8b"">However, we still have two hundred event listeners. They\'re all pointing to the same listener function, but there are still two hundred <em class=""chakra-text css-o3oz8b"">different</em> event listeners.</p>\n<p class=""chakra-text css-o3oz8b"">What if we moved all of the listeners to the <code class=""chakra-code css-1u83yg1"">&lt;div&gt;</code> instead?</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">The code for this would look like:</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-js"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">const</span><span> myCustomDiv </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">=</span><span> </span><span class=""token dom"" style=""color: rgb(2, 124, 124);"">document</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token method property-access"" style=""color: rgb(153, 0, 0); font-weight: bold;"">createElement</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'div\'</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span>\n<span></span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">function</span><span> </span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">respondToTheClick</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">{</span><span>\n</span><span>    </span><span class=""token console"" style=""color: rgb(68, 85, 136); font-weight: bold;"">console</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token method property-access"" style=""color: rgb(153, 0, 0); font-weight: bold;"">log</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'A paragraph was clicked.\'</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(15, 43, 61);"">}</span><span>\n</span>\n<span></span><span class=""token control-flow"" style=""color: rgb(15, 43, 61); font-weight: bold;"">for</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">let</span><span> i </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">=</span><span> </span><span class=""token"" style=""color: rgb(2, 124, 124);"">1</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span> i </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">&lt;=</span><span> </span><span class=""token"" style=""color: rgb(2, 124, 124);"">200</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span> i</span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">++</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">{</span><span>\n</span><span>    </span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">const</span><span> newElement </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">=</span><span> </span><span class=""token dom"" style=""color: rgb(2, 124, 124);"">document</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token method property-access"" style=""color: rgb(153, 0, 0); font-weight: bold;"">createElement</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'p\'</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span><span>    newElement</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token property-access"">textContent</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">=</span><span> </span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'This is paragraph number \'</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">+</span><span> i</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span>\n<span>    myCustomDiv</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token method property-access"" style=""color: rgb(153, 0, 0); font-weight: bold;"">appendChild</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span>newElement</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(15, 43, 61);"">}</span><span>\n</span>\n<span>myCustomDiv</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token method property-access"" style=""color: rgb(153, 0, 0); font-weight: bold;"">addEventListener</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'click\'</span><span class=""token"" style=""color: rgb(15, 43, 61);"">,</span><span> respondToTheClick</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span>\n<span></span><span class=""token dom"" style=""color: rgb(2, 124, 124);"">document</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token property-access"">body</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token method property-access"" style=""color: rgb(153, 0, 0); font-weight: bold;"">appendChild</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span>myCustomDiv</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span></code></div></div></pre>\n<p class=""chakra-text css-o3oz8b"">Now there is only:</p>\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp"">a single event listener</li><li class=""css-cvpopp"">a single listener function</li></ul>\n<p class=""chakra-text css-o3oz8b"">Now the browser doesn\'t have to store in memory two hundred different event listeners and two hundred different listener functions. That\'s great for performance`!</p>\n<p class=""chakra-text css-o3oz8b"">However, if you test the code above, you\'ll notice that we\'ve lost access to the individual paragraphs. There\'s no way for us to target a specific paragraph element. So how do we combine this efficient code with the access to the individual paragraph items that we did before?</p>\n<p class=""chakra-text css-o3oz8b"">We use a process called <strong>event delegation</strong>.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><h3 class=""chakra-heading css-k57syw"">Checking the Node Type in Event Delegation</h3>\n<p class=""chakra-text css-o3oz8b"">In the code snippet we used above, we added the event listener directly to the <code class=""chakra-code css-1u83yg1"">&lt;div&gt;</code> element. The <em class=""chakra-text css-o3oz8b"">listener</em> function logs a message saying that a paragraph element was clicked (and then the text of the target element). This works perfectly! However, there is nothing to <em class=""chakra-text css-o3oz8b"">ensure</em> that it was actually a <code class=""chakra-code css-1u83yg1"">&lt;p&gt;</code> tag that was clicked before running that message. In this snippet, the <code class=""chakra-code css-1u83yg1"">&lt;p&gt;</code> tags were direct children of the <code class=""chakra-code css-1u83yg1"">&lt;div&gt;</code> element, but what happens if we had the following HTML:</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-html"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span class=""token"" style=""color: rgb(15, 43, 61);"">&lt;</span><span class=""token"" style=""color: navy;"">article</span><span class=""token"" style=""color: navy;""> </span><span class=""token"" style=""color: rgb(2, 124, 124);"">id</span><span class=""token attr-equals"" style=""color: rgb(15, 43, 61);"">=</span><span class=""token"" style=""color: rgb(15, 43, 61);"">""</span><span class=""token"" style=""color: rgb(221, 17, 68);"">content</span><span class=""token"" style=""color: rgb(15, 43, 61);"">""</span><span class=""token"" style=""color: rgb(15, 43, 61);"">&gt;</span><span>\n</span><span>  </span><span class=""token"" style=""color: rgb(15, 43, 61);"">&lt;</span><span class=""token"" style=""color: navy;"">p</span><span class=""token"" style=""color: rgb(15, 43, 61);"">&gt;</span><span>Brownie lollipop </span><span class=""token"" style=""color: rgb(15, 43, 61);"">&lt;</span><span class=""token"" style=""color: navy;"">span</span><span class=""token"" style=""color: rgb(15, 43, 61);"">&gt;</span><span>carrot cake</span><span class=""token"" style=""color: rgb(15, 43, 61);"">&lt;/</span><span class=""token"" style=""color: navy;"">span</span><span class=""token"" style=""color: rgb(15, 43, 61);"">&gt;</span><span> gummies lemon drops sweet roll dessert tiramisu. Pudding muffin </span><span class=""token"" style=""color: rgb(15, 43, 61);"">&lt;</span><span class=""token"" style=""color: navy;"">span</span><span class=""token"" style=""color: rgb(15, 43, 61);"">&gt;</span><span>cotton candy</span><span class=""token"" style=""color: rgb(15, 43, 61);"">&lt;/</span><span class=""token"" style=""color: navy;"">span</span><span class=""token"" style=""color: rgb(15, 43, 61);"">&gt;</span><span> croissant fruitcake tootsie roll. Jelly jujubes brownie. Marshmallow jujubes topping sugar plum jelly jujubes chocolate.</span><span class=""token"" style=""color: rgb(15, 43, 61);"">&lt;/</span><span class=""token"" style=""color: navy;"">p</span><span class=""token"" style=""color: rgb(15, 43, 61);"">&gt;</span><span>\n</span>\n<span>  </span><span class=""token"" style=""color: rgb(15, 43, 61);"">&lt;</span><span class=""token"" style=""color: navy;"">p</span><span class=""token"" style=""color: rgb(15, 43, 61);"">&gt;</span><span>Tart bonbon soufflé gummi bears. Donut marshmallow </span><span class=""token"" style=""color: rgb(15, 43, 61);"">&lt;</span><span class=""token"" style=""color: navy;"">span</span><span class=""token"" style=""color: rgb(15, 43, 61);"">&gt;</span><span>gingerbread cupcake</span><span class=""token"" style=""color: rgb(15, 43, 61);"">&lt;/</span><span class=""token"" style=""color: navy;"">span</span><span class=""token"" style=""color: rgb(15, 43, 61);"">&gt;</span><span> macaroon jujubes muffin. Soufflé candy caramels tootsie roll powder sweet roll brownie </span><span class=""token"" style=""color: rgb(15, 43, 61);"">&lt;</span><span class=""token"" style=""color: navy;"">span</span><span class=""token"" style=""color: rgb(15, 43, 61);"">&gt;</span><span>apple pie</span><span class=""token"" style=""color: rgb(15, 43, 61);"">&lt;/</span><span class=""token"" style=""color: navy;"">span</span><span class=""token"" style=""color: rgb(15, 43, 61);"">&gt;</span><span> gummies. Fruitcake danish chocolate tootsie roll macaroon.</span><span class=""token"" style=""color: rgb(15, 43, 61);"">&lt;/</span><span class=""token"" style=""color: navy;"">p</span><span class=""token"" style=""color: rgb(15, 43, 61);"">&gt;</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(15, 43, 61);"">&lt;/</span><span class=""token"" style=""color: navy;"">article</span><span class=""token"" style=""color: rgb(15, 43, 61);"">&gt;</span></code></div></div></pre>\n<p class=""chakra-text css-o3oz8b"">In this <a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""http://www.cupcakeipsum.com/"">filler text<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a>, notice that there are some <code class=""chakra-code css-1u83yg1"">&lt;span&gt;</code> tags. If we want to listen to the <code class=""chakra-code css-1u83yg1"">&lt;article&gt;</code> for a click on a <code class=""chakra-code css-1u83yg1"">&lt;span&gt;</code>, you <em class=""chakra-text css-o3oz8b"">might</em> think that this would work:</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-js"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span class=""token dom"" style=""color: rgb(2, 124, 124);"">document</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token method property-access"" style=""color: rgb(153, 0, 0); font-weight: bold;"">querySelector</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'#content\'</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token method property-access"" style=""color: rgb(153, 0, 0); font-weight: bold;"">addEventListener</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'click\'</span><span class=""token"" style=""color: rgb(15, 43, 61);"">,</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">function</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token parameter"">evt</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">{</span><span>\n</span><span>    </span><span class=""token console"" style=""color: rgb(68, 85, 136); font-weight: bold;"">console</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token method property-access"" style=""color: rgb(153, 0, 0); font-weight: bold;"">log</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'A span was clicked with text \'</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">+</span><span> evt</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token property-access"">target</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token property-access"">textContent</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(15, 43, 61);"">}</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span></code></div></div></pre>\n<p class=""chakra-text css-o3oz8b"">This will work, but there\'s a major flaw. The listener function will still fire when either one of the paragraph elements is clicked, too! In other words, this listener function is not verifying that the target of the event is <em class=""chakra-text css-o3oz8b"">actually a <code class=""chakra-code css-1u83yg1"">&lt;span&gt;</code> element</em>. Let\'s add in this check:</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-js"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span class=""token dom"" style=""color: rgb(2, 124, 124);"">document</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token method property-access"" style=""color: rgb(153, 0, 0); font-weight: bold;"">querySelector</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'#content\'</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token method property-access"" style=""color: rgb(153, 0, 0); font-weight: bold;"">addEventListener</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'click\'</span><span class=""token"" style=""color: rgb(15, 43, 61);"">,</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">function</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token parameter"">evt</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">{</span><span>\n</span><span>    </span><span class=""token control-flow"" style=""color: rgb(15, 43, 61); font-weight: bold;"">if</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span>evt</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token property-access"">target</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token property-access"">nodeName</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">===</span><span> </span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'SPAN\'</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">{</span><span>  </span><span class=""token"" style=""color: rgb(113, 113, 101); font-style: italic;"">// ← verifies target is desired element</span><span>\n</span><span>        </span><span class=""token console"" style=""color: rgb(68, 85, 136); font-weight: bold;"">console</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token method property-access"" style=""color: rgb(153, 0, 0); font-weight: bold;"">log</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'A span was clicked with text \'</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">+</span><span> evt</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token property-access"">target</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token property-access"">textContent</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span><span>    </span><span class=""token"" style=""color: rgb(15, 43, 61);"">}</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(15, 43, 61);"">}</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span></code></div></div></pre>\n<p class=""chakra-text css-o3oz8b"">Remember that every element inherits properties from <a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://developer.mozilla.org/en-US/docs/Web/API/Node"">the Node Interface<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a>. One of the properties of the Node Interface that is inherited is <code class=""chakra-code css-1u83yg1"">.nodeName</code>. We can use this property to verify that the target element is actually the element we\'re looking for. When a <code class=""chakra-code css-1u83yg1"">&lt;span&gt;</code> element is clicked, it will have a <code class=""chakra-code css-1u83yg1"">.nodeName</code> property of <code class=""chakra-code css-1u83yg1"">""SPAN""</code>, so the check will pass and the message will be logged. However, if a <code class=""chakra-code css-1u83yg1"">&lt;p&gt;</code> element is clicked, it will have a <code class=""chakra-code css-1u83yg1"">.nodeName</code> property of <code class=""chakra-code css-1u83yg1"">""P""</code>, so the check will fail and the message will <em class=""chakra-text css-o3oz8b"">not</em> be logged.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><h3 class=""chakra-heading css-k57syw"">Further Research</h3>\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://javascript.info/event-delegation"">Article: Event delegation<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a></li><li class=""css-cvpopp""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://davidwalsh.name/event-delegate"">Article: How JavaScript Event Delegation Works<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a></li></ul></div>']","['https://video.udacity-data.com/topher/2017/December/5a31c70d_l3-working-with-browser-events-js-the-dom/l3-working-with-browser-events-js-the-dom.jpg', 'https://video.udacity-data.com/topher/2017/December/5a31c70c_l3-working-with-browser-events-js-the-dom-1/l3-working-with-browser-events-js-the-dom-1.jpg', 'https://video.udacity-data.com/topher/2017/December/5a31c70d_l3-working-with-browser-events-js-the-dom-2/l3-working-with-browser-events-js-the-dom-2.jpg']",https://www.youtube.com/embed/G6Sxv6pr3RA,,,,,,,,,,,,,,,,,,,,,,
JavaScript and the DOM,JavaScript and the DOM,Lesson 3: Working with Browser Events,3.6  Know When The DOM Is Ready,"['<div class=""ureact-markdown css-tc5hjw""><h3 class=""chakra-heading css-k57syw"">The Content Is Loaded Event</h3>\n<p class=""chakra-text css-o3oz8b"">When the document object model has been fully loaded, the browser will fire an event. This event is called the <code class=""chakra-code css-1u83yg1"">DOMContentLoaded</code> event, and we can listen for it the same way we listen to any other events:</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-js"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span class=""token dom"" style=""color: rgb(2, 124, 124);"">document</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token method property-access"" style=""color: rgb(153, 0, 0); font-weight: bold;"">addEventListener</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'DOMContentLoaded\'</span><span class=""token"" style=""color: rgb(15, 43, 61);"">,</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">function</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">{</span><span>\n</span><span>    </span><span class=""token console"" style=""color: rgb(68, 85, 136); font-weight: bold;"">console</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token method property-access"" style=""color: rgb(153, 0, 0); font-weight: bold;"">log</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'the DOM is ready to be interacted with!\'</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(15, 43, 61);"">}</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span></code></div></div></pre></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><em class=""chakra-text css-o3oz8b"">The Network pane of DevTools with the DOMContentLoaded indicators highlighted.</em></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">On what event target should we listen for the <code class=""chakra-code css-1u83yg1"">DOMContentLoaded</code> event?</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">the <code class=""chakra-code css-1u83yg1"">document</code> object</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">the body element</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">anything that inherits the Element interface</p></div>', '<div class=""ureact-markdown css-tc5hjw""><h3 class=""chakra-heading css-k57syw"">Further Research</h3>\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://developer.mozilla.org/en-US/docs/Web/Events/DOMContentLoaded"">DOMContentLoaded Event docs on MDN<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a></li></ul></div>']",['https://video.udacity-data.com/topher/2017/December/5a2eee37_ud117-domcontentloaded-event-with-indicators/ud117-domcontentloaded-event-with-indicators.jpg'],https://www.youtube.com/embed/Ypt0vyLeQ1Q,,,,,,,,,,,,,,,,,,,,,,
JavaScript and the DOM,JavaScript and the DOM,Lesson 3: Working with Browser Events,3.7  Lesson Summary,[],[],https://www.youtube.com/embed/hie7yuJvKhY,,,,,,,,,,,,,,,,,,,,,,
JavaScript and the DOM,JavaScript and the DOM,Lesson 4: Performance,4.1  Introduction,[],[],https://www.youtube.com/embed/S0yU5sqkQvI,,,,,,,,,,,,,,,,,,,,,,
JavaScript and the DOM,JavaScript and the DOM,Lesson 4: Performance,4.2  Add Page Content Efficiently,"['<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Is this <code class=""chakra-code css-1u83yg1"">for</code> loop code written efficiently? Write out the different ways you think this code could be improved. (hint - there are actually several ways!)</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Let\'s quickly recap the code to see where we can make improvements.</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-js"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span class=""token control-flow"" style=""color: rgb(15, 43, 61); font-weight: bold;"">for</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">let</span><span> i </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">=</span><span> </span><span class=""token"" style=""color: rgb(2, 124, 124);"">1</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span> i </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">&lt;=</span><span> </span><span class=""token"" style=""color: rgb(2, 124, 124);"">200</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span> i</span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">++</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">{</span><span>\n</span><span>    </span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">const</span><span> newElement </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">=</span><span> </span><span class=""token dom"" style=""color: rgb(2, 124, 124);"">document</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token method property-access"" style=""color: rgb(153, 0, 0); font-weight: bold;"">createElement</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'p\'</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span><span>    newElement</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token property-access"">textContent</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">=</span><span> </span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'This is paragraph number \'</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">+</span><span> i</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span>\n<span>    </span><span class=""token dom"" style=""color: rgb(2, 124, 124);"">document</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token property-access"">body</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token method property-access"" style=""color: rgb(153, 0, 0); font-weight: bold;"">appendChild</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span>newElement</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(15, 43, 61);"">}</span></code></div></div></pre>\n<p class=""chakra-text css-o3oz8b"">This code:</p>\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp"">creates a paragraph element</li><li class=""css-cvpopp"">adds some text to the paragraph</li><li class=""css-cvpopp"">adds the paragraph to the page</li></ul>\n<p class=""chakra-text css-o3oz8b"">...and it does this two hundred times.</p>\n<p class=""chakra-text css-o3oz8b"">Since we want two hundred things done, the best way to do this is with a <code class=""chakra-code css-1u83yg1"">for</code> loop, so that code is inescapable. However, the code <em class=""chakra-text css-o3oz8b"">inside the <code class=""chakra-code css-1u83yg1"">for</code> loop</em> is not all that efficient, and there are quite a few things we could do to improve this code. We could:</p>\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp"">create some parent container element <em class=""chakra-text css-o3oz8b"">outside of the loop</em></li><li class=""css-cvpopp"">we could append all new paragraph elements to this parent container</li><li class=""css-cvpopp"">we append this parent container to the <code class=""chakra-code css-1u83yg1"">&lt;body&gt;</code> element instead of appending each time through the loop</li></ul>\n<p class=""chakra-text css-o3oz8b"">Let\'s see all of these changes:</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-js"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">const</span><span> myCustomDiv </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">=</span><span> </span><span class=""token dom"" style=""color: rgb(2, 124, 124);"">document</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token method property-access"" style=""color: rgb(153, 0, 0); font-weight: bold;"">createElement</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'div\'</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span>\n<span></span><span class=""token control-flow"" style=""color: rgb(15, 43, 61); font-weight: bold;"">for</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">let</span><span> i </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">=</span><span> </span><span class=""token"" style=""color: rgb(2, 124, 124);"">1</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span> i </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">&lt;=</span><span> </span><span class=""token"" style=""color: rgb(2, 124, 124);"">200</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span> i</span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">++</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">{</span><span>\n</span><span>  </span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">const</span><span> newElement </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">=</span><span> </span><span class=""token dom"" style=""color: rgb(2, 124, 124);"">document</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token method property-access"" style=""color: rgb(153, 0, 0); font-weight: bold;"">createElement</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'p\'</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span><span>  newElement</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token property-access"">innerText</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">=</span><span> </span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'This is paragraph number \'</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">+</span><span> i</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span>\n<span>  myCustomDiv</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token method property-access"" style=""color: rgb(153, 0, 0); font-weight: bold;"">appendChild</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span>newElement</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(15, 43, 61);"">}</span><span>\n</span>\n<span></span><span class=""token dom"" style=""color: rgb(2, 124, 124);"">document</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token property-access"">body</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token method property-access"" style=""color: rgb(153, 0, 0); font-weight: bold;"">appendChild</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span>myCustomDiv</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span></code></div></div></pre>\n<p class=""chakra-text css-o3oz8b"">This looks a lot better, right? Right!...but how do we <em class=""chakra-text css-o3oz8b"">know</em> it is? How can we <em class=""chakra-text css-o3oz8b"">prove</em> it\'s better?</p>\n<p class=""chakra-text css-o3oz8b"">We can test the time it takes to actually run this code!</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><em class=""chakra-text css-o3oz8b"">Using <code class=""chakra-code css-1u83yg1"">performance.now()</code> to calculate the total time it takes code to run.</em></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Let\'s go back to our original code of adding two hundred paragraphs to the page to see how long that code takes to run.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><h3 class=""chakra-heading css-k57syw"">Further Research</h3>\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://developer.mozilla.org/en-US/docs/Web/API/Performance/now"">performance.now() on MDN<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a></li><li class=""css-cvpopp""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://developer.mozilla.org/en-US/docs/Web/API/Performance"">Performance Interface on MDN<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a></li><li class=""css-cvpopp""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://developer.mozilla.org/en-US/docs/Web/API/DocumentFragment"">DocumentFragment Interface on MDN<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a></li><li class=""css-cvpopp""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://developer.mozilla.org/en-US/docs/Web/API/Document/createDocumentFragment"">createDocumentFragment docs on MDN<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a></li></ul></div>']",['https://video.udacity-data.com/topher/2017/December/5a2ef055_ud117-timing-with-performance-now/ud117-timing-with-performance-now.jpg'],https://www.youtube.com/embed/ARy8Xpn6Ekg,,,,,,,,,,,,,,,,,,,,,,
JavaScript and the DOM,JavaScript and the DOM,Lesson 4: Performance,4.3  Reflow & Repaint,"['<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">For example, if you add a CSS class to an element, the browser often recalculates the layout of the entire page—that\'s one reflow and one repaint!</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Adding a single CSS class could trigger <em class=""chakra-text css-o3oz8b"">reflow</em>. In your own words, explain why adding some CSS to an element might cause reflow to happen.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Why did adding a little CSS change cause a reflow? What if adding a class changed the position of the element or caused it to float? The browser won\'t know for certain (and a complete calculation of the impact of a change could take longer than doing the reflow!)</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Let\'s take a realistic example. Say you\'re writing the next great blogging platform, and you want to have a ""remove spam"" button for the administrator. Your HTML looks like this:</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-html"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span class=""token"" style=""color: rgb(15, 43, 61);"">&lt;</span><span class=""token"" style=""color: navy;"">div</span><span class=""token"" style=""color: navy;""> </span><span class=""token"" style=""color: rgb(2, 124, 124);"">id</span><span class=""token attr-equals"" style=""color: rgb(15, 43, 61);"">=</span><span class=""token"" style=""color: rgb(15, 43, 61);"">""</span><span class=""token"" style=""color: rgb(221, 17, 68);"">comments</span><span class=""token"" style=""color: rgb(15, 43, 61);"">""</span><span class=""token"" style=""color: rgb(15, 43, 61);"">&gt;</span><span>\n</span><span>  </span><span class=""token"" style=""color: rgb(15, 43, 61);"">&lt;</span><span class=""token"" style=""color: navy;"">div</span><span class=""token"" style=""color: navy;""> </span><span class=""token"" style=""color: rgb(2, 124, 124);"">class</span><span class=""token attr-equals"" style=""color: rgb(15, 43, 61);"">=</span><span class=""token"" style=""color: rgb(15, 43, 61);"">""</span><span class=""token"" style=""color: rgb(221, 17, 68);"">comment</span><span class=""token"" style=""color: rgb(15, 43, 61);"">""</span><span class=""token"" style=""color: rgb(15, 43, 61);"">&gt;</span><span> </span><span class=""token"" style=""color: rgb(113, 113, 101); font-style: italic;"">&lt;!-- some content --&gt;</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">&lt;/</span><span class=""token"" style=""color: navy;"">div</span><span class=""token"" style=""color: rgb(15, 43, 61);"">&gt;</span><span>\n</span><span>  </span><span class=""token"" style=""color: rgb(15, 43, 61);"">&lt;</span><span class=""token"" style=""color: navy;"">div</span><span class=""token"" style=""color: navy;""> </span><span class=""token"" style=""color: rgb(2, 124, 124);"">class</span><span class=""token attr-equals"" style=""color: rgb(15, 43, 61);"">=</span><span class=""token"" style=""color: rgb(15, 43, 61);"">""</span><span class=""token"" style=""color: rgb(221, 17, 68);"">comment</span><span class=""token"" style=""color: rgb(15, 43, 61);"">""</span><span class=""token"" style=""color: rgb(15, 43, 61);"">&gt;</span><span> </span><span class=""token"" style=""color: rgb(113, 113, 101); font-style: italic;"">&lt;!-- some content --&gt;</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">&lt;/</span><span class=""token"" style=""color: navy;"">div</span><span class=""token"" style=""color: rgb(15, 43, 61);"">&gt;</span><span>\n</span><span>  </span><span class=""token"" style=""color: rgb(15, 43, 61);"">&lt;</span><span class=""token"" style=""color: navy;"">div</span><span class=""token"" style=""color: navy;""> </span><span class=""token"" style=""color: rgb(2, 124, 124);"">class</span><span class=""token attr-equals"" style=""color: rgb(15, 43, 61);"">=</span><span class=""token"" style=""color: rgb(15, 43, 61);"">""</span><span class=""token"" style=""color: rgb(221, 17, 68);"">comment</span><span class=""token"" style=""color: rgb(15, 43, 61);"">""</span><span class=""token"" style=""color: rgb(15, 43, 61);"">&gt;</span><span> </span><span class=""token"" style=""color: rgb(113, 113, 101); font-style: italic;"">&lt;!-- some content --&gt;</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">&lt;/</span><span class=""token"" style=""color: navy;"">div</span><span class=""token"" style=""color: rgb(15, 43, 61);"">&gt;</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(15, 43, 61);"">&lt;/</span><span class=""token"" style=""color: navy;"">div</span><span class=""token"" style=""color: rgb(15, 43, 61);"">&gt;</span></code></div></div></pre>\n<p class=""chakra-text css-o3oz8b"">When we run the spam filter, we discover comments one and two have to be removed.</p>\n<p class=""chakra-text css-o3oz8b"">If we simply call <code class=""chakra-code css-1u83yg1"">.removeChild()</code> for each of the two comments that need to be removed, that\'s one reflow and one repaint <em class=""chakra-text css-o3oz8b"">for each change</em> (so a total of 2 reflows and 2 repaints). We could rebuild the whole thing in a <code class=""chakra-code css-1u83yg1"">DocumentFragment</code> and replace <code class=""chakra-code css-1u83yg1"">#comments</code> -- that\'s the time to rebuild (possibly involving reading files or data), plus at least one reflow and one repaint.</p>\n<p class=""chakra-text css-o3oz8b"">Or we could <em class=""chakra-text css-o3oz8b"">hide</em> <code class=""chakra-code css-1u83yg1"">#comments</code>, delete the spam, and show it again -- that\'s surprisingly fast, to the cost of one reflow and two repaints (and little else). It\'s fast because hiding doesn\'t change the layout, it just erases that section of the screen (1 repaint). When you make the changed section visible again, that\'s a reflow and a repaint.</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-js"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span class=""token"" style=""color: rgb(113, 113, 101); font-style: italic;"">// hide #comments</span><span>\n</span><span></span><span class=""token dom"" style=""color: rgb(2, 124, 124);"">document</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token method property-access"" style=""color: rgb(153, 0, 0); font-weight: bold;"">getElementById</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(221, 17, 68);"">""comments""</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token property-access"">style</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token property-access"">display</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">=</span><span> </span><span class=""token"" style=""color: rgb(221, 17, 68);"">""none""</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span>\n<span></span><span class=""token"" style=""color: rgb(113, 113, 101); font-style: italic;"">// delete spam comments</span><span>\n</span>\n<span></span><span class=""token"" style=""color: rgb(113, 113, 101); font-style: italic;"">// show #comments</span><span>\n</span><span></span><span class=""token dom"" style=""color: rgb(2, 124, 124);"">document</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token method property-access"" style=""color: rgb(153, 0, 0); font-weight: bold;"">getElementById</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(221, 17, 68);"">""comments""</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token property-access"">style</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token property-access"">display</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">=</span><span> </span><span class=""token"" style=""color: rgb(221, 17, 68);"">""block""</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span></code></div></div></pre>\n<p class=""chakra-text css-o3oz8b"">In general, if you have to make a group of changes, hide/change all/show is a great pattern to use if the changes are relatively contained.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><h3 class=""chakra-heading css-k57syw"">Further Research</h3>\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://www.udacity.com/course/website-performance-optimization--ud884"">Website Performance Optimization<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a> course by Udacity</li><li class=""css-cvpopp""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://developers.google.com/speed/articles/reflow"">Minimizing browser reflow<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a> from PageSpeed Tools Guides</li><li class=""css-cvpopp""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://developers.google.com/web/fundamentals/performance/rendering/avoid-large-complex-layouts-and-layout-thrashing"">Avoid Large, Complex Layouts and Layout Thrashing<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a> from Google\'s Web Fundamentals Guides</li><li class=""css-cvpopp""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://developers.google.com/web/tools/chrome-devtools/evaluate-performance/reference#rendering"">Performance Analysis Reference<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a> from Google\'s Web Fundamentals Guides</li><li class=""css-cvpopp"">Article <a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""http://www.stubbornella.org/content/2009/03/27/reflows-repaints-css-performance-making-your-javascript-slow/"">Reflows &amp; Repaints: CSS Performance Making Your JavaScript Slow?<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a></li></ul></div>']",[],,,,,,,,,,,,,,,,,,,,,,,
JavaScript and the DOM,JavaScript and the DOM,Lesson 4: Performance,4.4  The Call Stack,"['<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Let\'s look at some code:</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-js"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">function</span><span> </span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">addParagraph</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">{</span><span>\n</span><span>    </span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">const</span><span> para </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">=</span><span> </span><span class=""token dom"" style=""color: rgb(2, 124, 124);"">document</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token method property-access"" style=""color: rgb(153, 0, 0); font-weight: bold;"">createElement</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'p\'</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span><span>    para</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token property-access"">textContent</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">=</span><span> </span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'JavaScript is single threaded!\'</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span><span>    </span><span class=""token dom"" style=""color: rgb(2, 124, 124);"">document</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token property-access"">body</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token method property-access"" style=""color: rgb(153, 0, 0); font-weight: bold;"">appendChild</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span>para</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(15, 43, 61);"">}</span><span>\n</span>\n<span></span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">function</span><span> </span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">appendNewMessage</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">{</span><span>\n</span><span>    </span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">const</span><span> para </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">=</span><span> </span><span class=""token dom"" style=""color: rgb(2, 124, 124);"">document</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token method property-access"" style=""color: rgb(153, 0, 0); font-weight: bold;"">createElement</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'p\'</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span><span>    para</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token property-access"">textContent</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">=</span><span> </span><span class=""token"" style=""color: rgb(221, 17, 68);"">""Isn\'t that cool?""</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span><span>    </span><span class=""token dom"" style=""color: rgb(2, 124, 124);"">document</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token property-access"">body</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token method property-access"" style=""color: rgb(153, 0, 0); font-weight: bold;"">appendChild</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span>para</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(15, 43, 61);"">}</span><span>\n</span>\n<span></span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">addParagraph</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">appendNewMessage</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span></code></div></div></pre>\n<p class=""chakra-text css-o3oz8b"">Keeping JavaScript\'s single-threaded nature in mind (meaning it can only perform one task at a time), let\'s break down this code into the order it will run:</p>\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp"">the <code class=""chakra-code css-1u83yg1"">addParagraph()</code> function is declared on line 1</li><li class=""css-cvpopp"">the <code class=""chakra-code css-1u83yg1"">appendNewMessage()</code> function is declared on line 6</li><li class=""css-cvpopp""><code class=""chakra-code css-1u83yg1"">addParagraph()</code> is called on line 13\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp"">execution moves into the function and executes all three lines in order</li><li class=""css-cvpopp"">now that the function is finished, execution returns to where it was called</li></ul>\n</li><li class=""css-cvpopp"">the <code class=""chakra-code css-1u83yg1"">appendNewMessage()</code> function is called on line 14\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp"">execution moves into the function and executes all three lines in order</li><li class=""css-cvpopp"">now that the function is finished, execution returns to where it was called</li></ul>\n</li><li class=""css-cvpopp"">the program ends because all lines of code have been executed</li></ul>\n<p class=""chakra-text css-o3oz8b"">Hopefully, the order that this code executed in wasn\'t surprising. There are a couple of things I particularly want you to pay attention to. First, is the run-to-completion nature of the code. When <code class=""chakra-code css-1u83yg1"">addParagraph()</code> is invoked on line 13, <em class=""chakra-text css-o3oz8b"">all of the code in the function gets executed</em>: it doesn\'t just execute some lines and leave other lines to be executed later. The entire block of code is run. A second thing I want to point out is that <code class=""chakra-code css-1u83yg1"">addParagraph()</code> is invoked, runs, and finishes <em class=""chakra-text css-o3oz8b"">before</em> <code class=""chakra-code css-1u83yg1"">appendNewMessage()</code> is invoked (including a possible reflow and repaint); JavaScript doesn\'t execute multiple lines/functions at the same time (this is single-threading...processing one command at a time!).</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">I have a question for you - once <code class=""chakra-code css-1u83yg1"">addParagraph()</code> has been invoked and it runs the lines of code inside the <code class=""chakra-code css-1u83yg1"">addParagraph()</code> function, how does it know to go <em class=""chakra-text css-o3oz8b"">back to <code class=""chakra-code css-1u83yg1"">appendNewMessage()</code></em>? How does it keep track of that?</p>\n<p class=""chakra-text css-o3oz8b"">What if we changed this code slightly to create nested functions:</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-js"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">function</span><span> </span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">addParagraph</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">{</span><span>\n</span><span>    </span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">const</span><span> para </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">=</span><span> </span><span class=""token dom"" style=""color: rgb(2, 124, 124);"">document</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token method property-access"" style=""color: rgb(153, 0, 0); font-weight: bold;"">createElement</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'p\'</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span><span>    para</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token property-access"">textContent</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">=</span><span> </span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'JavaScript is single threaded!\'</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span>\n<span>    </span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">appendNewMessage</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span><span>    </span><span class=""token dom"" style=""color: rgb(2, 124, 124);"">document</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token property-access"">body</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token method property-access"" style=""color: rgb(153, 0, 0); font-weight: bold;"">appendChild</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span>para</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(15, 43, 61);"">}</span><span>\n</span>\n<span></span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">function</span><span> </span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">appendNewMessage</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">{</span><span>\n</span><span>    </span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">const</span><span> para </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">=</span><span> </span><span class=""token dom"" style=""color: rgb(2, 124, 124);"">document</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token method property-access"" style=""color: rgb(153, 0, 0); font-weight: bold;"">createElement</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'p\'</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span>\n<span>    para</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token property-access"">textContent</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">=</span><span> </span><span class=""token"" style=""color: rgb(221, 17, 68);"">""Isn\'t that cool?""</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span><span>    </span><span class=""token dom"" style=""color: rgb(2, 124, 124);"">document</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token property-access"">body</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token method property-access"" style=""color: rgb(153, 0, 0); font-weight: bold;"">appendChild</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span>para</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(15, 43, 61);"">}</span><span>\n</span>\n<span></span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">addParagraph</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span></code></div></div></pre>\n<p class=""chakra-text css-o3oz8b"">Notice that the call to <code class=""chakra-code css-1u83yg1"">appendNewMessage()</code> is located <em class=""chakra-text css-o3oz8b"">inside the</em> <code class=""chakra-code css-1u83yg1"">addParagraph()</code> <em class=""chakra-text css-o3oz8b"">function</em>. First, <code class=""chakra-code css-1u83yg1"">addParagraph()</code> is invoked. Then <code class=""chakra-code css-1u83yg1"">appendNewMessage()</code> is invoked on line 5. Once <code class=""chakra-code css-1u83yg1"">appendNewMessage()</code> has finished running, execution returns and finishes running the last line of code in the <code class=""chakra-code css-1u83yg1"">addParagraph()</code> function...but how does it know how to do that? How does the JavaScript engine know where it left off and how to get back to it?</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">How many items (frames) will be on the stack when the code reaches the <code class=""chakra-code css-1u83yg1"">""stop here""</code> comment?</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-js"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">function</span><span> </span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">quiz</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">{</span><span>\n</span><span>  </span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">var</span><span> y </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">=</span><span> </span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'yes\'</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span><span>  </span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">questions</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span><span>  </span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">fun</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(15, 43, 61);"">}</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">function</span><span> </span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">questions</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">{</span><span>\n</span><span>  </span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">var</span><span> y </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">=</span><span> </span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'no\'</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span><span>  </span><span class=""token control-flow"" style=""color: rgb(15, 43, 61); font-weight: bold;"">return</span><span> </span><span class=""token"" style=""color: rgb(2, 124, 124);"">7</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(15, 43, 61);"">}</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">function</span><span> </span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">are</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">{</span><span>\n</span><span>  </span><span class=""token control-flow"" style=""color: rgb(15, 43, 61); font-weight: bold;"">return</span><span> </span><span class=""token"" style=""color: rgb(2, 124, 124);"">3</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(15, 43, 61);"">}</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">function</span><span> </span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">fun</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">{</span><span>\n</span><span>  </span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">are</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span><span>  </span><span class=""token"" style=""color: rgb(113, 113, 101); font-style: italic;"">// stop here</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(15, 43, 61);"">}</span><span>\n</span>\n<span></span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">quiz</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span></code></div></div></pre>\n<p class=""chakra-text css-o3oz8b"">Assume there is no ""&lt;main&gt;""/default frame.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">0</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">1</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">2</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">3</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">4</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Use this code for the following question.</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-js"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">function</span><span> </span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">dolphins</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">{</span><span>\n</span><span>  </span><span class=""token"" style=""color: rgb(113, 113, 101); font-style: italic;"">// stop here</span><span>\n</span><span>  </span><span class=""token control-flow"" style=""color: rgb(15, 43, 61); font-weight: bold;"">return</span><span> </span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'llamas\'</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(15, 43, 61);"">}</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">function</span><span> </span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">rhinos</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">{</span><span>\n</span><span>  </span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">var</span><span> y </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">=</span><span> </span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'no\'</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span><span>  </span><span class=""token control-flow"" style=""color: rgb(15, 43, 61); font-weight: bold;"">return</span><span> </span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">penguins</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(15, 43, 61);"">}</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">function</span><span> </span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">penguins</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">{</span><span>\n</span><span>  </span><span class=""token control-flow"" style=""color: rgb(15, 43, 61); font-weight: bold;"">return</span><span> </span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">camels</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(15, 43, 61);"">}</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">function</span><span> </span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">camels</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">{</span><span>\n</span><span>  </span><span class=""token control-flow"" style=""color: rgb(15, 43, 61); font-weight: bold;"">return</span><span> </span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">dolphins</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(15, 43, 61);"">}</span><span>\n</span>\n<span></span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">rhinos</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span></code></div></div></pre></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Put the function names in the correct order they would appear when the <code class=""chakra-code css-1u83yg1"">// stop here</code> comment is reached. Remember to put the oldest/initial at the bottom of the stack. Assume there is no ""&lt;main&gt;""/default frame.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">camels</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">rhinos</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">dolphins</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">penguins</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Top of the stack</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">2nd item in the stack</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">3rd item in the stack</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">bottom of the stack</p></div>', '<div class=""ureact-markdown css-tc5hjw""><h3 class=""chakra-heading css-k57syw"">Further Research</h3>\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://developer.mozilla.org/en-US/docs/Glossary/Call_stack"">Call stack<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a> on MDN</li><li class=""css-cvpopp""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://en.wikipedia.org/wiki/Call_stack"">Call stack<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a> on Wikipedia</li></ul></div>']",[],https://www.youtube.com/embed/J9iKeNhoXNM,,,,,,,,,,,,,,,,,,,,,,
JavaScript and the DOM,JavaScript and the DOM,Lesson 4: Performance,4.5  The Event Loop,"['<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Not all of the code that we write is 100% <em class=""chakra-text css-o3oz8b"">JavaScript</em> code. Some of the code is interacting with the Web APIs (also known as ""browser APIs""). There are many more examples, but both <code class=""chakra-code css-1u83yg1"">.addEventListener()</code> and <code class=""chakra-code css-1u83yg1"">setTimeout()</code> are Web APIs.</p>\n<p class=""chakra-text css-o3oz8b"">Let\'s look back at this code:</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-js"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span class=""token console"" style=""color: rgb(68, 85, 136); font-weight: bold;"">console</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token method property-access"" style=""color: rgb(153, 0, 0); font-weight: bold;"">log</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'howdy\'</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span> </span><span class=""token"" style=""color: rgb(113, 113, 101); font-style: italic;"">// 1</span><span>\n</span><span></span><span class=""token dom"" style=""color: rgb(2, 124, 124);"">document</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token method property-access"" style=""color: rgb(153, 0, 0); font-weight: bold;"">addEventListener</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'click\'</span><span class=""token"" style=""color: rgb(15, 43, 61);"">,</span><span> </span><span class=""token"" style=""color: rgb(113, 113, 101); font-style: italic;"">// 2</span><span>\n</span><span>  </span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">function</span><span> </span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">numbers</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">{</span><span>\n</span><span>    </span><span class=""token console"" style=""color: rgb(68, 85, 136); font-weight: bold;"">console</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token method property-access"" style=""color: rgb(153, 0, 0); font-weight: bold;"">log</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'123\'</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(15, 43, 61);"">}</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span><span></span><span class=""token console"" style=""color: rgb(68, 85, 136); font-weight: bold;"">console</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token method property-access"" style=""color: rgb(153, 0, 0); font-weight: bold;"">log</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'ice cream is tasty\'</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span> </span><span class=""token"" style=""color: rgb(113, 113, 101); font-style: italic;"">// 3</span></code></div></div></pre>\n<p class=""chakra-text css-o3oz8b"">First, the browser runs this block of code to completion -- that is, steps 1, 2, and 3. Step 2 passes an event handler (<code class=""chakra-code css-1u83yg1"">numbers</code>) to the browser for future use: the browser will hold this function until there\'s a click event.</p>\n<p class=""chakra-text css-o3oz8b"">What happens if someone clicks before this block of code is done? When there is a click event and there is code already running, the <code class=""chakra-code css-1u83yg1"">numbers</code> function can\'t just be added directly to the Call Stack because of JavaScript\'s run-to-completion nature; we can\'t interrupt any code that might currently be happening. So the function is placed in the Queue. When all of the functions in the Call Stack have finished (also known as <em class=""chakra-text css-o3oz8b"">idle time</em>), then the Queue is checked to see if anything is waiting. If something is in the Queue, then it\'s run, creating an entry on the call stack.</p>\n<p class=""chakra-text css-o3oz8b"">IMPORTANT: The key things to remember here are 1) current synchronous code runs to completion, and 2) events are processed when the browser isn\'t busy. Asynchronous code (such as loading an image) runs outside of this loop and sends an event when it is done.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">What is the order that the <code class=""chakra-code css-1u83yg1"">iceCream</code> function goes through if the <code class=""chakra-code css-1u83yg1"">&lt;footer&gt;</code> is clicked?</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-js"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">const</span><span> pageFooter </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">=</span><span> </span><span class=""token dom"" style=""color: rgb(2, 124, 124);"">document</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token method property-access"" style=""color: rgb(153, 0, 0); font-weight: bold;"">querySelector</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'#page-footer\'</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span>\n<span>pageFooter</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token method property-access"" style=""color: rgb(153, 0, 0); font-weight: bold;"">addEventListener</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'click\'</span><span class=""token"" style=""color: rgb(15, 43, 61);"">,</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">function</span><span> </span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">iceCream</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">{</span><span>\n</span><span>    </span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">const</span><span> footerDetails </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">=</span><span> </span><span class=""token dom"" style=""color: rgb(2, 124, 124);"">document</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token method property-access"" style=""color: rgb(153, 0, 0); font-weight: bold;"">querySelector</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'#details\'</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span>    \n<span>    footerDetails</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token property-access"">textContent</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">=</span><span> </span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'Everyone should eat ice cream!\'</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(15, 43, 61);"">}</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span></code></div></div></pre></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">the Call Stack</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Browser</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">the Queue</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">First</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Second</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Third</p></div>', '<div class=""ureact-markdown css-tc5hjw""><h3 class=""chakra-heading css-k57syw"">Further Research</h3>\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/EventLoop"">Concurrency model and Event Loop<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a></li><li class=""css-cvpopp""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://developer.mozilla.org/en-US/docs/Web/Guide/Events/Overview_of_Events_and_Handlers"">Events and Handlers Overview<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a></li><li class=""css-cvpopp""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://www.youtube.com/watch?v=8aGhZQkoFbQ"">What the heck is the event loop anyway? by Philip Roberts on YouTube<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a></li></ul></div>']",['https://video.udacity-data.com/topher/2017/December/5a31c70d_l4-performance-js-the-dom/l4-performance-js-the-dom.jpg'],https://www.youtube.com/embed/uBdemYBG-ek,,,,,,,,,,,,,,,,,,,,,,
JavaScript and the DOM,JavaScript and the DOM,Lesson 4: Performance,4.6  setTimeout,"['<div class=""ureact-markdown css-tc5hjw""><h3 class=""chakra-heading css-k57syw"">Break Up Long-Running Code</h3>\n<p class=""chakra-text css-o3oz8b"">Do you remember back to a previous section when we wrote JavaScript code to add two hundred paragraphs to the page? Now, instead of adding two <em class=""chakra-text css-o3oz8b"">hundred</em> paragraphs to the page, what if we added <em class=""chakra-text css-o3oz8b"">twenty thousand</em>? That\'s a lot of elements to create, append, and insert into the page!</p>\n<p class=""chakra-text css-o3oz8b"">Now keep in mind how reflow and repaint affect an app\'s performance. We want to write our JavaScript code to take into consideration reflow and repaint and to cause the fewest number of these.</p>\n<p class=""chakra-text css-o3oz8b"">However, we also want to make sure our app is responsive to user interaction. While JavaScript is running, the page is ""busy"" and the user won\'t be able to interact with the page (e.g. clicking a button, filling out a form). Remember that this is because JavaScript runs <em class=""chakra-text css-o3oz8b"">synchronously</em>. So it will run to completion (creating, appending, and inserting all twenty thousand elements), and it does this <em class=""chakra-text css-o3oz8b"">before</em> it is able to respond to any actions the user has taken. The function that creates all of these elements and adds them to the page will be in the Call Stack until it\'s completely finished.</p>\n<p class=""chakra-text css-o3oz8b"">One way to give the user a chance to interact with the page is to break up the adding of the content into chunks. Let\'s do this with <code class=""chakra-code css-1u83yg1"">setTimeout()</code>:</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-js"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">let</span><span> count </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">=</span><span> </span><span class=""token"" style=""color: rgb(2, 124, 124);"">1</span><span>\n</span>\n<span></span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">function</span><span> </span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">generateParagraphs</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">{</span><span>\n</span><span>    </span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">const</span><span> fragment </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">=</span><span> </span><span class=""token dom"" style=""color: rgb(2, 124, 124);"">document</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token method property-access"" style=""color: rgb(153, 0, 0); font-weight: bold;"">createDocumentFragment</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span>\n<span>    </span><span class=""token control-flow"" style=""color: rgb(15, 43, 61); font-weight: bold;"">for</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">let</span><span> i </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">=</span><span> </span><span class=""token"" style=""color: rgb(2, 124, 124);"">1</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span> i </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">&lt;=</span><span> </span><span class=""token"" style=""color: rgb(2, 124, 124);"">500</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span> i</span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">++</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">{</span><span>\n</span><span>        </span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">const</span><span> newElement </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">=</span><span> </span><span class=""token dom"" style=""color: rgb(2, 124, 124);"">document</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token method property-access"" style=""color: rgb(153, 0, 0); font-weight: bold;"">createElement</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'p\'</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span><span>        newElement</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token property-access"">textContent</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">=</span><span> </span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'This is paragraph number \'</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">+</span><span> count</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span><span>        count </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">=</span><span> count </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">+</span><span> </span><span class=""token"" style=""color: rgb(2, 124, 124);"">1</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span>\n<span>        fragment</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token method property-access"" style=""color: rgb(153, 0, 0); font-weight: bold;"">appendChild</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span>newElement</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span><span>    </span><span class=""token"" style=""color: rgb(15, 43, 61);"">}</span><span>\n</span>\n<span>    </span><span class=""token dom"" style=""color: rgb(2, 124, 124);"">document</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token property-access"">body</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token method property-access"" style=""color: rgb(153, 0, 0); font-weight: bold;"">appendChild</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span>fragment</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span>\n<span>    </span><span class=""token control-flow"" style=""color: rgb(15, 43, 61); font-weight: bold;"">if</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span>count </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">&lt;</span><span> </span><span class=""token"" style=""color: rgb(2, 124, 124);"">20000</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">{</span><span>\n</span><span>        </span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">setTimeout</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span>generateParagraphs</span><span class=""token"" style=""color: rgb(15, 43, 61);"">,</span><span> </span><span class=""token"" style=""color: rgb(2, 124, 124);"">0</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span><span>    </span><span class=""token"" style=""color: rgb(15, 43, 61);"">}</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(15, 43, 61);"">}</span><span>\n</span>\n<span></span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">generateParagraphs</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span></code></div></div></pre>\n<p class=""chakra-text css-o3oz8b"">This code starts off by setting a <code class=""chakra-code css-1u83yg1"">count</code> variable to <code class=""chakra-code css-1u83yg1"">1</code>. This will keep track of the number of paragraphs that have been added. The <code class=""chakra-code css-1u83yg1"">generateParagraphs()</code> function will add 500 paragraphs to the page each time it\'s invoked. The interesting thing is that there\'s a <code class=""chakra-code css-1u83yg1"">setTimeout()</code> call at the end of the <code class=""chakra-code css-1u83yg1"">generateParagraphs()</code> function. If there are less than twenty thousand elements, then the <code class=""chakra-code css-1u83yg1"">setTimeout()</code> will be used to call the <code class=""chakra-code css-1u83yg1"">generateParagraphs()</code> function.</p>\n<p class=""chakra-text css-o3oz8b"">If you try running this code on a page, you can still interact with the page while the code is running. It doesn\'t lock up or freeze the page. And it doesn\'t lock up or freeze because of the <code class=""chakra-code css-1u83yg1"">setTimeout()</code> calls.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><h3 class=""chakra-heading css-k57syw"">Further Research</h3>\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/setTimeout"">setTimeout docs on MDN<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a></li><li class=""css-cvpopp""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/EventLoop"">Concurrency model and Event Loop<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a></li><li class=""css-cvpopp""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://www.youtube.com/watch?v=8aGhZQkoFbQ"">What the heck is the event loop anyway? by Philip Roberts on YouTube<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a></li><li class=""css-cvpopp""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://javascript.info/settimeout-setinterval"">Scheduling: setTimeout and setInterval<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a></li></ul></div>']",[],,,,,,,,,,,,,,,,,,,,,,,
JavaScript and the DOM,JavaScript and the DOM,Lesson 4: Performance,4.7  Lesson Summary,"['<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">If you\'d like to learn more about how to make performance improvements to your sites, check out our course <a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://www.udacity.com/course/browser-rendering-optimization--ud860"">Browser Rendering Optimization<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a> made in partnership with Google.</p></div>']",[],https://www.youtube.com/embed/7J_-rLV0Lp0,,,,,,,,,,,,,,,,,,,,,,
JavaScript and the DOM,JavaScript and the DOM,Lesson 4: Performance,4.8  Course Summary,"['<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Please take moment to rate the quality of this course.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Course content was too in-depth.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Course content was too easy.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Course content was just right.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">I would love to hear your thoughts about this course! Feel free to write anything about your experience taking this course in the space below. Some things you could address are:</p>\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp"">the number and/or quality of the headshot videos</li><li class=""css-cvpopp"">the number and/or quality of the screencast videos</li><li class=""css-cvpopp"">the number and/or quality of quizzes</li><li class=""css-cvpopp"">the amount of text</li><li class=""css-cvpopp"">the level of detail</li></ul></div>']",[],https://www.youtube.com/embed/eu7R-VGewKY,,,,,,,,,,,,,,,,,,,,,,
