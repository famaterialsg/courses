course,sub_course,module,sub_module,content_html_list,img_list,video_url
Version Control with Git,Version Control with Git,Lesson 1: What is Version Control?,1.1  What is Version Control,"['<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">I just said ""version control"". Now since you\'re in this course, you might already know a bit about version control. But if you don\'t, a handy trick I\'ve learned is to try reading the words in reverse - so ""version control"" would become ""control version""! So a Version Control System is just software that helps you control (or manage) the different versions...of something (typically source code).</p>\n<h3 class=""chakra-heading css-k57syw"">Further Research</h3>\n<p class=""chakra-text css-o3oz8b""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://en.wikipedia.org/wiki/Version_control"">Version Control on Wikipedia<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a></p></div>', '<div class=""ureact-markdown css-tc5hjw""><h2 class=""chakra-heading css-fz7yxd"">VCS Info</h2>\n<p class=""chakra-text css-o3oz8b"">There are <a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://en.wikipedia.org/wiki/List_of_version_control_software"">a number of Version Control Systems out there<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a>. This alone should prove that version control is incredibly important. Three of the most popular version control systems are:</p>\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://git-scm.com/"">Git<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a></li><li class=""css-cvpopp""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://subversion.apache.org/"">Subversion<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a></li><li class=""css-cvpopp""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://www.mercurial-scm.org/"">Mercurial<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a></li></ul>\n<p class=""chakra-text css-o3oz8b"">There are two main types of version control system models:</p>\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp"">the <em class=""chakra-text css-o3oz8b"">centralized model</em> - all users connect to a central, master repository</li><li class=""css-cvpopp"">the <em class=""chakra-text css-o3oz8b"">distributed model</em> - each user has the entire repository on their computer</li></ul>\n<h3 class=""chakra-heading css-k57syw"">Further Research</h3>\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""http://blogs.atlassian.com/2012/02/version-control-centralized-dvcs/"">Centralized vs. DVCS from the Atlassian Blog<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a></li><li class=""css-cvpopp""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://en.wikipedia.org/wiki/Distributed_version_control"">Distributed version control on Wikipedia<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a></li></ul></div>', '<div class=""ureact-markdown css-tc5hjw""><h2 class=""chakra-heading css-fz7yxd"">Recap</h2>\n<p class=""chakra-text css-o3oz8b"">Remember that the main point of a version control system is to help you maintain a detailed history of the project as well as the ability to work on different versions of it. Having a detailed history of a project is important because it lets you see the progress of the project over time. If needed, you can also jump back to any point in the project to recover data or files.</p>\n<p class=""chakra-text css-o3oz8b"">In this course, we\'ll be using Git which is a distributed version control system. You might be surprised to discover that you\'re already using version control all the time!</p></div>']",[],https://www.youtube.com/embed/lbR82UD5F0c
Version Control with Git,Version Control with Git,Lesson 1: What is Version Control?,1.2  Version Control In Daily Use,"['<div class=""ureact-markdown css-tc5hjw""><h2 class=""chakra-heading css-fz7yxd"">Version Control Is Everywhere</h2>\n<p class=""chakra-text css-o3oz8b"">My job revolves around working with documents. I create new documents all the time, I fill them with information (hopefully informative information!) and then edit...edit...edit! Is your job like this? Perhaps it\'s not documents of text, but you\'re probably working with data in some form or another that changes over time.</p>\n<p class=""chakra-text css-o3oz8b"">Now you might not think that you\'re using version control when working with documents, and you\'d be right...sort of. You\'re not <em class=""chakra-text css-o3oz8b"">actively</em> maintaining different versions of a document as you write it. But that doesn\'t mean there aren\'t different versions of the document. The computer is keeping track of the different versions for you!</p>\n<p class=""chakra-text css-o3oz8b"">Don\'t believe me? Aside from pondering your propensity towards doubting, let\'s prove I\'m right:</p>\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp"">open up your favorite text editor/code editor</li><li class=""css-cvpopp"">type some content (how about ""version control is dull!"")</li><li class=""css-cvpopp"">change one of the words in you wrote (e.g. change ""dull"" to ""life-changing awesome"")</li><li class=""css-cvpopp"">now (here it comes…!) press <code class=""chakra-code css-1u83yg1"">cmd</code> + <code class=""chakra-code css-1u83yg1"">z</code> or <code class=""chakra-code css-1u83yg1"">ctrl</code> + <code class=""chakra-code css-1u83yg1"">z</code></li></ul>\n<p class=""chakra-text css-o3oz8b"">💥 Version control in action! (See?...told you I wasn\'t lying) I bet you use the ""undo"" command all the time. I know that I sure do!</p>\n<p class=""chakra-text css-o3oz8b"">Practically every application I\'ve ever used has an undo feature. You can think of this as a form of version control, but it\'s a rather limited form of version control. Let\'s look at a more powerful form by checking out a Google Docs document.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><em class=""chakra-text css-o3oz8b"">The Google Doc outline for this Git Course.</em></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">If you\'ve ever written in a Google doc, have you noticed the small gray text at the top that tells you about the status of the document? Ever noticed that as you type, it\'s actively saving the document? Then, when you finish typing, it tells you that the document has saved.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><em class=""chakra-text css-o3oz8b"">Status of a Google Docs document. The status says ""Saving…"" while the document is being edited, and changes to ""All changes saved in Drive"" after the content is saved.</em></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">The <em class=""chakra-text css-o3oz8b"">real</em> question is, did you know that is a link that you can click on? Wanna see for yourself? Try it out in one of your own Google Docs.</p>\n<p class=""chakra-text css-o3oz8b"">Clicking on the link takes you to a ""Revision history"" page. (Ooo! Did you notice the word ""revision""? The word ""version"" is a synonym for ""revision""!)</p></div>', '<div class=""ureact-markdown css-tc5hjw""><h2 class=""chakra-heading css-fz7yxd"">Revision History Isn\'t Powerful Enough</h2>\n<p class=""chakra-text css-o3oz8b"">Google Docs\' Revision history page is incredibly powerful! I\'ve used it on several occasions to salvage text that I\'d written at one point, erased, and then realized I actually <em class=""chakra-text css-o3oz8b"">did</em> want to keep.</p>\n<p class=""chakra-text css-o3oz8b"">But for all its ability, it\'s not as powerful as we\'d like. What\'s it missing? A few that I can think of are:</p>\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp"">the ability to label a change</li><li class=""css-cvpopp"">the ability to give a detailed explanation of why a change was made</li><li class=""css-cvpopp"">the ability to move between different versions of the same document</li><li class=""css-cvpopp"">the ability to undo change A, make edit B, then get back change A without affecting edit B</li></ul>\n<p class=""chakra-text css-o3oz8b"">The version control tool, Git, can do all of those things - <em class=""chakra-text css-o3oz8b"">and more</em>!!! (bet you didn\'t see <em class=""chakra-text css-o3oz8b"">that</em> coming!) So have I sold you yet on the awesomeness that is Git? I hope so, cause we\'re about to dive into it in the next section.</p></div>']",['https://video.udacity-data.com/topher/2017/February/58a75370_ud123-l1-git-course-outline/ud123-l1-git-course-outline.png'],https://www.youtube.com/embed/GcvvbdKEchk
Version Control with Git,Version Control with Git,Lesson 1: What is Version Control?,1.3  Git and Version Control Terminology,"['<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">You can find the Terminology handout at the bottom of the page. The file is named <strong>Git Key Terms</strong> and is in the Course Materials section.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><h2 class=""chakra-heading css-fz7yxd"">Terminology</h2>\n<h2 class=""chakra-heading css-fz7yxd"">Version Control System / Source Code Manager</h2>\n<p class=""chakra-text css-o3oz8b"">A <strong>version control system</strong> (abbreviated as <strong>VCS</strong>) is a tool that manages different versions of source code. A <strong>source code manager</strong> (abbreviated as <strong>SCM</strong>) is another name for a version control system.</p>\n<p class=""chakra-text css-o3oz8b"">Git is an SCM (and therefore a VCS!). The URL for the Git website is <a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://git-scm.com/"">https://git-scm.com/<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a> (see how it has ""SCM"" directly in its domain!).</p>\n<h2 class=""chakra-heading css-fz7yxd"">Commit</h2>\n<p class=""chakra-text css-o3oz8b"">Git thinks of its data like a set of snapshots of a mini filesystem. Every time you <strong>commit</strong> (save the state of your project in Git), it basically takes a picture of what all your files look like at that moment and stores a reference to that snapshot. You can think of it as a save point in a game - it saves your project\'s files and any information about them.</p>\n<p class=""chakra-text css-o3oz8b"">Everything you do in Git is to help you make commits, so a commit is <em class=""chakra-text css-o3oz8b"">the</em> fundamental unit in Git.</p>\n<h2 class=""chakra-heading css-fz7yxd"">Repository / repo</h2>\n<p class=""chakra-text css-o3oz8b"">A <strong>repository</strong> is a directory which contains your project work, as well as a few files (hidden by default on Mac OS X) which are used to communicate with Git. Repositories can exist either locally on your computer or as a remote copy on another computer. A repository is made up of commits.</p>\n<h2 class=""chakra-heading css-fz7yxd"">Working Directory</h2>\n<p class=""chakra-text css-o3oz8b"">The <strong>Working Directory</strong> is the files that you see in your computer\'s file system. When you open your project files up on a code editor, you\'re working with files in the Working Directory.</p>\n<p class=""chakra-text css-o3oz8b"">This is in contrast to the files that have been saved (in commits!) in the repository.</p>\n<p class=""chakra-text css-o3oz8b"">When working with Git, the Working Directory is also different from the command line\'s concept of the  <em class=""chakra-text css-o3oz8b"">current working directory</em> which is the directory that your shell is ""looking at"" right now.</p>\n<h2 class=""chakra-heading css-fz7yxd"">Checkout</h2>\n<p class=""chakra-text css-o3oz8b"">A <strong>checkout</strong> is when content in the repository has been copied to the Working Directory.</p>\n<h2 class=""chakra-heading css-fz7yxd"">Staging Area / Staging Index / Index</h2>\n<p class=""chakra-text css-o3oz8b"">A file in the Git directory that stores information about what will go into your next commit. You can think of the <strong>staging area</strong> as a prep table where Git will take the next commit. Files on the Staging Index are poised to be added to the repository.</p>\n<h2 class=""chakra-heading css-fz7yxd"">SHA</h2>\n<p class=""chakra-text css-o3oz8b"">A <strong>SHA</strong> is basically an ID number for each commit. Here\'s what a commit\'s SHA might look like: <code class=""chakra-code css-1u83yg1"">e2adf8ae3e2e4ed40add75cc44cf9d0a869afeb6</code>.</p>\n<p class=""chakra-text css-o3oz8b"">It is a 40-character string composed of characters (0–9 and a–f) and calculated based on the contents of a file or directory structure in Git. ""SHA"" is shorthand for ""Secure Hash Algorithm"". If you\'re interested in learning about hashes, check out our <a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://www.udacity.com/course/intro-to-computer-science--cs101"">Intro to Computer Science course<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a>.</p>\n<h2 class=""chakra-heading css-fz7yxd"">Branch</h2>\n<p class=""chakra-text css-o3oz8b"">A <strong>branch</strong> is when a new line of development is created that diverges from the main line of development. This alternative line of development can continue without altering the main line.</p>\n<p class=""chakra-text css-o3oz8b"">Going back to the example of save point in a game, you can think of a branch as where you make a save point in your game and then decide to try out a risky move in the game. If the risky move doesn\'t pan out, then you can just go back to the save point. The key thing that makes branches incredibly powerful is that you can make save points on one branch, and then switch to a different branch and make save points there, too.</p>\n<p class=""chakra-text css-o3oz8b"">With this terminology in mind, let\'s take a high-level look at how we\'ll be using Git by looking at the typical workflow when working with version control.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">The HTML file has HTML and CSS changes on the Staging Index and an additional HTML change in the Working Directory. From what you\'ve learned so far with how committing works, what do you think will get committed if a commit were made right now?</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">only the HTML file changes on the Staging Index</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">only the CSS file changes on the Staging Index</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">the HTML and CSS file changes on the Staging Index</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">the HTML file changes in <em class=""chakra-text css-o3oz8b"">both</em> the Working Directory <em class=""chakra-text css-o3oz8b"">and</em> the Staging Index</p></div>', '<div class=""ureact-markdown css-tc5hjw""><h4 class=""chakra-heading css-1dlhxqh"">Supporting Materials</h4>\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://video.udacity-data.com/topher/2017/March/58d31eb5_ud123-git-keyterms/ud123-git-keyterms.pdf"">Git Terms PDF<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a></li></ul></div>']",[],https://www.youtube.com/embed/bf26adzeqMM
Version Control with Git,Version Control with Git,Lesson 1: What is Version Control?,1.4  Mac/Linux Setup,"['<div class=""ureact-markdown css-tc5hjw""><h2 class=""chakra-heading css-fz7yxd"">Installing Git</h2>\n<p class=""chakra-text css-o3oz8b"">Git is actually installed on MacOS, but we\'ll be reinstalling it so that we\'ll have the newest version:</p>\n<ol role=""list"" class=""css-13a5a39""><li class=""css-cvpopp"">go to <a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://git-scm.com/downloads"">https://git-scm.com/downloads<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a></li></ol>\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp"">download the software for Mac</li><li class=""css-cvpopp"">install Git choosing all of the default options</li></ul>\n<p class=""chakra-text css-o3oz8b"">Once everything is installed, you should be able to run <code class=""chakra-code css-1u83yg1"">git</code> on the command line. If it displays the usage information, then you\'re good to go!</p>\n<p class=""chakra-text css-o3oz8b"">If you run into any issues, please remember to take advantage of <a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://knowledge.udacity.com"">Knowledge<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a> and the community in your Student Hub.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><h2 class=""chakra-heading css-fz7yxd"">Configuring Mac\'s Terminal</h2>\n<p class=""chakra-text css-o3oz8b"">We\'re about to configure the Terminal to display helpful information when in a directory that\'s under version control. <em class=""chakra-text css-o3oz8b"">This is an optional step!</em> You do not need to re-configure your terminal for Git to work. You can complete the entire course without reconfiguring it. However, reconfiguring the Terminal makes it significantly easier to use.</p>\n<p class=""chakra-text css-o3oz8b"">If you choose to configure your Terminal, here\'s what it should look like when you\'re finished.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><em class=""chakra-text css-o3oz8b"">The terminal application on MacOS. The terminal has been configured to display version control information.</em></p></div>', '<div class=""ureact-markdown css-tc5hjw""><blockquote class=""css-6jmydm"">\n<h2 class=""chakra-heading css-fz7yxd""> ⚠️ Hey, macOS Catalina Users!</h2>\n<p class=""chakra-text css-o3oz8b"">The following instructions configure the [bash](<a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://en.wikipedia.org/wiki/Bash_(Unix_shell)"">https://en.wikipedia.org/wiki/Bash_(Unix_shell)<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a> terminal, which is the default terminal on macOS Mojave (10.14) and earlier.</p>\n<p class=""chakra-text css-o3oz8b"">If you\'re on macOS Catalina (10.15), the default terminal has switched to <a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://en.wikipedia.org/wiki/Z_shell"">zsh<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a>. The <code class=""chakra-code css-1u83yg1"">bash</code> shell hasn\'t been removed–it\'s just not the default one. To follow along with the instructions below, you need to be using <code class=""chakra-code css-1u83yg1"">bash</code>. You can make <code class=""chakra-code css-1u83yg1"">bash</code> your default terminal by running this command in your terminal:</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""background-color: rgb(255, 255, 255);""><code class=""language-python"" style=""white-space: pre;""><span>chsh </span><span class=""token token operator"">-</span><span>s </span><span class=""token token operator"">/</span><span class=""token token builtin"">bin</span><span class=""token token operator"">/</span><span>bash</span></code></div></div></pre>\n<p class=""chakra-text css-o3oz8b"">Now just relaunch the terminal and you\'ll be using the <code class=""chakra-code css-1u83yg1"">bash</code> terminal.</p>\n</blockquote></div>', '<div class=""ureact-markdown css-tc5hjw""><h2 class=""chakra-heading css-fz7yxd"">Configuration Steps</h2>\n<p class=""chakra-text css-o3oz8b"">To configure the terminal, we\'ll perform the following steps:</p>\n<ol role=""list"" class=""css-13a5a39""><li class=""css-cvpopp"">download the zipped file from the Resources pane, or the bottom of this page</li></ol>\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp"">move the directory <code class=""chakra-code css-1u83yg1"">udacity-terminal-config</code> to your home directory and name it <code class=""chakra-code css-1u83yg1"">.udacity-terminal-config</code> (there\'s a dot at the front, now!)</li><li class=""css-cvpopp"">move the <code class=""chakra-code css-1u83yg1"">bash_profile</code> file to your home directory and name it <code class=""chakra-code css-1u83yg1"">.bash_profile</code> (there\'s a dot at the front, now!)\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp"">if you <em class=""chakra-text css-o3oz8b"">already</em> have a <code class=""chakra-code css-1u83yg1"">.bash_profile</code> file in your home directory, transfer the content from the downloaded <code class=""chakra-code css-1u83yg1"">bash_profile</code> to your existing <code class=""chakra-code css-1u83yg1"">.bash_profile</code></li></ul>\n</li></ul></div>', '<div class=""ureact-markdown css-tc5hjw""><h2 class=""chakra-heading css-fz7yxd"">First Time Git Configuration</h2>\n<p class=""chakra-text css-o3oz8b"">Before you can start using Git, you need to configure it. Run each of the following lines on the command line to make sure everything is set up.</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-bash"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span class=""token"" style=""color: rgb(113, 113, 101); font-style: italic;""># sets up Git with your name</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">git</span><span> config --global user.name </span><span class=""token"" style=""color: rgb(221, 17, 68);"">""&lt;Your-Full-Name&gt;""</span><span>\n</span>\n<span></span><span class=""token"" style=""color: rgb(113, 113, 101); font-style: italic;""># sets up Git with your email</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">git</span><span> config --global user.email </span><span class=""token"" style=""color: rgb(221, 17, 68);"">""&lt;your-email-address&gt;""</span><span>\n</span>\n<span></span><span class=""token"" style=""color: rgb(113, 113, 101); font-style: italic;""># makes sure that Git output is colored</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">git</span><span> config --global color.ui auto\n</span>\n<span></span><span class=""token"" style=""color: rgb(113, 113, 101); font-style: italic;""># displays the original state in a conflict</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">git</span><span> config --global merge.conflictstyle </span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">diff3</span><span>\n</span>\n<span></span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">git</span><span> config --list</span></code></div></div></pre>\n<h3 class=""chakra-heading css-k57syw"">Git &amp; Code Editor</h3>\n<p class=""chakra-text css-o3oz8b"">The last step of configuration is to get Git working with your code editor. Below are three of the most popular code editors. If you use a different editor, then do a quick search on Google for ""associate X text editor with Git"" (replace the X with the name of your code editor).</p>\n<h3 class=""chakra-heading css-k57syw"">Atom Editor Setup</h3>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-bash"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">git</span><span> config --global core.editor </span><span class=""token"" style=""color: rgb(221, 17, 68);"">""atom --wait""</span></code></div></div></pre>\n<h3 class=""chakra-heading css-k57syw"">Sublime Text Setup</h3>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-bash"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">git</span><span> config --global core.editor </span><span class=""token"" style=""color: rgb(221, 17, 68);"">""\'/Applications/Sublime Text 2.app/Contents/SharedSupport/bin/subl\' -n -w""</span></code></div></div></pre>\n<h3 class=""chakra-heading css-k57syw"">VSCode Setup</h3>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-bash"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">git</span><span> config --global core.editor </span><span class=""token"" style=""color: rgb(221, 17, 68);"">""code --wait""</span></code></div></div></pre>\n<p class=""chakra-text css-o3oz8b"">If you have any questions, post them on the forum.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">I\'ve installed Git</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">I\'ve configured Git with my username</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">I\'ve configured Git with my email</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">I\'ve configured Git to use my chosen editor</p></div>', '<div class=""ureact-markdown css-tc5hjw""><h4 class=""chakra-heading css-1dlhxqh"">Supporting Materials</h4>\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://video.udacity-data.com/topher/2017/March/58d31ce3_ud123-udacity-terminal-config/ud123-udacity-terminal-config.zip"">udacity-terminal-config.zip<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a></li></ul></div>']",['https://video.udacity-data.com/topher/2017/February/58a76894_ud123-l1-terminal-config-mac/ud123-l1-terminal-config-mac.png'],https://www.youtube.com/embed/h00n9QLfbqU
Version Control with Git,Version Control with Git,Lesson 1: What is Version Control?,1.5  Windows Setup,"['<div class=""ureact-markdown css-tc5hjw""><h2 class=""chakra-heading css-fz7yxd"">Installing Git</h2>\n<p class=""chakra-text css-o3oz8b"">To download Git:</p>\n<ol role=""list"" class=""css-13a5a39""><li class=""css-cvpopp"">go to <a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://git-scm.com/downloads"">https://git-scm.com/downloads<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a></li></ol>\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp"">download the software for Windows</li><li class=""css-cvpopp"">install Git choosing all of the default options</li></ul>\n<p class=""chakra-text css-o3oz8b"">Once everything is installed, you should be able to run <code class=""chakra-code css-1u83yg1"">git</code> on the command line. If it displays the usage information, then you\'re good to go!</p>\n<p class=""chakra-text css-o3oz8b"">If you run into any issues, please remember to take advantage of <a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://knowledge.udacity.com/"">Knowledge<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a> and the community in your Study Group.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><h2 class=""chakra-heading css-fz7yxd"">Configuring the Command Prompt on Windows</h2>\n<p class=""chakra-text css-o3oz8b"">We\'re about to configure the Command Prompt to display helpful information when in a directory that\'s under version control. <em class=""chakra-text css-o3oz8b"">This is an optional step!</em> You do not need to re-configure your Command Prompt for Git to work. You can complete the entire course without reconfiguring it. However, reconfiguring the Command Prompt makes it significantly easier to use.</p>\n<p class=""chakra-text css-o3oz8b"">If you choose to configure your Command Prompt, here\'s what it should look like when you\'re finished.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><em class=""chakra-text css-o3oz8b"">The Command Prompt application on Windows. The Command Prompt has been configured to display version control information.</em></p></div>', '<div class=""ureact-markdown css-tc5hjw""><h2 class=""chakra-heading css-fz7yxd"">First Time Git Configuration</h2>\n<p class=""chakra-text css-o3oz8b"">Before you can start using Git, you need to configure it. Run each of the following lines on the command line to make sure everything is set up.</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-bash"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span class=""token"" style=""color: rgb(113, 113, 101); font-style: italic;""># sets up Git with your name</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">git</span><span> config --global user.name </span><span class=""token"" style=""color: rgb(221, 17, 68);"">""&lt;Your-Full-Name&gt;""</span><span>\n</span>\n<span></span><span class=""token"" style=""color: rgb(113, 113, 101); font-style: italic;""># sets up Git with your email</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">git</span><span> config --global user.email </span><span class=""token"" style=""color: rgb(221, 17, 68);"">""&lt;your-email-address&gt;""</span><span>\n</span>\n<span></span><span class=""token"" style=""color: rgb(113, 113, 101); font-style: italic;""># makes sure that Git output is colored</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">git</span><span> config --global color.ui auto\n</span>\n<span></span><span class=""token"" style=""color: rgb(113, 113, 101); font-style: italic;""># displays the original state in a conflict</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">git</span><span> config --global merge.conflictstyle </span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">diff3</span><span>\n</span>\n<span></span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">git</span><span> config --list</span></code></div></div></pre>\n<h3 class=""chakra-heading css-k57syw"">Git &amp; Code Editor</h3>\n<p class=""chakra-text css-o3oz8b"">The last step of configuration is to get Git working with your code editor. Below are three of the most popular code editors. If you use a different editor, then do a quick search on Google for ""associate X text editor with Git"" (replace the X with the name of your code editor).</p>\n<h3 class=""chakra-heading css-k57syw"">Atom Editor Setup</h3>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-bash"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">git</span><span> config --global core.editor </span><span class=""token"" style=""color: rgb(221, 17, 68);"">""atom --wait""</span></code></div></div></pre>\n<h3 class=""chakra-heading css-k57syw"">Sublime Text Setup</h3>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-bash"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">git</span><span> config --global core.editor </span><span class=""token"" style=""color: rgb(221, 17, 68);"">""\'C:/Program Files/Sublime Text 2/sublime_text.exe\' -n -w""</span></code></div></div></pre>\n<h3 class=""chakra-heading css-k57syw"">VSCode Setup</h3>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-bash"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">git</span><span> config --global core.editor </span><span class=""token"" style=""color: rgb(221, 17, 68);"">""code --wait""</span></code></div></div></pre></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">I\'ve installed Git</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">I\'ve configured Git with my username</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">I\'ve configured Git with my email</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">I\'ve configured Git to use my chosen editor</p></div>', '<div class=""ureact-markdown css-tc5hjw""><h4 class=""chakra-heading css-1dlhxqh"">Supporting Materials</h4>\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://video.udacity-data.com/topher/2017/March/58d31ce3_ud123-udacity-terminal-config/ud123-udacity-terminal-config.zip"">udacity-terminal-config.zip<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a></li></ul></div>']",['https://video.udacity-data.com/topher/2017/February/58a768b5_ud123-l1-terminal-config-windows/ud123-l1-terminal-config-windows.png'],https://www.youtube.com/embed/CCYjHfBk9hw
Version Control with Git,Version Control with Git,Lesson 1: What is Version Control?,1.6  Onward,"['<div class=""ureact-markdown css-tc5hjw""><h4 class=""chakra-heading css-1dlhxqh"">Supporting Materials</h4>\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://video.udacity-data.com/topher/2017/March/58d31eb5_ud123-git-keyterms/ud123-git-keyterms.pdf"">Git Terms PDF<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a></li></ul></div>']",[],https://www.youtube.com/embed/iXbMaTwfIJI
Version Control with Git,Version Control with Git,Lesson 1: What is Version Control?,1.1  What is Version Control,"['<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">I just said ""version control"". Now since you\'re in this course, you might already know a bit about version control. But if you don\'t, a handy trick I\'ve learned is to try reading the words in reverse - so ""version control"" would become ""control version""! So a Version Control System is just software that helps you control (or manage) the different versions...of something (typically source code).</p>\n<h3 class=""chakra-heading css-k57syw"">Further Research</h3>\n<p class=""chakra-text css-o3oz8b""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://en.wikipedia.org/wiki/Version_control"">Version Control on Wikipedia<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a></p></div>', '<div class=""ureact-markdown css-tc5hjw""><h2 class=""chakra-heading css-fz7yxd"">VCS Info</h2>\n<p class=""chakra-text css-o3oz8b"">There are <a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://en.wikipedia.org/wiki/List_of_version_control_software"">a number of Version Control Systems out there<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a>. This alone should prove that version control is incredibly important. Three of the most popular version control systems are:</p>\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://git-scm.com/"">Git<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a></li><li class=""css-cvpopp""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://subversion.apache.org/"">Subversion<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a></li><li class=""css-cvpopp""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://www.mercurial-scm.org/"">Mercurial<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a></li></ul>\n<p class=""chakra-text css-o3oz8b"">There are two main types of version control system models:</p>\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp"">the <em class=""chakra-text css-o3oz8b"">centralized model</em> - all users connect to a central, master repository</li><li class=""css-cvpopp"">the <em class=""chakra-text css-o3oz8b"">distributed model</em> - each user has the entire repository on their computer</li></ul>\n<h3 class=""chakra-heading css-k57syw"">Further Research</h3>\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""http://blogs.atlassian.com/2012/02/version-control-centralized-dvcs/"">Centralized vs. DVCS from the Atlassian Blog<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a></li><li class=""css-cvpopp""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://en.wikipedia.org/wiki/Distributed_version_control"">Distributed version control on Wikipedia<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a></li></ul></div>', '<div class=""ureact-markdown css-tc5hjw""><h2 class=""chakra-heading css-fz7yxd"">Recap</h2>\n<p class=""chakra-text css-o3oz8b"">Remember that the main point of a version control system is to help you maintain a detailed history of the project as well as the ability to work on different versions of it. Having a detailed history of a project is important because it lets you see the progress of the project over time. If needed, you can also jump back to any point in the project to recover data or files.</p>\n<p class=""chakra-text css-o3oz8b"">In this course, we\'ll be using Git which is a distributed version control system. You might be surprised to discover that you\'re already using version control all the time!</p></div>']",[],https://www.youtube.com/embed/lbR82UD5F0c
Version Control with Git,Version Control with Git,Lesson 1: What is Version Control?,1.2  Version Control In Daily Use,"['<div class=""ureact-markdown css-tc5hjw""><h2 class=""chakra-heading css-fz7yxd"">Version Control Is Everywhere</h2>\n<p class=""chakra-text css-o3oz8b"">My job revolves around working with documents. I create new documents all the time, I fill them with information (hopefully informative information!) and then edit...edit...edit! Is your job like this? Perhaps it\'s not documents of text, but you\'re probably working with data in some form or another that changes over time.</p>\n<p class=""chakra-text css-o3oz8b"">Now you might not think that you\'re using version control when working with documents, and you\'d be right...sort of. You\'re not <em class=""chakra-text css-o3oz8b"">actively</em> maintaining different versions of a document as you write it. But that doesn\'t mean there aren\'t different versions of the document. The computer is keeping track of the different versions for you!</p>\n<p class=""chakra-text css-o3oz8b"">Don\'t believe me? Aside from pondering your propensity towards doubting, let\'s prove I\'m right:</p>\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp"">open up your favorite text editor/code editor</li><li class=""css-cvpopp"">type some content (how about ""version control is dull!"")</li><li class=""css-cvpopp"">change one of the words in you wrote (e.g. change ""dull"" to ""life-changing awesome"")</li><li class=""css-cvpopp"">now (here it comes…!) press <code class=""chakra-code css-1u83yg1"">cmd</code> + <code class=""chakra-code css-1u83yg1"">z</code> or <code class=""chakra-code css-1u83yg1"">ctrl</code> + <code class=""chakra-code css-1u83yg1"">z</code></li></ul>\n<p class=""chakra-text css-o3oz8b"">💥 Version control in action! (See?...told you I wasn\'t lying) I bet you use the ""undo"" command all the time. I know that I sure do!</p>\n<p class=""chakra-text css-o3oz8b"">Practically every application I\'ve ever used has an undo feature. You can think of this as a form of version control, but it\'s a rather limited form of version control. Let\'s look at a more powerful form by checking out a Google Docs document.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><em class=""chakra-text css-o3oz8b"">The Google Doc outline for this Git Course.</em></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">If you\'ve ever written in a Google doc, have you noticed the small gray text at the top that tells you about the status of the document? Ever noticed that as you type, it\'s actively saving the document? Then, when you finish typing, it tells you that the document has saved.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><em class=""chakra-text css-o3oz8b"">Status of a Google Docs document. The status says ""Saving…"" while the document is being edited, and changes to ""All changes saved in Drive"" after the content is saved.</em></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">The <em class=""chakra-text css-o3oz8b"">real</em> question is, did you know that is a link that you can click on? Wanna see for yourself? Try it out in one of your own Google Docs.</p>\n<p class=""chakra-text css-o3oz8b"">Clicking on the link takes you to a ""Revision history"" page. (Ooo! Did you notice the word ""revision""? The word ""version"" is a synonym for ""revision""!)</p></div>', '<div class=""ureact-markdown css-tc5hjw""><h2 class=""chakra-heading css-fz7yxd"">Revision History Isn\'t Powerful Enough</h2>\n<p class=""chakra-text css-o3oz8b"">Google Docs\' Revision history page is incredibly powerful! I\'ve used it on several occasions to salvage text that I\'d written at one point, erased, and then realized I actually <em class=""chakra-text css-o3oz8b"">did</em> want to keep.</p>\n<p class=""chakra-text css-o3oz8b"">But for all its ability, it\'s not as powerful as we\'d like. What\'s it missing? A few that I can think of are:</p>\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp"">the ability to label a change</li><li class=""css-cvpopp"">the ability to give a detailed explanation of why a change was made</li><li class=""css-cvpopp"">the ability to move between different versions of the same document</li><li class=""css-cvpopp"">the ability to undo change A, make edit B, then get back change A without affecting edit B</li></ul>\n<p class=""chakra-text css-o3oz8b"">The version control tool, Git, can do all of those things - <em class=""chakra-text css-o3oz8b"">and more</em>!!! (bet you didn\'t see <em class=""chakra-text css-o3oz8b"">that</em> coming!) So have I sold you yet on the awesomeness that is Git? I hope so, cause we\'re about to dive into it in the next section.</p></div>']",['https://video.udacity-data.com/topher/2017/February/58a75370_ud123-l1-git-course-outline/ud123-l1-git-course-outline.png'],https://www.youtube.com/embed/GcvvbdKEchk
Version Control with Git,Version Control with Git,Lesson 1: What is Version Control?,1.3  Git and Version Control Terminology,"['<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">You can find the Terminology handout at the bottom of the page. The file is named <strong>Git Key Terms</strong> and is in the Course Materials section.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><h2 class=""chakra-heading css-fz7yxd"">Terminology</h2>\n<h2 class=""chakra-heading css-fz7yxd"">Version Control System / Source Code Manager</h2>\n<p class=""chakra-text css-o3oz8b"">A <strong>version control system</strong> (abbreviated as <strong>VCS</strong>) is a tool that manages different versions of source code. A <strong>source code manager</strong> (abbreviated as <strong>SCM</strong>) is another name for a version control system.</p>\n<p class=""chakra-text css-o3oz8b"">Git is an SCM (and therefore a VCS!). The URL for the Git website is <a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://git-scm.com/"">https://git-scm.com/<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a> (see how it has ""SCM"" directly in its domain!).</p>\n<h2 class=""chakra-heading css-fz7yxd"">Commit</h2>\n<p class=""chakra-text css-o3oz8b"">Git thinks of its data like a set of snapshots of a mini filesystem. Every time you <strong>commit</strong> (save the state of your project in Git), it basically takes a picture of what all your files look like at that moment and stores a reference to that snapshot. You can think of it as a save point in a game - it saves your project\'s files and any information about them.</p>\n<p class=""chakra-text css-o3oz8b"">Everything you do in Git is to help you make commits, so a commit is <em class=""chakra-text css-o3oz8b"">the</em> fundamental unit in Git.</p>\n<h2 class=""chakra-heading css-fz7yxd"">Repository / repo</h2>\n<p class=""chakra-text css-o3oz8b"">A <strong>repository</strong> is a directory which contains your project work, as well as a few files (hidden by default on Mac OS X) which are used to communicate with Git. Repositories can exist either locally on your computer or as a remote copy on another computer. A repository is made up of commits.</p>\n<h2 class=""chakra-heading css-fz7yxd"">Working Directory</h2>\n<p class=""chakra-text css-o3oz8b"">The <strong>Working Directory</strong> is the files that you see in your computer\'s file system. When you open your project files up on a code editor, you\'re working with files in the Working Directory.</p>\n<p class=""chakra-text css-o3oz8b"">This is in contrast to the files that have been saved (in commits!) in the repository.</p>\n<p class=""chakra-text css-o3oz8b"">When working with Git, the Working Directory is also different from the command line\'s concept of the  <em class=""chakra-text css-o3oz8b"">current working directory</em> which is the directory that your shell is ""looking at"" right now.</p>\n<h2 class=""chakra-heading css-fz7yxd"">Checkout</h2>\n<p class=""chakra-text css-o3oz8b"">A <strong>checkout</strong> is when content in the repository has been copied to the Working Directory.</p>\n<h2 class=""chakra-heading css-fz7yxd"">Staging Area / Staging Index / Index</h2>\n<p class=""chakra-text css-o3oz8b"">A file in the Git directory that stores information about what will go into your next commit. You can think of the <strong>staging area</strong> as a prep table where Git will take the next commit. Files on the Staging Index are poised to be added to the repository.</p>\n<h2 class=""chakra-heading css-fz7yxd"">SHA</h2>\n<p class=""chakra-text css-o3oz8b"">A <strong>SHA</strong> is basically an ID number for each commit. Here\'s what a commit\'s SHA might look like: <code class=""chakra-code css-1u83yg1"">e2adf8ae3e2e4ed40add75cc44cf9d0a869afeb6</code>.</p>\n<p class=""chakra-text css-o3oz8b"">It is a 40-character string composed of characters (0–9 and a–f) and calculated based on the contents of a file or directory structure in Git. ""SHA"" is shorthand for ""Secure Hash Algorithm"". If you\'re interested in learning about hashes, check out our <a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://www.udacity.com/course/intro-to-computer-science--cs101"">Intro to Computer Science course<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a>.</p>\n<h2 class=""chakra-heading css-fz7yxd"">Branch</h2>\n<p class=""chakra-text css-o3oz8b"">A <strong>branch</strong> is when a new line of development is created that diverges from the main line of development. This alternative line of development can continue without altering the main line.</p>\n<p class=""chakra-text css-o3oz8b"">Going back to the example of save point in a game, you can think of a branch as where you make a save point in your game and then decide to try out a risky move in the game. If the risky move doesn\'t pan out, then you can just go back to the save point. The key thing that makes branches incredibly powerful is that you can make save points on one branch, and then switch to a different branch and make save points there, too.</p>\n<p class=""chakra-text css-o3oz8b"">With this terminology in mind, let\'s take a high-level look at how we\'ll be using Git by looking at the typical workflow when working with version control.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">The HTML file has HTML and CSS changes on the Staging Index and an additional HTML change in the Working Directory. From what you\'ve learned so far with how committing works, what do you think will get committed if a commit were made right now?</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">only the HTML file changes on the Staging Index</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">only the CSS file changes on the Staging Index</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">the HTML and CSS file changes on the Staging Index</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">the HTML file changes in <em class=""chakra-text css-o3oz8b"">both</em> the Working Directory <em class=""chakra-text css-o3oz8b"">and</em> the Staging Index</p></div>', '<div class=""ureact-markdown css-tc5hjw""><h4 class=""chakra-heading css-1dlhxqh"">Supporting Materials</h4>\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://video.udacity-data.com/topher/2017/March/58d31eb5_ud123-git-keyterms/ud123-git-keyterms.pdf"">Git Terms PDF<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a></li></ul></div>']",[],https://www.youtube.com/embed/bf26adzeqMM
Version Control with Git,Version Control with Git,Lesson 1: What is Version Control?,1.4  Mac/Linux Setup,"['<div class=""ureact-markdown css-tc5hjw""><h2 class=""chakra-heading css-fz7yxd"">Installing Git</h2>\n<p class=""chakra-text css-o3oz8b"">Git is actually installed on MacOS, but we\'ll be reinstalling it so that we\'ll have the newest version:</p>\n<ol role=""list"" class=""css-13a5a39""><li class=""css-cvpopp"">go to <a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://git-scm.com/downloads"">https://git-scm.com/downloads<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a></li></ol>\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp"">download the software for Mac</li><li class=""css-cvpopp"">install Git choosing all of the default options</li></ul>\n<p class=""chakra-text css-o3oz8b"">Once everything is installed, you should be able to run <code class=""chakra-code css-1u83yg1"">git</code> on the command line. If it displays the usage information, then you\'re good to go!</p>\n<p class=""chakra-text css-o3oz8b"">If you run into any issues, please remember to take advantage of <a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://knowledge.udacity.com"">Knowledge<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a> and the community in your Student Hub.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><h2 class=""chakra-heading css-fz7yxd"">Configuring Mac\'s Terminal</h2>\n<p class=""chakra-text css-o3oz8b"">We\'re about to configure the Terminal to display helpful information when in a directory that\'s under version control. <em class=""chakra-text css-o3oz8b"">This is an optional step!</em> You do not need to re-configure your terminal for Git to work. You can complete the entire course without reconfiguring it. However, reconfiguring the Terminal makes it significantly easier to use.</p>\n<p class=""chakra-text css-o3oz8b"">If you choose to configure your Terminal, here\'s what it should look like when you\'re finished.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><em class=""chakra-text css-o3oz8b"">The terminal application on MacOS. The terminal has been configured to display version control information.</em></p></div>', '<div class=""ureact-markdown css-tc5hjw""><blockquote class=""css-6jmydm"">\n<h2 class=""chakra-heading css-fz7yxd""> ⚠️ Hey, macOS Catalina Users!</h2>\n<p class=""chakra-text css-o3oz8b"">The following instructions configure the [bash](<a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://en.wikipedia.org/wiki/Bash_(Unix_shell)"">https://en.wikipedia.org/wiki/Bash_(Unix_shell)<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a> terminal, which is the default terminal on macOS Mojave (10.14) and earlier.</p>\n<p class=""chakra-text css-o3oz8b"">If you\'re on macOS Catalina (10.15), the default terminal has switched to <a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://en.wikipedia.org/wiki/Z_shell"">zsh<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a>. The <code class=""chakra-code css-1u83yg1"">bash</code> shell hasn\'t been removed–it\'s just not the default one. To follow along with the instructions below, you need to be using <code class=""chakra-code css-1u83yg1"">bash</code>. You can make <code class=""chakra-code css-1u83yg1"">bash</code> your default terminal by running this command in your terminal:</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""background-color: rgb(255, 255, 255);""><code class=""language-python"" style=""white-space: pre;""><span>chsh </span><span class=""token token operator"">-</span><span>s </span><span class=""token token operator"">/</span><span class=""token token builtin"">bin</span><span class=""token token operator"">/</span><span>bash</span></code></div></div></pre>\n<p class=""chakra-text css-o3oz8b"">Now just relaunch the terminal and you\'ll be using the <code class=""chakra-code css-1u83yg1"">bash</code> terminal.</p>\n</blockquote></div>', '<div class=""ureact-markdown css-tc5hjw""><h2 class=""chakra-heading css-fz7yxd"">Configuration Steps</h2>\n<p class=""chakra-text css-o3oz8b"">To configure the terminal, we\'ll perform the following steps:</p>\n<ol role=""list"" class=""css-13a5a39""><li class=""css-cvpopp"">download the zipped file from the Resources pane, or the bottom of this page</li></ol>\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp"">move the directory <code class=""chakra-code css-1u83yg1"">udacity-terminal-config</code> to your home directory and name it <code class=""chakra-code css-1u83yg1"">.udacity-terminal-config</code> (there\'s a dot at the front, now!)</li><li class=""css-cvpopp"">move the <code class=""chakra-code css-1u83yg1"">bash_profile</code> file to your home directory and name it <code class=""chakra-code css-1u83yg1"">.bash_profile</code> (there\'s a dot at the front, now!)\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp"">if you <em class=""chakra-text css-o3oz8b"">already</em> have a <code class=""chakra-code css-1u83yg1"">.bash_profile</code> file in your home directory, transfer the content from the downloaded <code class=""chakra-code css-1u83yg1"">bash_profile</code> to your existing <code class=""chakra-code css-1u83yg1"">.bash_profile</code></li></ul>\n</li></ul></div>', '<div class=""ureact-markdown css-tc5hjw""><h2 class=""chakra-heading css-fz7yxd"">First Time Git Configuration</h2>\n<p class=""chakra-text css-o3oz8b"">Before you can start using Git, you need to configure it. Run each of the following lines on the command line to make sure everything is set up.</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-bash"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span class=""token"" style=""color: rgb(113, 113, 101); font-style: italic;""># sets up Git with your name</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">git</span><span> config --global user.name </span><span class=""token"" style=""color: rgb(221, 17, 68);"">""&lt;Your-Full-Name&gt;""</span><span>\n</span>\n<span></span><span class=""token"" style=""color: rgb(113, 113, 101); font-style: italic;""># sets up Git with your email</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">git</span><span> config --global user.email </span><span class=""token"" style=""color: rgb(221, 17, 68);"">""&lt;your-email-address&gt;""</span><span>\n</span>\n<span></span><span class=""token"" style=""color: rgb(113, 113, 101); font-style: italic;""># makes sure that Git output is colored</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">git</span><span> config --global color.ui auto\n</span>\n<span></span><span class=""token"" style=""color: rgb(113, 113, 101); font-style: italic;""># displays the original state in a conflict</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">git</span><span> config --global merge.conflictstyle </span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">diff3</span><span>\n</span>\n<span></span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">git</span><span> config --list</span></code></div></div></pre>\n<h3 class=""chakra-heading css-k57syw"">Git &amp; Code Editor</h3>\n<p class=""chakra-text css-o3oz8b"">The last step of configuration is to get Git working with your code editor. Below are three of the most popular code editors. If you use a different editor, then do a quick search on Google for ""associate X text editor with Git"" (replace the X with the name of your code editor).</p>\n<h3 class=""chakra-heading css-k57syw"">Atom Editor Setup</h3>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-bash"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">git</span><span> config --global core.editor </span><span class=""token"" style=""color: rgb(221, 17, 68);"">""atom --wait""</span></code></div></div></pre>\n<h3 class=""chakra-heading css-k57syw"">Sublime Text Setup</h3>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-bash"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">git</span><span> config --global core.editor </span><span class=""token"" style=""color: rgb(221, 17, 68);"">""\'/Applications/Sublime Text 2.app/Contents/SharedSupport/bin/subl\' -n -w""</span></code></div></div></pre>\n<h3 class=""chakra-heading css-k57syw"">VSCode Setup</h3>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-bash"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">git</span><span> config --global core.editor </span><span class=""token"" style=""color: rgb(221, 17, 68);"">""code --wait""</span></code></div></div></pre>\n<p class=""chakra-text css-o3oz8b"">If you have any questions, post them on the forum.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">I\'ve installed Git</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">I\'ve configured Git with my username</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">I\'ve configured Git with my email</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">I\'ve configured Git to use my chosen editor</p></div>', '<div class=""ureact-markdown css-tc5hjw""><h4 class=""chakra-heading css-1dlhxqh"">Supporting Materials</h4>\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://video.udacity-data.com/topher/2017/March/58d31ce3_ud123-udacity-terminal-config/ud123-udacity-terminal-config.zip"">udacity-terminal-config.zip<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a></li></ul></div>']",['https://video.udacity-data.com/topher/2017/February/58a76894_ud123-l1-terminal-config-mac/ud123-l1-terminal-config-mac.png'],https://www.youtube.com/embed/h00n9QLfbqU
Version Control with Git,Version Control with Git,Lesson 1: What is Version Control?,1.5  Windows Setup,"['<div class=""ureact-markdown css-tc5hjw""><h2 class=""chakra-heading css-fz7yxd"">Installing Git</h2>\n<p class=""chakra-text css-o3oz8b"">To download Git:</p>\n<ol role=""list"" class=""css-13a5a39""><li class=""css-cvpopp"">go to <a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://git-scm.com/downloads"">https://git-scm.com/downloads<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a></li></ol>\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp"">download the software for Windows</li><li class=""css-cvpopp"">install Git choosing all of the default options</li></ul>\n<p class=""chakra-text css-o3oz8b"">Once everything is installed, you should be able to run <code class=""chakra-code css-1u83yg1"">git</code> on the command line. If it displays the usage information, then you\'re good to go!</p>\n<p class=""chakra-text css-o3oz8b"">If you run into any issues, please remember to take advantage of <a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://knowledge.udacity.com/"">Knowledge<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a> and the community in your Study Group.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><h2 class=""chakra-heading css-fz7yxd"">Configuring the Command Prompt on Windows</h2>\n<p class=""chakra-text css-o3oz8b"">We\'re about to configure the Command Prompt to display helpful information when in a directory that\'s under version control. <em class=""chakra-text css-o3oz8b"">This is an optional step!</em> You do not need to re-configure your Command Prompt for Git to work. You can complete the entire course without reconfiguring it. However, reconfiguring the Command Prompt makes it significantly easier to use.</p>\n<p class=""chakra-text css-o3oz8b"">If you choose to configure your Command Prompt, here\'s what it should look like when you\'re finished.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><em class=""chakra-text css-o3oz8b"">The Command Prompt application on Windows. The Command Prompt has been configured to display version control information.</em></p></div>', '<div class=""ureact-markdown css-tc5hjw""><h2 class=""chakra-heading css-fz7yxd"">First Time Git Configuration</h2>\n<p class=""chakra-text css-o3oz8b"">Before you can start using Git, you need to configure it. Run each of the following lines on the command line to make sure everything is set up.</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-bash"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span class=""token"" style=""color: rgb(113, 113, 101); font-style: italic;""># sets up Git with your name</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">git</span><span> config --global user.name </span><span class=""token"" style=""color: rgb(221, 17, 68);"">""&lt;Your-Full-Name&gt;""</span><span>\n</span>\n<span></span><span class=""token"" style=""color: rgb(113, 113, 101); font-style: italic;""># sets up Git with your email</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">git</span><span> config --global user.email </span><span class=""token"" style=""color: rgb(221, 17, 68);"">""&lt;your-email-address&gt;""</span><span>\n</span>\n<span></span><span class=""token"" style=""color: rgb(113, 113, 101); font-style: italic;""># makes sure that Git output is colored</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">git</span><span> config --global color.ui auto\n</span>\n<span></span><span class=""token"" style=""color: rgb(113, 113, 101); font-style: italic;""># displays the original state in a conflict</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">git</span><span> config --global merge.conflictstyle </span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">diff3</span><span>\n</span>\n<span></span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">git</span><span> config --list</span></code></div></div></pre>\n<h3 class=""chakra-heading css-k57syw"">Git &amp; Code Editor</h3>\n<p class=""chakra-text css-o3oz8b"">The last step of configuration is to get Git working with your code editor. Below are three of the most popular code editors. If you use a different editor, then do a quick search on Google for ""associate X text editor with Git"" (replace the X with the name of your code editor).</p>\n<h3 class=""chakra-heading css-k57syw"">Atom Editor Setup</h3>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-bash"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">git</span><span> config --global core.editor </span><span class=""token"" style=""color: rgb(221, 17, 68);"">""atom --wait""</span></code></div></div></pre>\n<h3 class=""chakra-heading css-k57syw"">Sublime Text Setup</h3>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-bash"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">git</span><span> config --global core.editor </span><span class=""token"" style=""color: rgb(221, 17, 68);"">""\'C:/Program Files/Sublime Text 2/sublime_text.exe\' -n -w""</span></code></div></div></pre>\n<h3 class=""chakra-heading css-k57syw"">VSCode Setup</h3>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-bash"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">git</span><span> config --global core.editor </span><span class=""token"" style=""color: rgb(221, 17, 68);"">""code --wait""</span></code></div></div></pre></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">I\'ve installed Git</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">I\'ve configured Git with my username</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">I\'ve configured Git with my email</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">I\'ve configured Git to use my chosen editor</p></div>', '<div class=""ureact-markdown css-tc5hjw""><h4 class=""chakra-heading css-1dlhxqh"">Supporting Materials</h4>\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://video.udacity-data.com/topher/2017/March/58d31ce3_ud123-udacity-terminal-config/ud123-udacity-terminal-config.zip"">udacity-terminal-config.zip<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a></li></ul></div>']",['https://video.udacity-data.com/topher/2017/February/58a768b5_ud123-l1-terminal-config-windows/ud123-l1-terminal-config-windows.png'],https://www.youtube.com/embed/CCYjHfBk9hw
Version Control with Git,Version Control with Git,Lesson 1: What is Version Control?,1.6  Onward,"['<div class=""ureact-markdown css-tc5hjw""><h4 class=""chakra-heading css-1dlhxqh"">Supporting Materials</h4>\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://video.udacity-data.com/topher/2017/March/58d31eb5_ud123-git-keyterms/ud123-git-keyterms.pdf"">Git Terms PDF<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a></li></ul></div>']",[],https://www.youtube.com/embed/iXbMaTwfIJI
Version Control with Git,Version Control with Git,Lesson 2: Create A Git Repo,2.1  Intro,[],[],https://www.youtube.com/embed/KT163BkqIeg
Version Control with Git,Version Control with Git,Lesson 2: Create A Git Repo,2.2  Create A Repo From Scratch,"['<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Before you can make commits or do anything else with a git repository, the repository needs to actually exist. To create a new repository with Git, we\'ll use the <code class=""chakra-code css-1u83yg1"">git init</code> command.</p>\n<p class=""chakra-text css-o3oz8b"">The <code class=""chakra-code css-1u83yg1"">init</code> subcommand is short for ""initialize"", which is helpful because it\'s the command that will do all of the initial setup of a repository. We\'ll look at what it does in just a second.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><blockquote class=""css-6jmydm"">\n<h2 class=""chakra-heading css-fz7yxd"">Required Commands</h2>\n<p class=""chakra-text css-o3oz8b"">Heads up! We\'ll be using the following terminal commands in this lesson:</p>\n</blockquote>\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp""><code class=""chakra-code css-1u83yg1"">ls</code> - used to list files and directories</li><li class=""css-cvpopp""><code class=""chakra-code css-1u83yg1"">mkdir</code> - used to create a new directory</li><li class=""css-cvpopp""><code class=""chakra-code css-1u83yg1"">cd</code> - used to change directories</li><li class=""css-cvpopp""><code class=""chakra-code css-1u83yg1"">rm</code> - used to remove files and directories</li></ul>\n<blockquote class=""css-6jmydm"">\n<p class=""chakra-text css-o3oz8b"">If you\'re not sure how to use them, check out our course <a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://www.udacity.com/course/shell-workshop--ud206"">Shell Workshop<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a>!</p>\n<p class=""chakra-text css-o3oz8b"">We\'ll also be using the idea of the current working directory, the directory that your shell is ""looking at"" right now. Using <code class=""chakra-code css-1u83yg1"">cd</code> changes your working directory, and using <code class=""chakra-code css-1u83yg1"">ls</code> (by itself) lists the files in the working directory. If you lose track of what your shell\'s working directory is, you can print its name with the <code class=""chakra-code css-1u83yg1"">pwd</code> command (which stands for ""print working directory"").</p>\n</blockquote></div>', '<div class=""ureact-markdown css-tc5hjw""><h2 class=""chakra-heading css-fz7yxd"">Create Course Directories</h2>\n<p class=""chakra-text css-o3oz8b"">We\'re about to create a new project for this course. Since we\'re all professionals, we want our projects organized. If you already have a location on your computer where you put all your projects, then keep doing what you\'re doing. I\'ll be storing all of my work in a directory called <code class=""chakra-code css-1u83yg1"">udacity-git-course</code>.</p>\n<p class=""chakra-text css-o3oz8b"">If you want to follow along with me:</p>\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp"">create a directory called <code class=""chakra-code css-1u83yg1"">udacity-git-course</code></li><li class=""css-cvpopp"">inside that, create another directory called <code class=""chakra-code css-1u83yg1"">new-git-project</code></li><li class=""css-cvpopp"">use the <code class=""chakra-code css-1u83yg1"">cd</code> command to move into the <code class=""chakra-code css-1u83yg1"">new-git-project</code> directory</li></ul>\n<p class=""chakra-text css-o3oz8b"">If you\'re a copy/paster like me, just run this command on the terminal - <code class=""chakra-code css-1u83yg1"">mkdir -p udacity-git-course/new-git-project &amp;&amp; cd $_</code> (Before running this command, make sure you <code class=""chakra-code css-1u83yg1"">cd</code> to where you want these files stored. For example, if you want the files stored on your Desktop, then make sure you <code class=""chakra-code css-1u83yg1"">cd</code> to the Desktop before running the command.)</p>\n<p class=""chakra-text css-o3oz8b"">If you\'re all set, then your terminal should be ""inside"" the <code class=""chakra-code css-1u83yg1"">new-git-project</code> directory and look like this:</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><em class=""chakra-text css-o3oz8b"">The Terminal application located in the new-git-project directory.</em></p></div>', '<div class=""ureact-markdown css-tc5hjw""><h2 class=""chakra-heading css-fz7yxd"">Git Init</h2>\n<p class=""chakra-text css-o3oz8b"">Fantastic work - we\'re all set up and ready to start using the <code class=""chakra-code css-1u83yg1"">git init</code> command!</p>\n<p class=""chakra-text css-o3oz8b"">This is one of the easiest commands to run. All you have to do is run <code class=""chakra-code css-1u83yg1"">git init</code> on the terminal. That\'s it! Go ahead, why not give it a try right now!</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><em class=""chakra-text css-o3oz8b"">The terminal application showing the <code class=""chakra-code css-1u83yg1"">git init</code> command being run. The command initializes an empty Git repository in the current directory.</em></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Did you run <code class=""chakra-code css-1u83yg1"">git init</code> yet? If not, do it now because you\'ll need it to answer this quiz!</p>\n<p class=""chakra-text css-o3oz8b"">After running <code class=""chakra-code css-1u83yg1"">git init</code>, the text ""Initialized empty Git repository in "" followed by a path. should have appeared. The question is, has anything changed with your command prompt? If so, what?</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Yes - I now see the word ""master"".</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">No, it looks exactly the same.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><h2 class=""chakra-heading css-fz7yxd"">Git Init\'s Effect</h2>\n<p class=""chakra-text css-o3oz8b"">Running the <code class=""chakra-code css-1u83yg1"">git init</code> command sets up all of the necessary files and directories that Git will use to keep track of everything. All of these files are stored in a directory called <code class=""chakra-code css-1u83yg1"">.git</code> (notice the <code class=""chakra-code css-1u83yg1"">.</code> at the beginning - that means it\'ll be a hidden directory on Mac/Linux). This <code class=""chakra-code css-1u83yg1"">.git</code> directory <em class=""chakra-text css-o3oz8b"">is the ""repo""</em>! This is where git records all of the commits and keeps track of everything!</p>\n<p class=""chakra-text css-o3oz8b"">Let\'s take a brief look at the contents of the <code class=""chakra-code css-1u83yg1"">.git</code> directory.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><blockquote class=""css-6jmydm"">\n<p class=""chakra-text css-o3oz8b"">WARNING: Don\'t directly edit any files inside the <code class=""chakra-code css-1u83yg1"">.git</code> directory. This is the heart of the repository. If you change file names and/or file content, git will probably lose track of the files that you\'re keeping in the repo, and you could lose a lot of work! It\'s okay to look at those files though, but don\'t edit or delete them.</p>\n</blockquote></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><em class=""chakra-text css-o3oz8b"">Mac\'s Finder window showing the contents of the hidden "".git"" directory.</em></p></div>', '<div class=""ureact-markdown css-tc5hjw""><h2 class=""chakra-heading css-fz7yxd"">.Git Directory Contents</h2>\n<p class=""chakra-text css-o3oz8b""><em class=""chakra-text css-o3oz8b"">We\'re about to take a look at the <code class=""chakra-code css-1u83yg1"">.git</code> directory...it\'s not vital for this course, though, so don\'t worry about memorizing anything, it\'s here if you want to dig a little deeper into how Git works under the hood.</em></p>\n<p class=""chakra-text css-o3oz8b"">Here\'s a brief synopsis on each of the items in the <code class=""chakra-code css-1u83yg1"">.git</code> directory:</p>\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp""><strong>config file</strong> - where all <em class=""chakra-text css-o3oz8b"">project specific</em> configuration settings are stored.<br>\nFrom the <a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://git-scm.com/book/en/v2/Customizing-Git-Git-Configuration"">Git Book<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a>:<br></li></ul>\n<blockquote class=""css-6jmydm"">\n<p class=""chakra-text css-o3oz8b"">Git looks for configuration values in the configuration file in the Git directory (.git/config) of whatever repository you’re currently using. These values are specific to that single repository.</p>\n</blockquote>\n<p class=""chakra-text css-o3oz8b"">For example, let\'s say you set that the global configuration for Git uses your personal email address. If you want your work email to be used for a specific project rather than your personal email, that change would be added to this file.</p>\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp"">\n<p class=""chakra-text css-o3oz8b""><strong>description file</strong> - this file is only used by the GitWeb program, so we can ignore it</p>\n</li><li class=""css-cvpopp"">\n<p class=""chakra-text css-o3oz8b""><strong>hooks directory</strong> - this is where we could place client-side or server-side scripts that we can use to hook into Git\'s different lifecycle events</p>\n</li><li class=""css-cvpopp"">\n<p class=""chakra-text css-o3oz8b""><strong>info directory</strong> - contains the global excludes file</p>\n</li><li class=""css-cvpopp"">\n<p class=""chakra-text css-o3oz8b""><strong>objects directory</strong> - this directory will store all of the commits we make</p>\n</li><li class=""css-cvpopp"">\n<p class=""chakra-text css-o3oz8b""><strong>refs directory</strong> - this directory holds pointers to commits (basically the ""branches"" and ""tags"")</p>\n</li></ul>\n<p class=""chakra-text css-o3oz8b"">Remember, other than the ""hooks"" directory, you shouldn\'t mess with pretty much any of the content in here. The ""hooks"" directory <em class=""chakra-text css-o3oz8b"">can</em> be used to hook into different parts or events of Git\'s workflow, but that\'s a more advanced topic that we won\'t be getting into in this course.</p>\n<h3 class=""chakra-heading css-k57syw"">Further Research</h3>\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://git-scm.com/book/en/v2/Git-Internals-Plumbing-and-Porcelain"">Git Internals - Plumbing and Porcelain<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a> (advanced - bookmark this and check it out later)</li><li class=""css-cvpopp""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://git-scm.com/book/en/v2/Customizing-Git-Git-Hooks"">Customizing Git - Git Hooks<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a></li></ul></div>', '<div class=""ureact-markdown css-tc5hjw""><h2 class=""chakra-heading css-fz7yxd"">Git Init Recap</h2>\n<p class=""chakra-text css-o3oz8b"">Use the <code class=""chakra-code css-1u83yg1"">git init</code> command to create a new, empty repository in the current directory.</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-bash"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span>$ </span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">git</span><span> init</span></code></div></div></pre>\n<p class=""chakra-text css-o3oz8b"">Running this command creates a hidden <code class=""chakra-code css-1u83yg1"">.git</code> directory. This <code class=""chakra-code css-1u83yg1"">.git</code> directory is the brain/storage center for the repository. It holds all of the configuration files and directories and is where all of the commits are stored.</p>\n<h3 class=""chakra-heading css-k57syw"">Helpful Links</h3>\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://git-scm.com/book/en/v2/Git-Basics-Getting-a-Git-Repository#Initializing-a-Repository-in-an-Existing-Directory"">Initializing a Repository in an Existing Directory<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a></li><li class=""css-cvpopp""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://git-scm.com/docs/git-init"">git init docs<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a></li><li class=""css-cvpopp""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://www.atlassian.com/git/tutorials/setting-up-a-repository"">git init Tutorial<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a></li></ul></div>']","['https://video.udacity-data.com/topher/2017/January/588bb336_ud123-l2-new-git-project/ud123-l2-new-git-project.png', 'https://video.udacity-data.com/topher/2017/January/588bb68e_ud123-l2-.git-directory/ud123-l2-.git-directory.png']",
Version Control with Git,Version Control with Git,Lesson 2: Create A Git Repo,2.3  Clone An Existing Repo,"['<div class=""ureact-markdown css-tc5hjw""><h2 class=""chakra-heading css-fz7yxd"">Why Clone?</h2>\n<p class=""chakra-text css-o3oz8b"">First, what is cloning?</p>\n<blockquote class=""css-6jmydm"">\n<p class=""chakra-text css-o3oz8b"">to make an identical copy</p>\n</blockquote>\n<p class=""chakra-text css-o3oz8b"">What\'s the value of creating an identical copy of something, and how does this relate to Git and version control?</p>\n<p class=""chakra-text css-o3oz8b"">Why would you want to create an identical copy? Well, when I work on a new web project, I do the same set of steps:</p>\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp"">create an <code class=""chakra-code css-1u83yg1"">index.html</code> file</li><li class=""css-cvpopp"">create a <code class=""chakra-code css-1u83yg1"">js</code> directory</li><li class=""css-cvpopp"">create a <code class=""chakra-code css-1u83yg1"">css</code> directory</li><li class=""css-cvpopp"">create an <code class=""chakra-code css-1u83yg1"">img</code> directory</li><li class=""css-cvpopp"">create <code class=""chakra-code css-1u83yg1"">app.css</code> in the css directory</li><li class=""css-cvpopp"">create <code class=""chakra-code css-1u83yg1"">app.js</code> in the js directory</li><li class=""css-cvpopp"">add starter HTML code in <code class=""chakra-code css-1u83yg1"">index.html</code></li><li class=""css-cvpopp"">add configuration files for linting (validating code syntax)\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""http://htmlhint.com/"">HTML linting<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a></li><li class=""css-cvpopp""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://stylelint.io/"">CSS linting<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a></li><li class=""css-cvpopp""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""http://eslint.org/"">JavaScript linting<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a></li></ul>\n</li><li class=""css-cvpopp""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""http://editorconfig.org/"">configure my code editor<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a></li></ul>\n<p class=""chakra-text css-o3oz8b"">...and I do this <em class=""chakra-text css-o3oz8b"">every time</em> I create a new project!...which is a lot of effort I\'m putting in for each new project. I didn\'t want to keep doing these same steps over and over, so I did all of the steps listed above one last time and created a starter project for myself. Now when I create a new project, I just make an identical copy of that starter project!</p>\n<p class=""chakra-text css-o3oz8b"">The way that cloning relates to Git is that the command we\'ll be running on the terminal is <code class=""chakra-code css-1u83yg1"">git clone</code>. You pass a path (usually a URL) of the Git repository you want to clone to the <code class=""chakra-code css-1u83yg1"">git clone</code> command.</p>\n<p class=""chakra-text css-o3oz8b"">Wanna try cloning an existing project? Let\'s see how Git\'s <code class=""chakra-code css-1u83yg1"">clone</code> command works!</p></div>', '<div class=""ureact-markdown css-tc5hjw""><blockquote class=""css-6jmydm"">\n<h2 class=""chakra-heading css-fz7yxd"">Verify Terminal Location</h2>\n<p class=""chakra-text css-o3oz8b"">TIP: Now before you clone anything, make sure you are located in the correct directory on the command line. Cloning a project creates a new directory and places the cloned Git repository in it. The problem is that you can\'t have nested Git repositories. So make sure the terminal\'s current working directory isn\'t located in a Git repository. If your current working directory is not in your shell\'s prompt, type <code class=""chakra-code css-1u83yg1"">pwd</code> to print the working directory.</p>\n</blockquote></div>', '<div class=""ureact-markdown css-tc5hjw""><h2 class=""chakra-heading css-fz7yxd"">Cloning The Blog Repository</h2>\n<p class=""chakra-text css-o3oz8b"">Ready? Let\'s get cloning!</p>\n<p class=""chakra-text css-o3oz8b"">The command is <code class=""chakra-code css-1u83yg1"">git clone</code> and then you pass the path to the Git repository that you want to clone. The project that we\'ll be using throughout this course is located at this URL: <a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://github.com/udacity/course-git-blog-project"">https://github.com/udacity/course-git-blog-project<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a> So using this URL, the full command to clone blog project is:</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-bash"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span>$ </span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">git</span><span> clone https://github.com/udacity/course-git-blog-project</span></code></div></div></pre></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><em class=""chakra-text css-o3oz8b"">The <code class=""chakra-code css-1u83yg1"">git clone</code> command is used to copy the blog project repository into a <code class=""chakra-code css-1u83yg1"">course-git-blog-project</code> folder in the current directory.</em></p></div>', '<div class=""ureact-markdown css-tc5hjw""><h2 class=""chakra-heading css-fz7yxd"">Git Clone Output Explanation</h2>\n<p class=""chakra-text css-o3oz8b"">Let\'s look briefly at the output that <code class=""chakra-code css-1u83yg1"">git clone</code> displays.</p>\n<p class=""chakra-text css-o3oz8b"">The first line says ""Cloning into \'course-git-blog-project\'..."". Git is creating a directory (with the same name of the project we\'re cloning) and putting the repository in it...that\'s pretty cool!</p>\n<p class=""chakra-text css-o3oz8b"">The rest of the output is basically validation - it\'s counting the remote repository\'s number of objects, then it compresses and receives them, then it unpacks them.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><h2 class=""chakra-heading css-fz7yxd"">Clone Project And Use Different Name</h2>\n<p class=""chakra-text css-o3oz8b"">You just cloned the blog project for this course. Awesome job!</p>\n<p class=""chakra-text css-o3oz8b"">The command you ran in the terminal was:</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-bash"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span>$ </span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">git</span><span> clone https://github.com/udacity/course-git-blog-project</span></code></div></div></pre>\n<p class=""chakra-text css-o3oz8b"">...which created a directory named <code class=""chakra-code css-1u83yg1"">course-git-blog-project</code>.</p>\n<p class=""chakra-text css-o3oz8b"">What if you want to use a different name instead of the default one? Yes, you could just run the command above and manually rename it in Finder/Windows Explorer or use <code class=""chakra-code css-1u83yg1"">mv</code> on the terminal. But that\'s too many steps for us! Instead, we\'d rather clone the project and have it use a different name all in one go! But how do we do that?</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Why don\'t you check out <a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://git-scm.com/book/en/v2/Git-Basics-Getting-a-Git-Repository#Cloning-an-Existing-Repository"">the documentation for <code class=""chakra-code css-1u83yg1"">git clone</code><span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a> and pick the correct way to do it from the options below. The command should clone the blog project repo and store it in a directory named <code class=""chakra-code css-1u83yg1"">blog-project</code>.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">git clone-new-dir <a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://github.com/udacity/course-git-blog-project"">https://github.com/udacity/course-git-blog-project<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a> blog-project</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">git clone <a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://github.com/udacity/course-git-blog-project"">https://github.com/udacity/course-git-blog-project<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a> --out blog-project</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">git clone <a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://github.com/udacity/course-git-blog-project"">https://github.com/udacity/course-git-blog-project<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a> --rename blog-project</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">git clone <a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://github.com/udacity/course-git-blog-project"">https://github.com/udacity/course-git-blog-project<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a> blog-project</p></div>', '<div class=""ureact-markdown css-tc5hjw""><blockquote class=""css-6jmydm"">\n<h2 class=""chakra-heading css-fz7yxd"">Not In A Git Repository?</h2>\n<p class=""chakra-text css-o3oz8b"">WARNING: Here\'s a <em class=""chakra-text css-o3oz8b"">very important</em> step that often gets missed when you first start working with Git. When the <code class=""chakra-code css-1u83yg1"">git clone</code> command is used to clone a repository, it creates a new directory for the repository...you already know this. <em class=""chakra-text css-o3oz8b"">But, it doesn\'t change your shell\'s working directory.</em> It created the new repo inside the current working directory, which means that the current working directory is still <em class=""chakra-text css-o3oz8b"">outside</em> of this new Git repo! Make sure you <code class=""chakra-code css-1u83yg1"">cd</code> into the new repository.</p>\n<p class=""chakra-text css-o3oz8b"">Remember to use the Terminal\'s command prompt as an aid - if you\'re in a directory that is a Git repository, the command prompt will include a name in parentheses.</p>\n</blockquote></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><em class=""chakra-text css-o3oz8b"">Mac\'s Terminal application. The terminal shows the starting directory.</em></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><em class=""chakra-text css-o3oz8b"">Mac\'s Terminal application. The terminal uses the <code class=""chakra-code css-1u83yg1"">cd</code> command to move from the base directory into the course-git-blog-project which is a Git repository.</em></p></div>', '<div class=""ureact-markdown css-tc5hjw""><h2 class=""chakra-heading css-fz7yxd"">Look At The Project</h2>\n<p class=""chakra-text css-o3oz8b"">So you\'ve cloned the project to your computer, and you\'ve <code class=""chakra-code css-1u83yg1"">cd</code>ed into it. Don\'t you think it\'s time you checked it out in a browser to see what it looks like?</p>\n<p class=""chakra-text css-o3oz8b"">Open up the <code class=""chakra-code css-1u83yg1"">index.html</code> file in your favorite browser.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><em class=""chakra-text css-o3oz8b"">The blog project loaded in Chrome.</em></p></div>', '<div class=""ureact-markdown css-tc5hjw""><h2 class=""chakra-heading css-fz7yxd"">Git Clone Recap</h2>\n<p class=""chakra-text css-o3oz8b"">The <code class=""chakra-code css-1u83yg1"">git clone</code> command is used to create an identical copy of an existing repository.</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-shell"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span>$ </span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">git</span><span> clone </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">&lt;</span><span>path-to-repository-to-clone</span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">&gt;</span></code></div></div></pre>\n<p class=""chakra-text css-o3oz8b"">This command:</p>\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp"">takes the path to an existing repository</li><li class=""css-cvpopp"">by default will create a directory with the same name as the repository that\'s being cloned</li><li class=""css-cvpopp"">can be given a second argument that will be used as the name of the directory</li><li class=""css-cvpopp"">will create the new repository inside of the current working directory</li></ul>\n<h2 class=""chakra-heading css-fz7yxd"">Helpful Links</h2>\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://git-scm.com/book/en/v2/Git-Basics-Getting-a-Git-Repository#Cloning-an-Existing-Repository"">Cloning an Existing Repository<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a></li><li class=""css-cvpopp""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://git-scm.com/docs/git-clone"">git clone docs<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a></li><li class=""css-cvpopp""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://www.atlassian.com/git/tutorials/setting-up-a-repository"">git clone Tutorial<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a></li></ul></div>', '<div class=""ureact-markdown css-tc5hjw""><h2 class=""chakra-heading css-fz7yxd"">Status Update</h2>\n<p class=""chakra-text css-o3oz8b"">At this point, we have two Git repositories:</p>\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp"">the empty one that we created with the <code class=""chakra-code css-1u83yg1"">git init</code> command</li><li class=""css-cvpopp"">the one we cloned with the <code class=""chakra-code css-1u83yg1"">git clone</code> command</li></ul>\n<p class=""chakra-text css-o3oz8b"">How can we find any information about these repositories? Git\'s controlling them, but how can we find out what Git knows about our repos? To figure out what\'s going on with a repository, we use the <code class=""chakra-code css-1u83yg1"">git status</code> command. Knowing the status of a Git repository is <em class=""chakra-text css-o3oz8b"">extremely</em> important, so head straight on over to the next concept: Determine A Repo\'s Status.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><h4 class=""chakra-heading css-1dlhxqh"">Supporting Materials</h4>\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://video.udacity-data.com/topher/2020/March/5e714611_course-git-blog-project-master/course-git-blog-project-master.zip"">Git Repository .zip file<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a></li></ul></div>']","['https://video.udacity-data.com/topher/2017/February/589a623e_ud123-l2-base-directory/ud123-l2-base-directory.png', 'https://video.udacity-data.com/topher/2017/February/589a625b_ud123-l2-base-directory-git-repo/ud123-l2-base-directory-git-repo.png', 'https://video.udacity-data.com/topher/2017/February/58a7513d_ud123-l2-course-git-blog-project-in-browser/ud123-l2-course-git-blog-project-in-browser.png']",
Version Control with Git,Version Control with Git,Lesson 2: Create A Git Repo,2.4  Determine A Repo's Status,"['<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Working with Git on the command line can be a little bit challenging because it\'s a little bit like a <a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://en.wikipedia.org/wiki/Black_box"">black box<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a>. I mean, how do you know when you should or shouldn\'t run certain Git commands? Is Git ready for me to run a command yet? What if I run a command but I think it didn\'t work...how can I find that out? The answer to all of these questions is the <code class=""chakra-code css-1u83yg1"">git status</code> command!</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-shell"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span>$ </span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">git</span><span> status</span></code></div></div></pre>\n<p class=""chakra-text css-o3oz8b"">The <code class=""chakra-code css-1u83yg1"">git status</code> is our key to the mind of Git. It will tell us what Git is thinking and the state of our repository as Git sees it. When you\'re first starting out, you should be using the <code class=""chakra-code css-1u83yg1"">git status</code> command <em class=""chakra-text css-o3oz8b""><em class=""chakra-text css-o3oz8b"">all of the time</em></em>! Seriously. You should get into the habit of running it after any other command. This will help you learn how Git works and it\'ll help you from making (possibly) incorrect assumptions about the state of your files/repository.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">To answer this quiz, make sure you\'ve <code class=""chakra-code css-1u83yg1"">cd</code>ed into the <code class=""chakra-code css-1u83yg1"">course-git-blog-project</code> project. If you\'ve been following along in this lesson and haven\'t added any files to this project, then what does running <code class=""chakra-code css-1u83yg1"">git status</code> display?</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Status: good</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">On branch master <br>Your branch is up-to-date with \'origin/master\'.<br>Initial commit <br>nothing to commit (create/copy files and use ""git add"" to track)</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">master branch  <br>Please commit some files</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">On branch master <br>Your branch is up-to-date with \'origin/master\'.<br>nothing to commit, working directory clean</p></div>', '<div class=""ureact-markdown css-tc5hjw""><h2 class=""chakra-heading css-fz7yxd"">Git Status Output</h2>\n<p class=""chakra-text css-o3oz8b"">The <code class=""chakra-code css-1u83yg1"">git status</code> command will display a lot of information depending on the state of your files, the working directory, and the repository. You don\'t need to worry too much about these, though...just run <code class=""chakra-code css-1u83yg1"">git status</code> and it will display the information you need to know.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><em class=""chakra-text css-o3oz8b"">An animated gif of the Terminal application. The <code class=""chakra-code css-1u83yg1"">git status</code> command is run in the <code class=""chakra-code css-1u83yg1"">course-git-blog-project</code> project.</em></p></div>', '<div class=""ureact-markdown css-tc5hjw""><h2 class=""chakra-heading css-fz7yxd"">Git Status Explanation</h2>\n<p class=""chakra-text css-o3oz8b"">As you can see in the GIF above, running <code class=""chakra-code css-1u83yg1"">git status</code> in the <code class=""chakra-code css-1u83yg1"">course-git-blog-project</code> project produces the following output:</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-shell"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span>On branch master\n</span><span>Your branch is up-to-date with </span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'origin/master\'</span><span class=""token"" style=""color: rgb(68, 85, 136); font-weight: bold;"">.</span><span>\n</span>nothing to commit, working directory clean</code></div></div></pre>\n<p class=""chakra-text css-o3oz8b"">The output tells us two things:</p>\n<ol role=""list"" class=""css-13a5a39""><li class=""css-cvpopp""><code class=""chakra-code css-1u83yg1"">On branch master</code> – this tells us that Git is on the <code class=""chakra-code css-1u83yg1"">master</code> branch. You\'ve got a description of a branch on your terms sheet so this is the ""master"" branch (which is the default branch). We\'ll be looking more at branches in lesson 5</li></ol>\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp""><code class=""chakra-code css-1u83yg1"">Your branch is up-to-date with \'origin/master\'.</code> – Because <code class=""chakra-code css-1u83yg1"">git clone</code> was used to copy this repository from another computer, this is telling us if our project is in sync with the one we copied from. We won\'t be dealing with the project on the other computer, so this line can be ignored.</li><li class=""css-cvpopp""><code class=""chakra-code css-1u83yg1"">nothing to commit, working directory clean</code> – this is saying that there are no pending changes.</li></ul>\n<p class=""chakra-text css-o3oz8b"">Think of this output as the ""resting state"" (that\'s not an official description - it\'s how I like to describe it!). This is the resting state because there are no new files, no changes have been made in files, nothing is in the staging area about to be committed...no change or action is pending, so that\'s why I like to call it the resting state.</p>\n<p class=""chakra-text css-o3oz8b"">So this is what it looks like when running <code class=""chakra-code css-1u83yg1"">git status</code> in a repository that already has commits. Let\'s switch to the <code class=""chakra-code css-1u83yg1"">new-git-project</code> project to see what the <code class=""chakra-code css-1u83yg1"">git status</code> output will produce.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><blockquote class=""css-6jmydm"">\n<h3 class=""chakra-heading css-k57syw"">💡 Changes in Git v2.14 💡</h3>\n</blockquote>\n<blockquote class=""css-6jmydm"">\n<p class=""chakra-text css-o3oz8b"">In Git version 2.14, running the <code class=""chakra-code css-1u83yg1"">git status</code> command in an empty directory changed the wording of ""Inital commit"" to the much clearer ""No commits yet"". So the output would be:</p>\n</blockquote>\n<blockquote class=""css-6jmydm"">\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-bash"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span>On branch master\n</span>\nNo commits yet\n\n<span>nothing to commit </span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span>create/copy files and use </span><span class=""token"" style=""color: rgb(221, 17, 68);"">""git add""</span><span> to track</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span></code></div></div></pre>\n</blockquote></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">To answer this quiz, make sure you\'ve <code class=""chakra-code css-1u83yg1"">cd</code>ed into the <code class=""chakra-code css-1u83yg1"">new-git-project</code> project.</p>\n<p class=""chakra-text css-o3oz8b"">If you\'ve been following along in this lesson and haven\'t added any files to this project, then what does running <code class=""chakra-code css-1u83yg1"">git status</code> display?</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Status: good</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">On branch master <br>Initial commit <br>nothing to commit (create/copy files and use ""git add"" to track)</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">master branch <br>Please commit some files</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">On branch master <br>nothing to commit, working directory clean</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><em class=""chakra-text css-o3oz8b"">An animated GIF of the Terminal application. The <code class=""chakra-code css-1u83yg1"">git status</code> command is run in the <code class=""chakra-code css-1u83yg1"">new-git-project</code> project.</em></p></div>', '<div class=""ureact-markdown css-tc5hjw""><h2 class=""chakra-heading css-fz7yxd"">Explanation Of Git Status In A New Repo</h2>\n<p class=""chakra-text css-o3oz8b"">This is the output of running <code class=""chakra-code css-1u83yg1"">git status</code> in the <code class=""chakra-code css-1u83yg1"">new-git-project</code> project:</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-bash"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span>$ </span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">git</span><span> status\n</span>On branch master\n\nInitial commit\n\n<span>nothing to commit </span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span>create/copy files and use </span><span class=""token"" style=""color: rgb(221, 17, 68);"">""git add""</span><span> to track</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span></code></div></div></pre>\n<p class=""chakra-text css-o3oz8b"">To be completely clear, I haven\'t made any commits in my project yet. If you have made a commit, then your output should look exactly like that of the course-git-blog-project project.</p>\n<p class=""chakra-text css-o3oz8b"">If you compare this to the <code class=""chakra-code css-1u83yg1"">git status</code> output from the course-git-blog-project project, then you\'ll see that they\'re pretty similar. The thing to note that\'s different is that this output includes the line <code class=""chakra-code css-1u83yg1"">Initial commit</code>. This is the tiniest bit confusing because there actually aren\'t any commits in this repository yet! We haven\'t discussed making a commit yet, but when we do, we will be able to make an initial commit.</p>\n<p class=""chakra-text css-o3oz8b"">Wanna have a sneak peak of the next lesson and at the same time prove that there aren\'t any commits in this repo yet? Great, I knew you did! Try running the command <code class=""chakra-code css-1u83yg1"">git log</code> and check out its response:</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-bash"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span>$ </span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">git</span><span> log\n</span><span>fatal: your current branch </span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'master\'</span><span> does not have any commits yet</span></code></div></div></pre>\n<p class=""chakra-text css-o3oz8b"">Well, that\'s kind of scary looking. ""Fatal""? Fortunately, it turns out that just means that the Git program is exiting because it can\'t find any work to do. Git tells us this as if it were an error, but it\'s really not a problem. We know we haven\'t put any commits into this repo yet.</p>\n<p class=""chakra-text css-o3oz8b"">It\'s pretty clear from the response that there aren\'t any commits!</p>\n<p class=""chakra-text css-o3oz8b"">We\'ve just taken a very brief look at the <code class=""chakra-code css-1u83yg1"">git status</code> command. Remember that the output of <code class=""chakra-code css-1u83yg1"">git status</code> will change depending on if files have been added/deleted/modified, what\'s on the staging index, and the state of the repository. We\'ll be using the <code class=""chakra-code css-1u83yg1"">git status</code> command throughout this entire course, so get comfortable running it!</p></div>', '<div class=""ureact-markdown css-tc5hjw""><h2 class=""chakra-heading css-fz7yxd"">Git Status Recap</h2>\n<p class=""chakra-text css-o3oz8b"">The <code class=""chakra-code css-1u83yg1"">git status</code> command will display the current status of the repository.</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-bash"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span>$ </span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">git</span><span> status</span></code></div></div></pre>\n<p class=""chakra-text css-o3oz8b"">I can\'t stress enough how important it is to use this command <em class=""chakra-text css-o3oz8b"">all the time</em> as you\'re first learning Git. This command will:</p>\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp"">tell us about new files that have been created in the Working Directory that Git hasn\'t started tracking, yet</li><li class=""css-cvpopp"">files that Git <em class=""chakra-text css-o3oz8b"">is</em> tracking that have been modified</li><li class=""css-cvpopp"">a whole bunch of other things that we\'ll be learning about throughout the rest of the course ;-)</li></ul>\n<h2 class=""chakra-heading css-fz7yxd"">Helpful Links</h2>\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://git-scm.com/book/en/v2/Git-Basics-Recording-Changes-to-the-Repository#Checking-the-Status-of-Your-Files"">Checking the Status of Your Files<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a></li><li class=""css-cvpopp""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://git-scm.com/docs/git-status"">git status docs<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a></li><li class=""css-cvpopp""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://www.atlassian.com/git/tutorials/inspecting-a-repository/git-status"">git status Tutorial<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a></li></ul></div>']",[],
Version Control with Git,Version Control with Git,Lesson 2: Create A Git Repo,2.5  Outro,[],[],https://www.youtube.com/embed/h7j4STDFCjs
Version Control with Git,Version Control with Git,Lesson 3: Review a Repo's History,3.1  Intro,[],[],https://www.youtube.com/embed/UBmg3syQS0E
Version Control with Git,Version Control with Git,Lesson 3: Review a Repo's History,3.2  Displaying A Repository's Commits,"['<div class=""ureact-markdown css-tc5hjw""><blockquote class=""css-6jmydm"">\n<p class=""chakra-text css-o3oz8b"">TIP: In lesson 2 you used <code class=""chakra-code css-1u83yg1"">git clone</code> to clone the blog project. This is the project we\'ll be using in this lesson. If you skipped cloning the project in the previous lesson, then run the following command to get the project:</p>\n</blockquote>\n<blockquote class=""css-6jmydm"">\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-bash"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span>$ </span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">git</span><span> clone https://github.com/udacity/course-git-blog-project</span></code></div></div></pre>\n</blockquote>\n<blockquote class=""css-6jmydm"">\n<p class=""chakra-text css-o3oz8b"">Don\'t forget to <code class=""chakra-code css-1u83yg1"">cd</code> into the project after you\'ve cloned it.</p>\n</blockquote>\n<blockquote class=""css-6jmydm"">\n<p class=""chakra-text css-o3oz8b"">If you have questions about this, review how to <a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://classroom.udacity.com/courses/ud123/lessons/437a88fc-15f5-48b8-a6a5-0cf3347e6183/concepts/59082be0-c1af-4839-8ae5-0a182dc5bfe8#"">Clone An Existing Repo<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a> or ask in <a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://knowledge.udacity.com/"">Knowledge<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a>.</p>\n</blockquote></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">After you’ve cloned the blog project repository, navigate to the project’s directory using the command line. Once you’re located inside the blog project, what is the very first thing you should do in a Git repository?</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">run the <code class=""chakra-code css-1u83yg1"">git status</code> command</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">open the project in a code editor</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">decide what new feature to work on</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><em class=""chakra-text css-o3oz8b"">The Terminal application showing the output of the <code class=""chakra-code css-1u83yg1"">git status</code> command.</em></p></div>', '<div class=""ureact-markdown css-tc5hjw""><h2 class=""chakra-heading css-fz7yxd"">Git Status &amp; Opening The Project</h2>\n<p class=""chakra-text css-o3oz8b"">You can see that <code class=""chakra-code css-1u83yg1"">git status</code> tells us that there\'s ""nothing to commit, working directory clean"". That means we\'re good to go ahead and check out the project!</p>\n<p class=""chakra-text css-o3oz8b"">So open the project in your favorite code editor. If you haven\'t yet, take a minute or two to look at the project – look over the CSS and the JavaScript files, but look particularly at the HTML file.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><em class=""chakra-text css-o3oz8b"">The course\'s Blog project open in a code editor. The <code class=""chakra-code css-1u83yg1"">index.html</code> file is being displayed.</em></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">In the <code class=""chakra-code css-1u83yg1"">index.html</code> file, take a look at the <code class=""chakra-code css-1u83yg1"">&lt;h1&gt;Expedition&lt;/h1&gt;</code> heading around line 15.</p>\n<p class=""chakra-text css-o3oz8b"">Based on what you can see here when was that heading added?</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">It was added on a Tuesday. Yeah, a Tuesday.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">3 weeks ago</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">¯\\<em class=""chakra-text css-o3oz8b"">(ツ)</em>/¯ I can\'t tell that by looking at the code.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Ok, so we\'re not quite sure <em class=""chakra-text css-o3oz8b"">when</em> the heading was added. How about an easier question - <em class=""chakra-text css-o3oz8b"">who</em> added this heading? Again, what can you tell from just looking at the code?</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Richard did!</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">No clue</p></div>', '<div class=""ureact-markdown css-tc5hjw""><h2 class=""chakra-heading css-fz7yxd"">The Git Log Command</h2>\n<p class=""chakra-text css-o3oz8b"">Finding the answers to these questions is exactly what <code class=""chakra-code css-1u83yg1"">git log</code> can do for us! Instead of explaining everything that it can do for us, let\'s experience it! Go ahead and run the <code class=""chakra-code css-1u83yg1"">git log</code> command in the terminal:</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-bash"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span>$ </span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">git</span><span> log</span></code></div></div></pre>\n<p class=""chakra-text css-o3oz8b"">The terminal should display the following screen.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><em class=""chakra-text css-o3oz8b"">The Terminal application showing the output of the <code class=""chakra-code css-1u83yg1"">git log</code> command.</em></p></div>', '<div class=""ureact-markdown css-tc5hjw""><h2 class=""chakra-heading css-fz7yxd"">Navigating The Log</h2>\n<p class=""chakra-text css-o3oz8b"">If you\'re not used to a pager on the command line, navigating in <a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://en.wikipedia.org/wiki/Less_(Unix)"">Less<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a> can be a bit odd. Here are some helpful keys:</p>\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp"">to scroll <strong>down</strong>, press\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp""><code class=""chakra-code css-1u83yg1"">j</code> or  <code class=""chakra-code css-1u83yg1"">↓</code> to move <em class=""chakra-text css-o3oz8b"">down</em> one line at a time</li><li class=""css-cvpopp""><code class=""chakra-code css-1u83yg1"">d</code> to move by half the page screen</li><li class=""css-cvpopp""><code class=""chakra-code css-1u83yg1"">f</code> to move by a whole page screen</li></ul>\n</li><li class=""css-cvpopp"">to scroll <strong>up</strong>, press\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp""><code class=""chakra-code css-1u83yg1"">k</code> or <code class=""chakra-code css-1u83yg1"">↑</code> to move <em class=""chakra-text css-o3oz8b"">up</em> one line at a time</li><li class=""css-cvpopp""><code class=""chakra-code css-1u83yg1"">u</code> to move by half the page screen</li><li class=""css-cvpopp""><code class=""chakra-code css-1u83yg1"">b</code> to move by a whole page screen</li></ul>\n</li><li class=""css-cvpopp"">press <code class=""chakra-code css-1u83yg1"">q</code> to <strong>quit</strong> out of the log (returns to the regular command prompt)</li></ul></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Git records <em class=""chakra-text css-o3oz8b"">a ton</em> of information when a commit is made. See if you can use <code class=""chakra-code css-1u83yg1"">git log</code> to answer the following questions!</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Use <code class=""chakra-code css-1u83yg1"">git log</code> to find the commit that has a SHA that starts with <code class=""chakra-code css-1u83yg1"">f9720a</code>. Who made the commit?</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">James Parkes</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Richard Kalehoff</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Colt Steele</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Julia Van Cleve</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Godzilla McFiddlebrunches</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Use <code class=""chakra-code css-1u83yg1"">git log</code> to find the commit with the SHA that starts with <code class=""chakra-code css-1u83yg1"">8aa6668</code>. What is the message for that commit?</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Use <code class=""chakra-code css-1u83yg1"">git log</code> to find the commit with the SHA that starts with <code class=""chakra-code css-1u83yg1"">f9720a9</code>. When was that commit made?</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Mon Dec 5 10:25:22 2016</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Mon Dec 5 10:11:51 2016</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Sat Dec 3 16:09:00 2016</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Fri Dec 2 16:58:27 2016</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Use <code class=""chakra-code css-1u83yg1"">git log</code> to find the commit that has the message <code class=""chakra-code css-1u83yg1"">Set article timestamp color</code>. Which commit belongs to that SHA? Provide the first 7 characters of the SHA.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><h2 class=""chakra-heading css-fz7yxd"">Git Log Recap</h2>\n<p class=""chakra-text css-o3oz8b"">Fantastic job! Do you feel your Git-power growing?</p>\n<p class=""chakra-text css-o3oz8b"">Let\'s do a quick recap of the <code class=""chakra-code css-1u83yg1"">git log</code> command. The <code class=""chakra-code css-1u83yg1"">git log</code> command is used to display all of the commits of a repository.</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-bash"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span>$ </span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">git</span><span> log</span></code></div></div></pre>\n<p class=""chakra-text css-o3oz8b"">By <em class=""chakra-text css-o3oz8b"">default</em>, this command displays:</p>\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp"">the SHA</li><li class=""css-cvpopp"">the author</li><li class=""css-cvpopp"">the date</li><li class=""css-cvpopp"">and the message</li></ul>\n<p class=""chakra-text css-o3oz8b"">...of every commit in the repository. I stress the ""By default"" part of what Git displays because the <code class=""chakra-code css-1u83yg1"">git log</code> command can display a lot more information than just this.</p>\n<p class=""chakra-text css-o3oz8b"">Git uses the command line pager, Less, to page through all of the information. The important keys for Less are:</p>\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp"">to scroll down by a line, use <code class=""chakra-code css-1u83yg1"">j</code> or <code class=""chakra-code css-1u83yg1"">↓</code></li><li class=""css-cvpopp"">to scroll up by a line, use <code class=""chakra-code css-1u83yg1"">k</code> or <code class=""chakra-code css-1u83yg1"">↑</code></li><li class=""css-cvpopp"">to scroll down by a page, use the spacebar or the Page Down button</li><li class=""css-cvpopp"">to scroll up by a page, use <code class=""chakra-code css-1u83yg1"">b</code> or the Page Up button</li><li class=""css-cvpopp"">to quit, use <code class=""chakra-code css-1u83yg1"">q</code></li></ul>\n<p class=""chakra-text css-o3oz8b"">We\'ll increase our <code class=""chakra-code css-1u83yg1"">git log</code>-wielding abilities in the next lesson when we look at displaying more info.</p>\n<p class=""chakra-text css-o3oz8b"">Why wait?!? Click the link to move to the next lesson!</p></div>']","['https://video.udacity-data.com/topher/2017/February/589e4d46_ud123-l3-git-status-output/ud123-l3-git-status-output.png', 'https://video.udacity-data.com/topher/2017/February/589e4d9d_ud123-l3-project-in-editor/ud123-l3-project-in-editor.png', 'https://video.udacity-data.com/topher/2017/February/589e4f6a_ud123-l3-git-log-output/ud123-l3-git-log-output.png']",https://www.youtube.com/embed/xJfurQcVYfo
Version Control with Git,Version Control with Git,Lesson 3: Review a Repo's History,3.3  Changing How Git Log Displays Information,"['<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">You made it all this way - congrats on getting this far! Seriously! Learning Git is a challenging undertaking. I applaud you on your perseverance.</p>\n<p class=""chakra-text css-o3oz8b"">Take a look at this output from running <code class=""chakra-code css-1u83yg1"">git log</code>:</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><em class=""chakra-text css-o3oz8b"">The Terminal application showing the output from running <code class=""chakra-code css-1u83yg1"">git log</code>.</em></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">We\'ve been looking closely at all the detailed information that <code class=""chakra-code css-1u83yg1"">git log</code> displays. But now, take a step back and look at all of the information as a whole.</p>\n<p class=""chakra-text css-o3oz8b"">Let\'s think about some of these questions:</p>\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp""><strong>the SHA</strong> - <code class=""chakra-code css-1u83yg1"">git log</code> will display the complete SHA for every single commit. Each SHA is unique, so we don\'t really need to see the <em class=""chakra-text css-o3oz8b"">entire</em> SHA. We could get by perfectly fine with knowing just the first 6-8 characters. Wouldn\'t it be great if we could save some space and show just the first 5 or so characters of the SHA?</li><li class=""css-cvpopp""><strong>the author</strong> - the <code class=""chakra-code css-1u83yg1"">git log</code> output displays the commit author for <em class=""chakra-text css-o3oz8b"">every single commit</em>! It could be different for other repositories that have multiple people collaborating together, but for this one, there\'s only one person making all of the commits, so the commit author will be identical for all of them. Do we need to see the author for each one? What if we wanted to hide that information?</li><li class=""css-cvpopp""><strong>the date</strong> - By default, <code class=""chakra-code css-1u83yg1"">git log</code> will display the date for each commit. But do we really care about the commit\'s date? Knowing the date might be important occasionally, but typically knowing the date isn\'t vitally important and can be ignored in a lot of cases. Is there a way we could hide that to save space?</li><li class=""css-cvpopp""><strong>the commit message</strong> - this is one of the most important parts of a commit message...we usually always want to see this</li></ul>\n<p class=""chakra-text css-o3oz8b"">What could we do here to not waste a lot of space and make the output smaller? We can use a <strong>flag</strong>.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><blockquote class=""css-6jmydm"">\n<p class=""chakra-text css-o3oz8b"">TIP: This isn\'t a course on the command line, but a flag is used to alter how a program functions. For example, the <code class=""chakra-code css-1u83yg1"">ls</code> command will list all of the files in the current directory. The <code class=""chakra-code css-1u83yg1"">ls</code> command has a <code class=""chakra-code css-1u83yg1"">-l</code> flag (i.e. <code class=""chakra-code css-1u83yg1"">ls -l</code>) that runs the same <code class=""chakra-code css-1u83yg1"">ls</code> command but alters how it works; it now displays the information in the <em class=""chakra-text css-o3oz8b"">long</em> format (the <code class=""chakra-code css-1u83yg1"">-l</code> for <em class=""chakra-text css-o3oz8b"">long</em>).</p>\n</blockquote>\n<blockquote class=""css-6jmydm"">\n<p class=""chakra-text css-o3oz8b"">Flags can be used to alter how a program functions and/or what is displayed. To learn more about command line programs and flags, check out our course <a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://www.udacity.com/course/linux-command-line-basics--ud595"">Linux Command Line Basics<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a>.</p>\n</blockquote></div>', '<div class=""ureact-markdown css-tc5hjw""><h2 class=""chakra-heading css-fz7yxd"">git log --oneline</h2>\n<p class=""chakra-text css-o3oz8b"">The <code class=""chakra-code css-1u83yg1"">git log</code> command has a flag that can be used to alter how it displays the repository\'s information. That flag is <code class=""chakra-code css-1u83yg1"">--oneline</code>:</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-bash"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span>$ </span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">git</span><span> log --oneline</span></code></div></div></pre>\n<p class=""chakra-text css-o3oz8b"">Check out how different the output is!</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><em class=""chakra-text css-o3oz8b"">Two Terminal applications side-by-side. The left one shows the result of the <code class=""chakra-code css-1u83yg1"">git log</code> command with all of the information while the right one shows the result of the <code class=""chakra-code css-1u83yg1"">git log --oneline</code> command with just the short SHA and the commit message.</em></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">You\'re deep in the weeds of the <code class=""chakra-code css-1u83yg1"">git log --oneline</code> command and want to get out of the <code class=""chakra-code css-1u83yg1"">git log --oneline</code> output and return to the regular command prompt. What do you press on the keyboard to return to the regular command prompt?</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">the <code class=""chakra-code css-1u83yg1"">esc</code> key</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">the <code class=""chakra-code css-1u83yg1"">q</code> key</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">the <code class=""chakra-code css-1u83yg1"">ctrl</code> + <code class=""chakra-code css-1u83yg1"">c</code> keys</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">the <code class=""chakra-code css-1u83yg1"">ctrl</code> + <code class=""chakra-code css-1u83yg1"">d</code> keys</p></div>', '<div class=""ureact-markdown css-tc5hjw""><h2 class=""chakra-heading css-fz7yxd"">git log --oneline Recap</h2>\n<p class=""chakra-text css-o3oz8b"">To recap, the <code class=""chakra-code css-1u83yg1"">--oneline</code> flag is used to alter how <code class=""chakra-code css-1u83yg1"">git log</code> displays information:</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-bash"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span>$ </span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">git</span><span> log --oneline</span></code></div></div></pre>\n<p class=""chakra-text css-o3oz8b"">This command:</p>\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp"">lists one commit per line</li><li class=""css-cvpopp"">shows the first 7 characters of the commit\'s SHA</li><li class=""css-cvpopp"">shows the commit\'s message</li></ul></div>']","['https://video.udacity-data.com/topher/2017/February/589e4f6a_ud123-l3-git-log-output/ud123-l3-git-log-output.png', 'https://video.udacity-data.com/topher/2017/February/589e545c_ud123-l3-git-log-vs-git-log-oneline/ud123-l3-git-log-vs-git-log-oneline.png']",https://www.youtube.com/embed/rn6v_QgYFnU
Version Control with Git,Version Control with Git,Lesson 3: Review a Repo's History,3.4  Viewing Modified Files,"['<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">We just looked at the <code class=""chakra-code css-1u83yg1"">--oneline</code> flag to show one commit per line. That\'s great for getting an overview of the repository. But what if we want to dig in a little to see what file or files were changed by a commit?</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">If you look in the repository at commit <code class=""chakra-code css-1u83yg1"">a3dc99a</code>, it has the message ""Center content on page"".</p>\n<p class=""chakra-text css-o3oz8b"">What file or files were changed in this commit?</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">An HTML file</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">A CSS file</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">A JavaScript file</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">An HTML and CSS file</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">An HTML and JS file</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">There\'s no way to know for sure</p></div>', '<div class=""ureact-markdown css-tc5hjw""><h2 class=""chakra-heading css-fz7yxd""><code class=""chakra-code css-1u83yg1"">git log --stat</code> Intro</h2>\n<p class=""chakra-text css-o3oz8b"">The <code class=""chakra-code css-1u83yg1"">git log</code> command has a flag that can be used to display the files that have been changed in the commit, as well as the number of lines that have been added or deleted. The flag is <code class=""chakra-code css-1u83yg1"">--stat</code> (""stat"" is short for ""statistics""):</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-bash"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span>$ </span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">git</span><span> log --stat</span></code></div></div></pre>\n<p class=""chakra-text css-o3oz8b"">Run this command and check out what it displays.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><em class=""chakra-text css-o3oz8b"">Two Terminal applications side-by-side. The left one shows the result of the <code class=""chakra-code css-1u83yg1"">git log</code> command with all of the information while the right one shows the result of the <code class=""chakra-code css-1u83yg1"">git log --stat</code> command which lists the files that were changed as well as the number of added/removed lines.</em></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Using what you\'ve learned so far about <code class=""chakra-code css-1u83yg1"">git log</code> and its flags, how many files were modified in the commit with the SHA <code class=""chakra-code css-1u83yg1"">6f04ddd</code>?</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">1 file</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">2 files</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">9 files</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">10 files</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">You did so well with the first one, so here\'s another! How many files were modified in the commit with the SHA <code class=""chakra-code css-1u83yg1"">8d3ea36</code>?</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">1 file</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">2 files</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">3 files</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">5 files</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Now it\'s time to look at the other info the <code class=""chakra-code css-1u83yg1"">--stat</code> flag displays. How many lines of code were <em class=""chakra-text css-o3oz8b"">deleted</em> in <code class=""chakra-code css-1u83yg1"">index.html</code> in the commit with the SHA <code class=""chakra-code css-1u83yg1"">8d3ea36</code>?</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">2 lines</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">4 lines</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">9 lines</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">13 lines</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">28 lines</p></div>', '<div class=""ureact-markdown css-tc5hjw""><h2 class=""chakra-heading css-fz7yxd""><code class=""chakra-code css-1u83yg1"">git log --stat</code> Recap</h2>\n<p class=""chakra-text css-o3oz8b"">To recap, the <code class=""chakra-code css-1u83yg1"">--stat</code> flag is used to alter how <code class=""chakra-code css-1u83yg1"">git log</code> displays information:</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-bash"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span>$ </span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">git</span><span> log --stat</span></code></div></div></pre>\n<p class=""chakra-text css-o3oz8b"">This command:</p>\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp"">displays the file(s) that have been modified</li><li class=""css-cvpopp"">displays the number of lines that have been added/removed</li><li class=""css-cvpopp"">displays a summary line with the total number of modified files and lines that have been added/removed</li></ul></div>']",['https://video.udacity-data.com/topher/2017/February/58a37bff_ud123-l3-git-log-vs-git-log-stat/ud123-l3-git-log-vs-git-log-stat.png'],https://www.youtube.com/embed/aOICKP_9xiY
Version Control with Git,Version Control with Git,Lesson 3: Review a Repo's History,3.5  Viewing File Changes,"['<div class=""ureact-markdown css-tc5hjw""><h2 class=""chakra-heading css-fz7yxd"">Viewing Changes</h2>\n<p class=""chakra-text css-o3oz8b"">We know that <code class=""chakra-code css-1u83yg1"">git log</code> will show us the commits in a repository, and if we add the <code class=""chakra-code css-1u83yg1"">--stat</code> flag, we can see what files were modified and how many lines of code were added or removed. Wouldn\'t it be awesome if we could see exactly <em class=""chakra-text css-o3oz8b"">what those changes were</em>?</p>\n<p class=""chakra-text css-o3oz8b"">If this isn\'t the best part of a version control system, I don\'t know what is! Being able to see the exact changes that were made to a file is incredibly important! Being able to say, ""oh, ok, so this commit adds 5 pixels of border-radius to the button!"".</p>\n<p class=""chakra-text css-o3oz8b"">For example, in the blog project, the commit <code class=""chakra-code css-1u83yg1"">a3dc99a</code> has the message ""center content on page"" and modifies the CSS file by adding 5 lines. What are those five lines that were added? How can we figure out what those 5 lines are?</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><em class=""chakra-text css-o3oz8b"">The Terminal application. The command <code class=""chakra-code css-1u83yg1"">git log --stat</code> is run. It displays commits and zooms in on the first commit\'s stats showing the CSS file with 5 lines added.</em></p></div>', '<div class=""ureact-markdown css-tc5hjw""><h2 class=""chakra-heading css-fz7yxd""><code class=""chakra-code css-1u83yg1"">git log -p</code></h2>\n<p class=""chakra-text css-o3oz8b"">The <code class=""chakra-code css-1u83yg1"">git log</code> command has a flag that can be used to display the actual changes made to a file. The flag is <code class=""chakra-code css-1u83yg1"">--patch</code> which can be shortened to just <code class=""chakra-code css-1u83yg1"">-p</code>:</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-bash"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span>$ </span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">git</span><span> log -p</span></code></div></div></pre>\n<p class=""chakra-text css-o3oz8b"">Run this command and check out what it displays.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><em class=""chakra-text css-o3oz8b"">The Terminal application showing the output of the <code class=""chakra-code css-1u83yg1"">git log -p</code> command. Note - the colors in your terminal might differ.</em></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><em class=""chakra-text css-o3oz8b"">The Terminal application showing the output of the <code class=""chakra-code css-1u83yg1"">git log -p</code> command. Check below for a detailed description of the output.</em></p></div>', '<div class=""ureact-markdown css-tc5hjw""><h2 class=""chakra-heading css-fz7yxd"">Annotated <code class=""chakra-code css-1u83yg1"">git log -p</code> Output</h2>\n<p class=""chakra-text css-o3oz8b"">Using the image above, let\'s do a quick recap of the <code class=""chakra-code css-1u83yg1"">git log -p</code> output:</p>\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp"">🔵  - the file that is being displayed</li><li class=""css-cvpopp"">🔶  - the hash of the first version of the file and the hash of the second version of the file\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp"">not usually important, so it\'s safe to ignore</li></ul>\n</li><li class=""css-cvpopp"">❤️  - the old version and current version of the file</li><li class=""css-cvpopp"">🔍  - the lines where the file is added and how many lines there are\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp""><code class=""chakra-code css-1u83yg1"">-15,83</code> indicates that the old version (represented by the <code class=""chakra-code css-1u83yg1"">-</code>) started at line 15 and that the file had 83 lines</li><li class=""css-cvpopp""><code class=""chakra-code css-1u83yg1"">+15,85</code> indicates that the current version (represented by the <code class=""chakra-code css-1u83yg1"">+</code>) starts at line 15 and that there are now 85 lines...these 85 lines are shown in the patch below</li></ul>\n</li><li class=""css-cvpopp"">✏️  - the actual changes made in the commit\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp"">lines that are red and start with a minus (<code class=""chakra-code css-1u83yg1"">-</code>) were in the original version of the file but have been removed by the commit</li><li class=""css-cvpopp"">lines that are green and start with a plus (<code class=""chakra-code css-1u83yg1"">+</code>) are new lines that have been added in the commit</li></ul>\n</li></ul>\n<h2 class=""chakra-heading css-fz7yxd"">Further Research</h2>\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://git-scm.com/docs/git-diff#_generating_patches_with_p"">Generating patches with -p<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a> from the Git docs</li></ul></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Using what you\'ve learned so far about <code class=""chakra-code css-1u83yg1"">git log</code>\'s <code class=""chakra-code css-1u83yg1"">-p</code> flag, look at the commit with the SHA <code class=""chakra-code css-1u83yg1"">50d835d</code>. What line number in <code class=""chakra-code css-1u83yg1"">app.css</code> should you start looking at to see what has been changed?</p>\n<p class=""chakra-text css-o3oz8b"">Tip - don\'t forget that while looking at the <code class=""chakra-code css-1u83yg1"">git log</code> output, the <code class=""chakra-code css-1u83yg1"">d</code> key will scroll <em class=""chakra-text css-o3oz8b"">down</em> by half a page while the <code class=""chakra-code css-1u83yg1"">u</code> key will scroll <em class=""chakra-text css-o3oz8b"">up</em> half a page.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">line 63</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">line 89</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">line 127</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">line 155</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Using <code class=""chakra-code css-1u83yg1"">git log</code> and any of its flags, what code was added in by commit <code class=""chakra-code css-1u83yg1"">4a60beb</code>?</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">color: #352d2d;</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">color: #250808;</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">color: #333333;</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">color: #2e3d49;</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><code class=""chakra-code css-1u83yg1"">git log --stat</code> and <code class=""chakra-code css-1u83yg1"">git log -p</code> are both really helpful commands. Wouldn\'t it be great if we could have both of their output at the same time? Hmmm…</p>\n<p class=""chakra-text css-o3oz8b"">What happens when <code class=""chakra-code css-1u83yg1"">git log -p --stat</code> is run?</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">it displays only the patch information</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">it displays only the stats</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">it displays both with the patch info above the stats info</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">it displays both with the stats info above the patch info</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">In the video above, we looked at a commit that indents a lot of code. The patch output shows all of those lines as having been removed and then added again at their new level of indentation. Showing all of the indent changes makes it hard to tell what was actually added, though.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">What does the <code class=""chakra-code css-1u83yg1"">-w</code> flag do to the patch information? For help, check <a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://git-scm.com/docs/git-diff"">this Git docs page<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a>.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">it displays non-whitespace characters in blinking text</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">it displays non-whitespace changes in bold</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">it ignores whitespace changes</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">it shows a separate patch area with just new/removed content</p></div>', '<div class=""ureact-markdown css-tc5hjw""><h2 class=""chakra-heading css-fz7yxd""><code class=""chakra-code css-1u83yg1"">git log -p</code> Recap</h2>\n<p class=""chakra-text css-o3oz8b"">To recap, the <code class=""chakra-code css-1u83yg1"">-p</code> flag (which is the same as the <code class=""chakra-code css-1u83yg1"">--patch</code> flag)  is used to alter how <code class=""chakra-code css-1u83yg1"">git log</code> displays information:</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-bash"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span>$ </span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">git</span><span> log -p</span></code></div></div></pre>\n<p class=""chakra-text css-o3oz8b"">This command adds the following to the default output:</p>\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp"">displays the files that have been modified</li><li class=""css-cvpopp"">displays the location of the lines that have been added/removed</li><li class=""css-cvpopp"">displays the actual changes that have been made</li></ul></div>']","['https://video.udacity-data.com/topher/2017/February/58a37ea6_ud123-l3-git-log-p/ud123-l3-git-log-p.png', 'https://video.udacity-data.com/topher/2017/February/58a37f65_ud123-l3-git-log-p-lines-removed-annotated/ud123-l3-git-log-p-lines-removed-annotated.png']",https://www.youtube.com/embed/A8Kwocr-K8c
Version Control with Git,Version Control with Git,Lesson 3: Review a Repo's History,3.6  Viewing A Specific Commit,"['<div class=""ureact-markdown css-tc5hjw""><h2 class=""chakra-heading css-fz7yxd"">Too Much Scrolling</h2>\n<p class=""chakra-text css-o3oz8b"">The last few quizzes in the previous section had you scrolling and scrolling through the patch output just to get to the right commit so you could see <em class=""chakra-text css-o3oz8b"">its</em> info. Wouldn\'t it be super handy if you could just display a specific commit\'s details without worrying about all of the others in the repo?</p>\n<p class=""chakra-text css-o3oz8b"">There are actually two ways to do this!</p>\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp"">providing the SHA of the commit you want to see to <code class=""chakra-code css-1u83yg1"">git log</code></li><li class=""css-cvpopp"">use a new command <code class=""chakra-code css-1u83yg1"">git show</code></li></ul>\n<p class=""chakra-text css-o3oz8b"">They\'re both pretty simple, but let\'s look at the <code class=""chakra-code css-1u83yg1"">git log</code> way and then we\'ll look at <code class=""chakra-code css-1u83yg1"">git show</code>.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">You already know how to ""log"" information with:</p>\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp""><code class=""chakra-code css-1u83yg1"">git log</code></li><li class=""css-cvpopp""><code class=""chakra-code css-1u83yg1"">git log --oneline</code></li><li class=""css-cvpopp""><code class=""chakra-code css-1u83yg1"">git log --stat</code></li><li class=""css-cvpopp""><code class=""chakra-code css-1u83yg1"">git log -p</code></li></ul>\n<p class=""chakra-text css-o3oz8b"">But did you know, you can supply the SHA of a commit as the final argument for all of these commands? For example:</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-bash"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span>$ </span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">git</span><span> log -p fdf5493</span></code></div></div></pre>\n<p class=""chakra-text css-o3oz8b"">By supplying a SHA, the <code class=""chakra-code css-1u83yg1"">git log -p</code> command will <em class=""chakra-text css-o3oz8b"">start at that commit</em>! No need to scroll through everything! Keep in mind that it will <em class=""chakra-text css-o3oz8b"">also</em> show all of the commits that were made <em class=""chakra-text css-o3oz8b"">prior</em> to the supplied SHA.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><h2 class=""chakra-heading css-fz7yxd"">New Command: <code class=""chakra-code css-1u83yg1"">git show</code></h2>\n<p class=""chakra-text css-o3oz8b"">The other command that shows a specific commit is <code class=""chakra-code css-1u83yg1"">git show</code>:</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-bash"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span>$ </span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">git</span><span> show</span></code></div></div></pre>\n<p class=""chakra-text css-o3oz8b"">Running it like the example above will only display the most recent commit. Typically, a SHA is provided as a final argument:</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-bash"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span>$ </span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">git</span><span> show fdf5493</span></code></div></div></pre>\n<h3 class=""chakra-heading css-k57syw"">What does <code class=""chakra-code css-1u83yg1"">git show</code> do?</h3>\n<p class=""chakra-text css-o3oz8b"">The <code class=""chakra-code css-1u83yg1"">git show</code> command will show <em class=""chakra-text css-o3oz8b"">only one commit</em>. So don\'t get alarmed when you can\'t find any other commits - it only shows one. The output of the <code class=""chakra-code css-1u83yg1"">git show</code> command is exactly the same as the <code class=""chakra-code css-1u83yg1"">git log -p</code> command. So by default, <code class=""chakra-code css-1u83yg1"">git show</code> displays:</p>\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp"">the commit</li><li class=""css-cvpopp"">the author</li><li class=""css-cvpopp"">the date</li><li class=""css-cvpopp"">the commit message</li><li class=""css-cvpopp"">the patch information</li></ul>\n<p class=""chakra-text css-o3oz8b"">However, <code class=""chakra-code css-1u83yg1"">git show</code> can be combined with most of the other flags we\'ve looked at:</p>\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp""><code class=""chakra-code css-1u83yg1"">--stat</code> - to show the how many files were changed and the number of lines that were added/removed</li><li class=""css-cvpopp""><code class=""chakra-code css-1u83yg1"">-p</code> or <code class=""chakra-code css-1u83yg1"">--patch</code> - this the default, but if <code class=""chakra-code css-1u83yg1"">--stat</code> is used, the patch won\'t display, so pass <code class=""chakra-code css-1u83yg1"">-p</code> to add it again</li><li class=""css-cvpopp""><code class=""chakra-code css-1u83yg1"">-w</code> - to ignore changes to whitespace</li></ul>\n<p class=""chakra-text css-o3oz8b"">You are now among the <code class=""chakra-code css-1u83yg1"">git log</code>ging elite! Try your hand at a few quizzes.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">How many rulesets are added to the CSS by commit <code class=""chakra-code css-1u83yg1"">8d3ea36</code>?</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">1</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">2</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">3</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">4</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">There\'s a commit with the message ""Convert social links from text to images"". How many files were changed by this commit?</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">2 files</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">4 files</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">5 files</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">9 files</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Look at commit <code class=""chakra-code css-1u83yg1"">fdf5493</code>. What\'s the first HTML heading element that\'s added by this commit?</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">an <code class=""chakra-code css-1u83yg1"">&lt;h1&gt;</code></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">an <code class=""chakra-code css-1u83yg1"">&lt;h2&gt;</code></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">an <code class=""chakra-code css-1u83yg1"">&lt;h3&gt;</code></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">an <code class=""chakra-code css-1u83yg1"">&lt;h4&gt;</code></p></div>']",[],
Version Control with Git,Version Control with Git,Lesson 3: Review a Repo's History,3.7  Outro,[],[],https://www.youtube.com/embed/9rUf2HbdAd8
Version Control with Git,Version Control with Git,Lesson 4: Add Commits To A Repo,4.1  Intro,[],[],https://www.youtube.com/embed/sLcOFQ4mGvo
Version Control with Git,Version Control with Git,Lesson 4: Add Commits To A Repo,4.2  Git Add,"['<div class=""ureact-markdown css-tc5hjw""><h2 class=""chakra-heading css-fz7yxd"">Move To Correct Project</h2>\n<p class=""chakra-text css-o3oz8b"">If you\'ve been following along, you should have two different directories with Git projects on your computer:</p>\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp"">new-git-project - an empty directory that you converted to a Git repository using <code class=""chakra-code css-1u83yg1"">git init</code></li><li class=""css-cvpopp"">course-git-blog-project - an existing blog project you retrieved using <code class=""chakra-code css-1u83yg1"">git clone</code></li></ul>\n<p class=""chakra-text css-o3oz8b"">To avoid any confusion with existing commits, we\'ll be making our commits to the new-git-project Git repository.</p>\n<p class=""chakra-text css-o3oz8b"">On the Terminal, make sure you <code class=""chakra-code css-1u83yg1"">cd</code> into the <code class=""chakra-code css-1u83yg1"">new-git-project</code> directory. If you don\'t have a <code class=""chakra-code css-1u83yg1"">new-git-project</code> directory, create it now. Once you\'re inside the directory, run the <code class=""chakra-code css-1u83yg1"">git init</code> command. If you\'ve already run <code class=""chakra-code css-1u83yg1"">git init</code> before it\'s ok – running <code class=""chakra-code css-1u83yg1"">git init</code> multiple times doesn\'t cause any problems since it just re-initializes the Git directory.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Time to make sure we both have the same setup:</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">I\'ve <code class=""chakra-code css-1u83yg1"">cd</code>ed into the <code class=""chakra-code css-1u83yg1"">new-git-project</code> directory on the Terminal</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">I\'ve run <code class=""chakra-code css-1u83yg1"">git init</code> to create a new Git repository</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Your Terminal should look like this:</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><em class=""chakra-text css-o3oz8b"">The Terminal application in the new-git-project directory.</em></p></div>', '<div class=""ureact-markdown css-tc5hjw""><h2 class=""chakra-heading css-fz7yxd"">Status Status Status</h2>\n<p class=""chakra-text css-o3oz8b"">I\'ve said it a number of times already, but the <code class=""chakra-code css-1u83yg1"">git status</code> command will be <em class=""chakra-text css-o3oz8b"">extremely helpful</em> in this lesson. You should have it as your goal to run the <code class=""chakra-code css-1u83yg1"">git status</code> command both <em class=""chakra-text css-o3oz8b"">before</em> and <em class=""chakra-text css-o3oz8b"">after</em> any other Git command.</p>\n<p class=""chakra-text css-o3oz8b"">Let\'s run it right now!</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><em class=""chakra-text css-o3oz8b"">The Terminal application showing the output of the <code class=""chakra-code css-1u83yg1"">git status</code> command.</em></p></div>', '<div class=""ureact-markdown css-tc5hjw""><h2 class=""chakra-heading css-fz7yxd"">Git Status Output Review</h2>\n<p class=""chakra-text css-o3oz8b"">This is the output:</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-bash"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span>On branch master\n</span>\nInitial commit\n\n<span>nothing to commit </span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span>create/copy files and use </span><span class=""token"" style=""color: rgb(221, 17, 68);"">""git add""</span><span> to track</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span></code></div></div></pre></div>', '<div class=""ureact-markdown css-tc5hjw""><blockquote class=""css-6jmydm"">\n<h3 class=""chakra-heading css-k57syw"">💡 Changes in Git v2.14  💡</h3>\n</blockquote>\n<blockquote class=""css-6jmydm"">\n<p class=""chakra-text css-o3oz8b"">Remember that in Git version 2.14, the <code class=""chakra-code css-1u83yg1"">git status</code> command changed the wording from ""Inital commit"" to the much clearer ""No commits yet"". So the output would be:</p>\n</blockquote>\n<blockquote class=""css-6jmydm"">\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-bash"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span>On branch master\n</span>\nNo commits yet\n\n<span>nothing to commit </span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span>create/copy files and use </span><span class=""token"" style=""color: rgb(221, 17, 68);"">""git add""</span><span> to track</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span></code></div></div></pre>\n</blockquote></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Notice that last line – <code class=""chakra-code css-1u83yg1"">nothing to commit (create/copy files and use ""git add"" to track)</code>. See how it\'s recommending the <code class=""chakra-code css-1u83yg1"">git add</code> command? that\'s super helpful! The <code class=""chakra-code css-1u83yg1"">git status</code> output will give you advice or hints as to what you should do next.</p>\n<p class=""chakra-text css-o3oz8b"">Let\'s do what the feedback says and create some files.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><h2 class=""chakra-heading css-fz7yxd"">Create An HTML File</h2>\n<p class=""chakra-text css-o3oz8b"">First, create a file named <code class=""chakra-code css-1u83yg1"">index.html</code>, and fill it with some starter code:</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-html"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">&lt;!</span><span class=""token doctype-tag"" style=""color: rgb(153, 153, 153); font-weight: bold;"">doctype</span><span class=""token"" style=""color: rgb(153, 153, 153); font-weight: bold;""> </span><span class=""token name"" style=""color: rgb(153, 153, 153); font-weight: bold;"">html</span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">&gt;</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(15, 43, 61);"">&lt;</span><span class=""token"" style=""color: navy;"">html</span><span class=""token"" style=""color: navy;""> </span><span class=""token"" style=""color: rgb(2, 124, 124);"">lang</span><span class=""token attr-equals"" style=""color: rgb(15, 43, 61);"">=</span><span class=""token"" style=""color: rgb(15, 43, 61);"">""</span><span class=""token"" style=""color: rgb(221, 17, 68);"">en</span><span class=""token"" style=""color: rgb(15, 43, 61);"">""</span><span class=""token"" style=""color: rgb(15, 43, 61);"">&gt;</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(15, 43, 61);"">&lt;</span><span class=""token"" style=""color: navy;"">head</span><span class=""token"" style=""color: rgb(15, 43, 61);"">&gt;</span><span>\n</span><span>    </span><span class=""token"" style=""color: rgb(15, 43, 61);"">&lt;</span><span class=""token"" style=""color: navy;"">meta</span><span class=""token"" style=""color: navy;""> </span><span class=""token"" style=""color: rgb(2, 124, 124);"">charset</span><span class=""token attr-equals"" style=""color: rgb(15, 43, 61);"">=</span><span class=""token"" style=""color: rgb(15, 43, 61);"">""</span><span class=""token"" style=""color: rgb(221, 17, 68);"">utf-8</span><span class=""token"" style=""color: rgb(15, 43, 61);"">""</span><span class=""token"" style=""color: rgb(15, 43, 61);"">&gt;</span><span>\n</span><span>    </span><span class=""token"" style=""color: rgb(15, 43, 61);"">&lt;</span><span class=""token"" style=""color: navy;"">title</span><span class=""token"" style=""color: rgb(15, 43, 61);"">&gt;</span><span>Blog Project</span><span class=""token"" style=""color: rgb(15, 43, 61);"">&lt;/</span><span class=""token"" style=""color: navy;"">title</span><span class=""token"" style=""color: rgb(15, 43, 61);"">&gt;</span><span>\n</span><span>    </span><span class=""token"" style=""color: rgb(15, 43, 61);"">&lt;</span><span class=""token"" style=""color: navy;"">meta</span><span class=""token"" style=""color: navy;""> </span><span class=""token"" style=""color: rgb(2, 124, 124);"">name</span><span class=""token attr-equals"" style=""color: rgb(15, 43, 61);"">=</span><span class=""token"" style=""color: rgb(15, 43, 61);"">""</span><span class=""token"" style=""color: rgb(221, 17, 68);"">viewport</span><span class=""token"" style=""color: rgb(15, 43, 61);"">""</span><span class=""token"" style=""color: navy;""> </span><span class=""token"" style=""color: rgb(2, 124, 124);"">content</span><span class=""token attr-equals"" style=""color: rgb(15, 43, 61);"">=</span><span class=""token"" style=""color: rgb(15, 43, 61);"">""</span><span class=""token"" style=""color: rgb(221, 17, 68);"">width=device-width, initial-scale=1</span><span class=""token"" style=""color: rgb(15, 43, 61);"">""</span><span class=""token"" style=""color: rgb(15, 43, 61);"">&gt;</span><span>\n</span><span>    </span><span class=""token"" style=""color: rgb(15, 43, 61);"">&lt;</span><span class=""token"" style=""color: navy;"">meta</span><span class=""token"" style=""color: navy;""> </span><span class=""token"" style=""color: rgb(2, 124, 124);"">name</span><span class=""token attr-equals"" style=""color: rgb(15, 43, 61);"">=</span><span class=""token"" style=""color: rgb(15, 43, 61);"">""</span><span class=""token"" style=""color: rgb(221, 17, 68);"">description</span><span class=""token"" style=""color: rgb(15, 43, 61);"">""</span><span class=""token"" style=""color: navy;""> </span><span class=""token"" style=""color: rgb(2, 124, 124);"">content</span><span class=""token attr-equals"" style=""color: rgb(15, 43, 61);"">=</span><span class=""token"" style=""color: rgb(15, 43, 61);"">""</span><span class=""token"" style=""color: rgb(15, 43, 61);"">""</span><span class=""token"" style=""color: rgb(15, 43, 61);"">&gt;</span><span>\n</span><span>    </span><span class=""token"" style=""color: rgb(15, 43, 61);"">&lt;</span><span class=""token"" style=""color: navy;"">link</span><span class=""token"" style=""color: navy;""> </span><span class=""token"" style=""color: rgb(2, 124, 124);"">rel</span><span class=""token attr-equals"" style=""color: rgb(15, 43, 61);"">=</span><span class=""token"" style=""color: rgb(15, 43, 61);"">""</span><span class=""token"" style=""color: rgb(221, 17, 68);"">stylesheet</span><span class=""token"" style=""color: rgb(15, 43, 61);"">""</span><span class=""token"" style=""color: navy;""> </span><span class=""token"" style=""color: rgb(2, 124, 124);"">href</span><span class=""token attr-equals"" style=""color: rgb(15, 43, 61);"">=</span><span class=""token"" style=""color: rgb(15, 43, 61);"">""</span><span class=""token"" style=""color: rgb(221, 17, 68);"">css/app.css</span><span class=""token"" style=""color: rgb(15, 43, 61);"">""</span><span class=""token"" style=""color: rgb(15, 43, 61);"">&gt;</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(15, 43, 61);"">&lt;/</span><span class=""token"" style=""color: navy;"">head</span><span class=""token"" style=""color: rgb(15, 43, 61);"">&gt;</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(15, 43, 61);"">&lt;</span><span class=""token"" style=""color: navy;"">body</span><span class=""token"" style=""color: rgb(15, 43, 61);"">&gt;</span><span>\n</span>\n<span>    </span><span class=""token"" style=""color: rgb(15, 43, 61);"">&lt;</span><span class=""token"" style=""color: navy;"">script</span><span class=""token"" style=""color: navy;""> </span><span class=""token"" style=""color: rgb(2, 124, 124);"">src</span><span class=""token attr-equals"" style=""color: rgb(15, 43, 61);"">=</span><span class=""token"" style=""color: rgb(15, 43, 61);"">""</span><span class=""token"" style=""color: rgb(221, 17, 68);"">js/app.js</span><span class=""token"" style=""color: rgb(15, 43, 61);"">""</span><span class=""token"" style=""color: rgb(15, 43, 61);"">&gt;</span><span class=""token"" style=""color: rgb(15, 43, 61);"">&lt;/</span><span class=""token"" style=""color: navy;"">script</span><span class=""token"" style=""color: rgb(15, 43, 61);"">&gt;</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(15, 43, 61);"">&lt;/</span><span class=""token"" style=""color: navy;"">body</span><span class=""token"" style=""color: rgb(15, 43, 61);"">&gt;</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(15, 43, 61);"">&lt;/</span><span class=""token"" style=""color: navy;"">html</span><span class=""token"" style=""color: rgb(15, 43, 61);"">&gt;</span></code></div></div></pre>\n<p class=""chakra-text css-o3oz8b"">Things to note, the code references a CSS file and a JavaScript file.</p>\n<p class=""chakra-text css-o3oz8b"">Now create the CSS and JavaScript files. You can leave both of these files empty. We\'ll add content to them in a bit.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Before we proceed, let\'s make sure we have the same setup. Check off each of the following as you complete them:</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">I have created <code class=""chakra-code css-1u83yg1"">index.html</code> and filled it with the starter code above (<em class=""chakra-text css-o3oz8b"">and saved the file</em>)</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">I have created a <code class=""chakra-code css-1u83yg1"">css</code> folder and created <code class=""chakra-code css-1u83yg1"">app.css</code> inside of it</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">I have created a <code class=""chakra-code css-1u83yg1"">js</code> folder and created <code class=""chakra-code css-1u83yg1"">app.js</code> inside of it</p></div>', '<div class=""ureact-markdown css-tc5hjw""><h2 class=""chakra-heading css-fz7yxd"">Quick Git Status Check</h2>\n<p class=""chakra-text css-o3oz8b"">We just made a number of changes to the repository by adding files and content. It\'s time to do a quick check-in with Git:</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-bash"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span>$ </span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">git</span><span> status</span></code></div></div></pre>\n<p class=""chakra-text css-o3oz8b"">Here\'s what my Terminal displays:</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><em class=""chakra-text css-o3oz8b"">The Terminal application displays the index.html file, and the css and js folders in the new ""Untracked files"" section.</em></p></div>', '<div class=""ureact-markdown css-tc5hjw""><h2 class=""chakra-heading css-fz7yxd"">Big Picture Review</h2>\n<p class=""chakra-text css-o3oz8b"">That\'s really cool, isn\'t it! We haven\'t done anything specific with Git just yet, but it\'s watching this directory (since it\'s a Git project), and it knows that we\'ve created a couple of new files. What\'s also pretty neat about the output of the <code class=""chakra-code css-1u83yg1"">git status</code> command is that it\'s telling us that the files are untracked by Git.</p>\n<p class=""chakra-text css-o3oz8b"">Let\'s do a quick review of what\'s going on and what we\'re about to do:</p>\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp"">we have some new files that we want Git to start tracking</li><li class=""css-cvpopp"">for Git to track a file, it needs to be committed to the repository</li><li class=""css-cvpopp"">for a file to be committed, it needs to be in the Staging Index</li><li class=""css-cvpopp"">the <code class=""chakra-code css-1u83yg1"">git add</code> command is used to move files from the Working Directory to the Staging Index</li><li class=""css-cvpopp"">there are currently three, untracked files in the Working Directory\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp""><code class=""chakra-code css-1u83yg1"">index.html</code></li><li class=""css-cvpopp""><code class=""chakra-code css-1u83yg1"">app.css</code> in the <code class=""chakra-code css-1u83yg1"">css</code> directory</li><li class=""css-cvpopp""><code class=""chakra-code css-1u83yg1"">app.js</code> in the <code class=""chakra-code css-1u83yg1"">js</code> directory</li></ul>\n</li></ul>\n<p class=""chakra-text css-o3oz8b"">So the first step to getting any files committed to the repository is to add them from the Working Directory to the Staging Index. We will be using the <code class=""chakra-code css-1u83yg1"">git add</code> command to move all three of these files to the Staging Index.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><em class=""chakra-text css-o3oz8b"">The untracked HTML, CSS, and JavaScript files add from the Working Directory to the Staging Index.</em></p></div>', '<div class=""ureact-markdown css-tc5hjw""><h2 class=""chakra-heading css-fz7yxd"">Staging Files</h2>\n<p class=""chakra-text css-o3oz8b"">Alrighty, it\'s go time! Run the following command on the Terminal which uses <code class=""chakra-code css-1u83yg1"">git add</code> to add <code class=""chakra-code css-1u83yg1"">index.html</code> to the Staging Index:</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-bash"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span>$ </span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">git</span><span> </span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">add</span><span> index.html</span></code></div></div></pre>\n<p class=""chakra-text css-o3oz8b"">Note - we are <em class=""chakra-text css-o3oz8b"">only</em> adding the <code class=""chakra-code css-1u83yg1"">index.html</code> file. We\'ll add the CSS and JavaScript files in just a second.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><em class=""chakra-text css-o3oz8b"">The Terminal application. The command ""git add index.html"" is being typed out to add the file to the Staging Index.</em></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Running the <code class=""chakra-code css-1u83yg1"">git add</code> command produces no output (as long as there wasn\'t an error). So how do we have Git tell us what it did and has happened to the <code class=""chakra-code css-1u83yg1"">index.html</code> file that was added? That\'s what <code class=""chakra-code css-1u83yg1"">git status</code> does. You\'re probably sick of me stressing the importance of the <code class=""chakra-code css-1u83yg1"">git status</code> command, but it\'s an extremely helpful command, especially if you\'re new to version control and/or the command line.</p>\n<p class=""chakra-text css-o3oz8b"">Let\'s check out the status of the project:</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-bash"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span>$ </span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">git</span><span> status</span></code></div></div></pre>\n<p class=""chakra-text css-o3oz8b"">This is the output I get:</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><em class=""chakra-text css-o3oz8b"">The Terminal application showing the result of running the <code class=""chakra-code css-1u83yg1"">git status</code> command. It shows that index.html is now in the ""Changes to be committed"" category.</em></p></div>', '<div class=""ureact-markdown css-tc5hjw""><h2 class=""chakra-heading css-fz7yxd"">Changes To Be Committed</h2>\n<p class=""chakra-text css-o3oz8b"">There\'s now a new section in the output of <code class=""chakra-code css-1u83yg1"">git status</code> - the ""Changes to be committed"" area! This new ""Changes to be committed"" section displays files that are in the Staging Area! Right now it only displays the <code class=""chakra-code css-1u83yg1"">index.html</code> file, so this file is the only item on the Staging Index. To continue this train of thought, if we made a commit right now, <em class=""chakra-text css-o3oz8b"">only the index.html file would be committed</em>.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><blockquote class=""css-6jmydm"">\n<p class=""chakra-text css-o3oz8b"">TIP: Did you also notice the helpful text that\'s located just beneath ""Changes to be committed""? It says <code class=""chakra-code css-1u83yg1"">(use ""git rm --cached &lt;file&gt;..."" to unstage)</code> This is a hint of what you should do if you accidentally ran <code class=""chakra-code css-1u83yg1"">git add</code> and gave it the wrong file.</p>\n</blockquote>\n<blockquote class=""css-6jmydm"">\n<p class=""chakra-text css-o3oz8b"">As a side note, <code class=""chakra-code css-1u83yg1"">git rm --cached</code> is not like the shell\'s <code class=""chakra-code css-1u83yg1"">rm</code> command. <code class=""chakra-code css-1u83yg1"">git rm --cached</code> will not destroy any of your work; it just removes it from the Staging Index.</p>\n</blockquote>\n<blockquote class=""css-6jmydm"">\n<p class=""chakra-text css-o3oz8b"">Also, this used the word ""unstage"". The act of moving a file from the Working Directory to the Staging Index is called ""staging"". If a file has been moved, then it has been ""staged"". Moving a file from the Staging Index <em class=""chakra-text css-o3oz8b"">back</em> to the Working Directory will unstage the file. If you read documentation that says ""stage the following files"" that means you should use the <code class=""chakra-code css-1u83yg1"">git add</code> command.</p>\n</blockquote></div>', '<div class=""ureact-markdown css-tc5hjw""><h2 class=""chakra-heading css-fz7yxd"">Stage Remaining Files</h2>\n<p class=""chakra-text css-o3oz8b"">The <code class=""chakra-code css-1u83yg1"">index.html</code> file has been staged. Let\'s stage the other two files. Now we <em class=""chakra-text css-o3oz8b"">could</em> run the following:</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-bash"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span>$ </span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">git</span><span> </span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">add</span><span> css/app.css js/app.js</span></code></div></div></pre>\n<p class=""chakra-text css-o3oz8b"">...but that\'s a lot of extra typing. We could use a special command line character to help:</p>\n<h3 class=""chakra-heading css-k57syw"">The Period <code class=""chakra-code css-1u83yg1"">.</code></h3>\n<p class=""chakra-text css-o3oz8b"">The period refers to the current directory and can be used as a shortcut to refer to all files and directories (including all nested files and directories!).</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-bash"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span>$ </span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">git</span><span> </span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">add</span><span> css/app.css js/app.js\n</span><span></span><span class=""token"" style=""color: rgb(113, 113, 101); font-style: italic;""># would become</span><span>\n</span><span>$ </span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">git</span><span> </span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">add</span><span> </span><span class=""token"" style=""color: rgb(68, 85, 136); font-weight: bold;"">.</span></code></div></div></pre>\n<p class=""chakra-text css-o3oz8b"">The only thing to be careful of is that you might accidentally include more files than you meant to. Right now we <em class=""chakra-text css-o3oz8b"">want</em> both <code class=""chakra-code css-1u83yg1"">css/app.css</code> and <code class=""chakra-code css-1u83yg1"">js/app.js</code> to be staged, so running this command is fine right now. But let\'s say you added some images to an <code class=""chakra-code css-1u83yg1"">img</code> directory but didn\'t want to stage them just yet. Running <code class=""chakra-code css-1u83yg1"">git add .</code> <em class=""chakra-text css-o3oz8b"">will</em> stage them. If you do stage files that you didn\'t mean to, remember that <code class=""chakra-code css-1u83yg1"">git status</code> will tell you the command to use to ""unstage"" files.</p>\n<h2 class=""chakra-heading css-fz7yxd"">Stage The Remaining Files</h2>\n<p class=""chakra-text css-o3oz8b"">Let\'s use the shortcut to stage the remaining files:</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-bash"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span>$ </span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">git</span><span> </span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">add</span><span> </span><span class=""token"" style=""color: rgb(68, 85, 136); font-weight: bold;"">.</span></code></div></div></pre>\n<p class=""chakra-text css-o3oz8b"">And then a quick <code class=""chakra-code css-1u83yg1"">git status</code>:</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><em class=""chakra-text css-o3oz8b"">The Terminal application showing the index.html, css/app.css, and js/app.js have been staged.</em></p></div>', '<div class=""ureact-markdown css-tc5hjw""><h2 class=""chakra-heading css-fz7yxd"">Git Add Recap</h2>\n<p class=""chakra-text css-o3oz8b"">The <code class=""chakra-code css-1u83yg1"">git add</code> command is used to move files from the Working Directory to the Staging Index.</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-bash"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span>$ </span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">git</span><span> </span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">add</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">&lt;</span><span>file</span><span class=""token file-descriptor"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">1</span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">&gt;</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">&lt;</span><span>file</span><span class=""token file-descriptor"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">2</span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">&gt;</span><span> … </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">&lt;</span><span>fileN</span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">&gt;</span></code></div></div></pre>\n<p class=""chakra-text css-o3oz8b"">This command:</p>\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp"">takes a space-separated list of file names</li><li class=""css-cvpopp"">alternatively, the period <code class=""chakra-code css-1u83yg1"">.</code> can be used in place of a list of files to tell Git to add the current directory (and all nested files)</li></ul></div>']","['https://video.udacity-data.com/topher/2017/February/58a384ae_ud123-l4-new-git-project/ud123-l4-new-git-project.png', 'https://video.udacity-data.com/topher/2017/February/58a384dc_ud123-l4-git-status/ud123-l4-git-status.png', 'https://video.udacity-data.com/topher/2017/February/58a38587_ud123-l4-git-status-with-untracked/ud123-l4-git-status-with-untracked.png', 'https://video.udacity-data.com/topher/2017/February/58a38755_ud123-l4-git-status-after-git-add/ud123-l4-git-status-after-git-add.png', 'https://video.udacity-data.com/topher/2017/February/58a38858_ud123-l4-git-status-all-files/ud123-l4-git-status-all-files.png']",
Version Control with Git,Version Control with Git,Lesson 4: Add Commits To A Repo,4.3  Git Commit,"['<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">We\'re just about to make our first commit, so let\'s verify that our projects are set up the same way:</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">the <code class=""chakra-code css-1u83yg1"">index.html</code> file exists and has starter code in it</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">the <code class=""chakra-code css-1u83yg1"">app.css</code> file exists in the <code class=""chakra-code css-1u83yg1"">css</code> folder</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">the <code class=""chakra-code css-1u83yg1"">app.js</code> file exists in the <code class=""chakra-code css-1u83yg1"">js</code> folder</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">all three files have been staged</p></div>', '<div class=""ureact-markdown css-tc5hjw""><h2 class=""chakra-heading css-fz7yxd"">One Last Git Status Check</h2>\n<p class=""chakra-text css-o3oz8b"">If you haven\'t added any new files to the Working Directory or modified any of the existing files, nothing will have changed, but to make sure, let\'s run a quick <code class=""chakra-code css-1u83yg1"">git status</code> again right before we make the commit just to make <em class=""chakra-text css-o3oz8b"">absolutely sure</em> the project is how we left it.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><em class=""chakra-text css-o3oz8b"">The Terminal application shows that the index.html, css/app.css, and js/app.js have been staged and are ready to be committed.</em></p></div>', '<div class=""ureact-markdown css-tc5hjw""><h2 class=""chakra-heading css-fz7yxd"">Make A Commit</h2>\n<p class=""chakra-text css-o3oz8b"">Ok, let\'s do it!</p>\n<p class=""chakra-text css-o3oz8b"">To make a commit in Git you use the <code class=""chakra-code css-1u83yg1"">git commit</code> command, but don\'t run it just yet. Running this command will open the code editor that you configured way back in the first lesson. If you haven\'t run this command yet:</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-bash"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span>$ </span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">git</span><span> config --global core.editor </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">&lt;</span><span>your-editor\'s-config-went-here</span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">&gt;</span></code></div></div></pre>\n<p class=""chakra-text css-o3oz8b"">...go back to the Git configuration step and configure Git to use your chosen editor.</p>\n<p class=""chakra-text css-o3oz8b"">If you didn\'t do this step and you <em class=""chakra-text css-o3oz8b"">already</em> ran <code class=""chakra-code css-1u83yg1"">git commit</code>, then Git <em class=""chakra-text css-o3oz8b"">probably</em> defaulted to using the ""Vim"" editor. Vim is a popular editor for people who have been using Unix or Linux systems forever, but it\'s not the friendliest for new users. It\'s definitely not in the scope of this course. Check out <a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://stackoverflow.com/questions/11828270/how-to-exit-the-vim-editor"">this Stack Overflow post on how to get out of Vim<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a> and return to the regular command prompt.</p>\n<p class=""chakra-text css-o3oz8b"">If you <em class=""chakra-text css-o3oz8b"">did</em> configure your editor, then go ahead and make a commit using the <code class=""chakra-code css-1u83yg1"">git commit</code> command:</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-bash"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span>$ </span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">git</span><span> commit</span></code></div></div></pre>\n<p class=""chakra-text css-o3oz8b"">Remember, your editor should pop open and you should see something like this:</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><em class=""chakra-text css-o3oz8b"">Code editor displaying the default commit edit message content and is waiting for a commit message to be supplied.</em></p></div>', '<div class=""ureact-markdown css-tc5hjw""><h2 class=""chakra-heading css-fz7yxd"">Terminal Hangs</h2>\n<p class=""chakra-text css-o3oz8b"">If you switch back to the Terminal for a quick second, you\'ll see that the Terminal is chillin\' out just waiting for you to finish with the code editor that popped up. You don\'t need to worry about this, though. Once we add the necessary content to the code editor and finally <em class=""chakra-text css-o3oz8b"">close the code editor window</em>, the Terminal will unfreeze and return to normal.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><em class=""chakra-text css-o3oz8b"">The Terminal application showing <code class=""chakra-code css-1u83yg1"">git commit</code> but it appears to be hanging and waiting for something.</em></p></div>', '<div class=""ureact-markdown css-tc5hjw""><h2 class=""chakra-heading css-fz7yxd"">Code Editor Commit Message Explanation</h2>\n<p class=""chakra-text css-o3oz8b"">Ok, switch back to the code editor. Here\'s what\'s showing in my editor:</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-bash"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span class=""token"" style=""color: rgb(113, 113, 101); font-style: italic;""># Please enter the commit message for your changes. Lines starting</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(113, 113, 101); font-style: italic;""># with \'#\' will be ignored, and an empty message aborts the commit.</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(113, 113, 101); font-style: italic;""># On branch master</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(113, 113, 101); font-style: italic;"">#</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(113, 113, 101); font-style: italic;""># Initial commit</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(113, 113, 101); font-style: italic;"">#</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(113, 113, 101); font-style: italic;""># Changes to be committed:</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(113, 113, 101); font-style: italic;"">#\tnew file:   css/app.css</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(113, 113, 101); font-style: italic;"">#\tnew file:   index.html</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(113, 113, 101); font-style: italic;"">#\tnew file:   js/app.js</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(113, 113, 101); font-style: italic;"">#</span></code></div></div></pre>\n<p class=""chakra-text css-o3oz8b"">The first paragraph is telling us exactly what we need to do - we need to supply a message for this commit. Also, any line that begins with the <code class=""chakra-code css-1u83yg1"">#</code> character will be ignored. Farther down it says that this will be the initial commit. Lastly, it\'s giving us a list of the files that will be committed.</p>\n<p class=""chakra-text css-o3oz8b"">Since this is the very first commit of the repository, we\'ll use the commit message ""Initial commit"". The text ""Initial commit"" isn\'t special, but it\'s the de facto commit message for the <em class=""chakra-text css-o3oz8b"">very first</em> commit. If you want to use something else, feel free!</p>\n<p class=""chakra-text css-o3oz8b"">Type out your commit message on the first line of the code editor:</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><em class=""chakra-text css-o3oz8b"">Code editor with the commit message entered on the first line.</em></p></div>', '<div class=""ureact-markdown css-tc5hjw""><h2 class=""chakra-heading css-fz7yxd"">Finish Committing</h2>\n<p class=""chakra-text css-o3oz8b"">Now save the file and close the editor window (closing just the pane/tab isn\'t enough, you need to close the code editor window that the <code class=""chakra-code css-1u83yg1"">git commit</code> command opened).</p>\n<p class=""chakra-text css-o3oz8b"">Awesome, now switch back to the Terminal and you should see something like the following:</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><em class=""chakra-text css-o3oz8b"">The Terminal application after closing the code editor. It displays the SHA for the new commit as well as information about the commit like the files that were added and how many lines of code were added.</em></p></div>', '<div class=""ureact-markdown css-tc5hjw""><h2 class=""chakra-heading css-fz7yxd"">First Commit, Congrats!</h2>\n<p class=""chakra-text css-o3oz8b"">You just made your first commit - woohoo! 🙌🏼  How does it feel? Was it more towards the awe-inspiring side or the anticlimactic? Honestly, when I made my first commit, I was a bit like:</p>\n<blockquote class=""css-6jmydm"">\n<p class=""chakra-text css-o3oz8b"">""Wait...is that it? You just add the files you want to have committed to the Staging Area, and then you run \'git commit\'?""</p>\n</blockquote>\n<p class=""chakra-text css-o3oz8b"">...and the answer to my questions are ""Yes"" and ""Yes"". That\'s all there is to it. At first, version control seems like this overwhelming obstacle that one must overcome to become a true programmer/developer/designer/etc. But once you get a handle on the terminology (which <em class=""chakra-text css-o3oz8b"">I</em> think is the most challenging part), then actually using version control isn\'t all that challenging.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><blockquote class=""css-6jmydm"">\n<h2 class=""chakra-heading css-fz7yxd"">Bypass The Editor With The <code class=""chakra-code css-1u83yg1"">-m</code> Flag</h2>\n</blockquote>\n<blockquote class=""css-6jmydm"">\n<p class=""chakra-text css-o3oz8b"">TIP: If the commit message you\'re writing is short and you don\'t want to wait for your code editor to open up to type it out, you can pass your message directly on the command line with the <code class=""chakra-code css-1u83yg1"">-m</code> flag:</p>\n</blockquote>\n<blockquote class=""css-6jmydm"">\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-bash"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span>$ </span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">git</span><span> commit -m </span><span class=""token"" style=""color: rgb(221, 17, 68);"">""Initial commit""</span></code></div></div></pre>\n</blockquote>\n<blockquote class=""css-6jmydm"">\n<p class=""chakra-text css-o3oz8b"">In the example above, the text <code class=""chakra-code css-1u83yg1"">""Initial commit""</code> is used as the commit message. Be aware that you can\'t provide a description for the commit, only the message part.</p>\n</blockquote></div>', '<div class=""ureact-markdown css-tc5hjw""><h2 class=""chakra-heading css-fz7yxd"">2nd Commit - Add Changes</h2>\n<p class=""chakra-text css-o3oz8b"">We\'ve had a short breather, so let\'s make a second commit! Here, add this just inside the <code class=""chakra-code css-1u83yg1"">body</code> tag in <code class=""chakra-code css-1u83yg1"">index.html</code>:</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-html"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span class=""token"" style=""color: rgb(15, 43, 61);"">&lt;</span><span class=""token"" style=""color: navy;"">header</span><span class=""token"" style=""color: rgb(15, 43, 61);"">&gt;</span><span>\n</span><span>    </span><span class=""token"" style=""color: rgb(15, 43, 61);"">&lt;</span><span class=""token"" style=""color: navy;"">h1</span><span class=""token"" style=""color: rgb(15, 43, 61);"">&gt;</span><span>Expedition</span><span class=""token"" style=""color: rgb(15, 43, 61);"">&lt;/</span><span class=""token"" style=""color: navy;"">h1</span><span class=""token"" style=""color: rgb(15, 43, 61);"">&gt;</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(15, 43, 61);"">&lt;/</span><span class=""token"" style=""color: navy;"">header</span><span class=""token"" style=""color: rgb(15, 43, 61);"">&gt;</span></code></div></div></pre>\n<p class=""chakra-text css-o3oz8b"">Ok, now what do you do next? That\'s right, it\'s our good old friend <code class=""chakra-code css-1u83yg1"">git status</code>!</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><em class=""chakra-text css-o3oz8b"">The Terminal application showing the result of the <code class=""chakra-code css-1u83yg1"">git status</code> command. It displays a ""Changes not staged for commit"" section that includes the modified ""index.html"" file.</em></p></div>', '<div class=""ureact-markdown css-tc5hjw""><blockquote class=""css-6jmydm"">\n<p class=""chakra-text css-o3oz8b"">TIP: If you run <code class=""chakra-code css-1u83yg1"">git status</code> but don\'t see that <code class=""chakra-code css-1u83yg1"">index.html</code> has changed, make sure to save the file. I modify a file and then forget to save it - <em class=""chakra-text css-o3oz8b"">all</em> - <em class=""chakra-text css-o3oz8b"">the</em> - <em class=""chakra-text css-o3oz8b"">time</em>! I like to think that forgetting to save a file after editing it is the mark of a true professional.</p>\n</blockquote></div>', '<div class=""ureact-markdown css-tc5hjw""><h2 class=""chakra-heading css-fz7yxd"">Multipurpose Git Add</h2>\n<p class=""chakra-text css-o3oz8b"">So we\'ve modified our file. Git sees that it\'s been modified. So we\'re doing well so far. Now remember, to make a commit, the file or files we want committed need to be on the Staging Index. What command do we use to move files from the Working Directory to the Staging Index? You got it - <code class=""chakra-code css-1u83yg1"">git add</code>!</p>\n<p class=""chakra-text css-o3oz8b"">Even though we used <code class=""chakra-code css-1u83yg1"">git add</code> to add <em class=""chakra-text css-o3oz8b"">newly created files</em> to the Staging Index, we use the same command to move <em class=""chakra-text css-o3oz8b"">modified files</em> to the Staging Index.</p>\n<p class=""chakra-text css-o3oz8b"">Use the <code class=""chakra-code css-1u83yg1"">git add</code> command to move the file over to the Staging Index, now. Verify that it\'s there with <code class=""chakra-code css-1u83yg1"">git status</code>.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><h2 class=""chakra-heading css-fz7yxd"">Second Commit</h2>\n<p class=""chakra-text css-o3oz8b"">Now that we have a file with changes we can commit, let\'s make our second commit! Use the <code class=""chakra-code css-1u83yg1"">git commit</code> command to make a commit. Use the commit message <code class=""chakra-code css-1u83yg1"">Add header to blog</code>.</p>\n<p class=""chakra-text css-o3oz8b"">Now you might be asking yourself, ""Why did Richard pick that as the commit message to use?"" or ""What makes a good commit message?"". These are fantastic questions that we\'ll be looking at in the next concept!</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Let\'s say you have a personal blog and want to change the color of the article headings. You</p>\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp"">edit the HTML files to give each heading a class</li><li class=""css-cvpopp"">edit the CSS file to add the new class and give it a color</li><li class=""css-cvpopp"">you save all files</li><li class=""css-cvpopp"">you run <code class=""chakra-code css-1u83yg1"">git commit</code> on the terminal</li></ul>\n<p class=""chakra-text css-o3oz8b"">Will your code editor open up to let you type out the commit message?</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Yes</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">No</p></div>', '<div class=""ureact-markdown css-tc5hjw""><h2 class=""chakra-heading css-fz7yxd"">What To Include In A Commit</h2>\n<p class=""chakra-text css-o3oz8b"">I\'ve been telling you what files to create, giving you the content to include, and telling you when you should make commits. But when you\'re on your own, how do you know what you should include in a commit and when/how often you should make commits?</p>\n<p class=""chakra-text css-o3oz8b""><strong>The goal is that each commit has a single focus.</strong> Each commit should record a single-unit change. Now this can be a bit subjective (which is totally fine), but each commit should make a change to just one aspect of the project.</p>\n<p class=""chakra-text css-o3oz8b"">Now this isn\'t limiting the number of lines of code that are added/removed or the number of files that are added/removed/modified. Let\'s say you want to change your sidebar to add a new image. You\'ll probably:</p>\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp"">add a new image to the project files</li><li class=""css-cvpopp"">alter the HTML</li><li class=""css-cvpopp"">add/modify CSS to incorporate the new image</li></ul>\n<p class=""chakra-text css-o3oz8b"">A commit that records all of these changes would be totally fine!</p>\n<p class=""chakra-text css-o3oz8b"">Conversely, a commit shouldn\'t include unrelated changes - changes to the sidebar <em class=""chakra-text css-o3oz8b"">and</em> rewording content in the footer. These two aren\'t related to each other and shouldn\'t be included in the same commit. Work on one change first, commit that, and then change the second one. That way, if it turns out that one change had a bug and you have to undo it, you don\'t have to undo the other change too.</p>\n<p class=""chakra-text css-o3oz8b"">The best way that I\'ve found to think about what should be in a commit is to think, ""What if all changes introduced in this commit were erased?"". If a commit were erased, it should only remove one thing.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><blockquote class=""css-6jmydm"">\n<p class=""chakra-text css-o3oz8b"">Don\'t worry, commits don\'t get randomly erased.</p>\n</blockquote>\n<blockquote class=""css-6jmydm"">\n<p class=""chakra-text css-o3oz8b"">In a later lesson, we\'ll look at using Git to undo changes made in commits and how to manually, carefully remove the last commit that was made.</p>\n</blockquote></div>', '<div class=""ureact-markdown css-tc5hjw""><h2 class=""chakra-heading css-fz7yxd"">Git Commit Recap</h2>\n<p class=""chakra-text css-o3oz8b"">The <code class=""chakra-code css-1u83yg1"">git commit</code> command takes files from the Staging Index and saves them in the repository.</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-bash"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span>$ </span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">git</span><span> commit</span></code></div></div></pre>\n<p class=""chakra-text css-o3oz8b"">This command:</p>\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp"">will open the code editor that is specified in your configuration\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp"">(check out the Git configuration step from the first lesson to configure your editor)</li></ul>\n</li></ul>\n<p class=""chakra-text css-o3oz8b"">Inside the code editor:</p>\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp"">a commit message must be supplied</li><li class=""css-cvpopp"">lines that start with a <code class=""chakra-code css-1u83yg1"">#</code> are comments and will not be recorded</li><li class=""css-cvpopp"">save the file after adding a commit message</li><li class=""css-cvpopp"">close the editor to make the commit</li></ul>\n<p class=""chakra-text css-o3oz8b"">Then, use <code class=""chakra-code css-1u83yg1"">git log</code> to review the commit you just made!</p>\n<h3 class=""chakra-heading css-k57syw"">Further Research</h3>\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://help.github.com/articles/associating-text-editors-with-git/"">Associating text editors with Git<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a> from GitHub Help Docs</li><li class=""css-cvpopp""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://git-scm.com/book/en/v2/Getting-Started-First-Time-Git-Setup"">Getting Started - First-Time Git Setup<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a> from Git book</li></ul></div>']","['https://video.udacity-data.com/topher/2017/February/58a38858_ud123-l4-git-status-all-files/ud123-l4-git-status-all-files.png', 'https://video.udacity-data.com/topher/2017/February/58a38a0b_ud123-l4-git-commit-editor/ud123-l4-git-commit-editor.png', 'https://video.udacity-data.com/topher/2017/February/58a38a39_ud123-l4-git-commit-terminal-hangs/ud123-l4-git-commit-terminal-hangs.png', 'https://video.udacity-data.com/topher/2017/February/58a38aab_ud123-l4-git-commit-initial-commit/ud123-l4-git-commit-initial-commit.png', 'https://video.udacity-data.com/topher/2017/February/58a38ad8_ud123-l4-git-commit-finished/ud123-l4-git-commit-finished.png', 'https://video.udacity-data.com/topher/2017/February/58a38bf1_ud123-l4-git-status-modified-files/ud123-l4-git-status-modified-files.png']",
Version Control with Git,Version Control with Git,Lesson 4: Add Commits To A Repo,4.4  Commit Messages,"['<div class=""ureact-markdown css-tc5hjw""><h2 class=""chakra-heading css-fz7yxd"">Good Commit Messages</h2>\n<p class=""chakra-text css-o3oz8b"">Let\'s take a quick stroll down Stickler Lane and ask the question:</p>\n<blockquote class=""css-6jmydm"">\n<p class=""chakra-text css-o3oz8b"">How do I write a <em class=""chakra-text css-o3oz8b"">good</em> commit message? And why should I care?</p>\n</blockquote>\n<p class=""chakra-text css-o3oz8b"">These are <em class=""chakra-text css-o3oz8b"">fantastic</em> questions! I can\'t stress enough how important it is to spend some time writing a <em class=""chakra-text css-o3oz8b"">good</em> commit message.</p>\n<p class=""chakra-text css-o3oz8b"">Now, what makes a ""good"" commit message? That\'s a great question and has been <a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://chris.beams.io/posts/git-commit/"">written about<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a> <a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://medium.com/@preslavrachev/what-s-with-the-50-72-rule-8a906f61f09c#.jwprsco0n"">a number<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a> <a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""http://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html"">of times<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a>. Here are some important things to think about when crafting a good commit message:</p>\n<p class=""chakra-text css-o3oz8b""><strong>Do</strong></p>\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp"">do keep the message short (less than 60-ish characters)</li><li class=""css-cvpopp"">do explain <em class=""chakra-text css-o3oz8b"">what</em> the commit does (not <em class=""chakra-text css-o3oz8b"">how</em> or <em class=""chakra-text css-o3oz8b"">why</em>!)</li></ul>\n<p class=""chakra-text css-o3oz8b""><strong>Do not</strong></p>\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp"">do not explain <em class=""chakra-text css-o3oz8b"">why</em> the changes are made (more on this below)</li><li class=""css-cvpopp"">do not explain <em class=""chakra-text css-o3oz8b"">how</em> the changes are made (that\'s what <code class=""chakra-code css-1u83yg1"">git log -p</code> is for!)</li><li class=""css-cvpopp"">do not use the word ""and""\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp"">if you have to use ""and"", your commit message is probably doing too many changes - break the changes into separate commits</li><li class=""css-cvpopp"">e.g. ""make the background color pink <em class=""chakra-text css-o3oz8b"">and</em> increase the size of the sidebar""</li></ul>\n</li></ul>\n<p class=""chakra-text css-o3oz8b"">The best way that I\'ve found to come up with a commit message is to finish this phrase, ""This commit will..."". However, you finish that phrase, use <em class=""chakra-text css-o3oz8b"">that</em> as your commit message.</p>\n<p class=""chakra-text css-o3oz8b"">Above all, <em class=""chakra-text css-o3oz8b""><strong>be consistent</strong></em> in how you write your commit messages!</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Reviewing the guidelines on what makes a good commit message, is the following commit message good?</p>\n<p class=""chakra-text css-o3oz8b"">""Update the footer to copyright information""</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Yes</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">No</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Is the following a good commit message?</p>\n<p class=""chakra-text css-o3oz8b"">""Add a </p><p class=""chakra-text css-o3oz8b""> tag to the body""</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Yes</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">No</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Is the following a good commit message?</p>\n<p class=""chakra-text css-o3oz8b"">""Add changes to app.js""</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Yes</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">No</p></div>', '<div class=""ureact-markdown css-tc5hjw""><h2 class=""chakra-heading css-fz7yxd"">Explain the <em class=""chakra-text css-o3oz8b"">Why</em></h2>\n<p class=""chakra-text css-o3oz8b"">If you need to explain <em class=""chakra-text css-o3oz8b"">why</em> a commit needs to be made, you can!</p>\n<p class=""chakra-text css-o3oz8b"">When you\'re writing the commit message, the first line is the message itself. After the message, leave a blank line, and then type out the body or explanation including details about why the commit is needed (e.g. URL links).</p>\n<p class=""chakra-text css-o3oz8b"">Here\'s what a commit message edit screen might look like:</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><em class=""chakra-text css-o3oz8b"">Code editor showing the commit message edit window. A message has been typed, followed by a blank line, followed by the body of the commit.</em></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">This details section of a commit message <em class=""chakra-text css-o3oz8b"">is</em> included in the <code class=""chakra-code css-1u83yg1"">git log</code>. To see a commit message with a body, check out the Blog project repo and look at commit <code class=""chakra-code css-1u83yg1"">8a11b3f</code>.</p>\n<p class=""chakra-text css-o3oz8b"">Only the message (the first line) is included in <code class=""chakra-code css-1u83yg1"">git log --oneline</code>, though!</p></div>', '<div class=""ureact-markdown css-tc5hjw""><h2 class=""chakra-heading css-fz7yxd"">Udacity\'s Commit Style Requirements</h2>\n<p class=""chakra-text css-o3oz8b"">As I\'ve mentioned, there are a number of ways to write commit messages. If you\'re working on a team, they might already have a predetermined way of writing commit messages. Here at Udacity, we have our own standard for commit messages. You can check it out on our <a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://udacity.github.io/git-styleguide/"">Git Commit Message Style Guide<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a>.</p>\n<p class=""chakra-text css-o3oz8b"">If you haven\'t chosen a commit message style, feel free to use ours. But if you\'re working on an existing project, use their existing style; it\'s much more important to be consistent with your actual team than to be consistent with us!</p></div>', '<div class=""ureact-markdown css-tc5hjw""><h2 class=""chakra-heading css-fz7yxd"">Git Diff Up Next!</h2>\n<p class=""chakra-text css-o3oz8b"">In the next section, we\'ll look at a new tool (with a familiar output!). This tool will tell us what changes we\'ve made to files <em class=""chakra-text css-o3oz8b"">before</em> the files have been committed!</p></div>']",['https://video.udacity-data.com/topher/2017/February/58a38f2f_ud123-l4-git-commit-details-section/ud123-l4-git-commit-details-section.png'],
Version Control with Git,Version Control with Git,Lesson 4: Add Commits To A Repo,4.5  Git Diff,"['<div class=""ureact-markdown css-tc5hjw""><h2 class=""chakra-heading css-fz7yxd"">Why Do We Need This</h2>\n<p class=""chakra-text css-o3oz8b"">You might be like me where I start work on the next feature to my project at night, but then go to bed before I actually finish. Which means that, when I start working the next day, there are uncommitted changes. This is fine because I haven\'t finished the new feature, but I can\'t remember exactly what I\'ve done since my last commit. <code class=""chakra-code css-1u83yg1"">git status</code> will tell us what files have been changed, but not what those changes actually were.</p>\n<p class=""chakra-text css-o3oz8b"">The <code class=""chakra-code css-1u83yg1"">git diff</code> command is used to find out this information!</p></div>', '<div class=""ureact-markdown css-tc5hjw""><h2 class=""chakra-heading css-fz7yxd""><code class=""chakra-code css-1u83yg1"">git diff</code></h2>\n<p class=""chakra-text css-o3oz8b"">The <code class=""chakra-code css-1u83yg1"">git diff</code> command can be used to see changes that have been made but haven\'t been committed, yet.</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-bash"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span>$ </span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">git</span><span> </span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">diff</span></code></div></div></pre>\n<p class=""chakra-text css-o3oz8b"">To see <code class=""chakra-code css-1u83yg1"">git diff</code> in action, we need some uncommitted changes! In <code class=""chakra-code css-1u83yg1"">index.html</code>, let\'s reword the heading. Change the heading from ""Expedition"" to ""Adventure"". Save the file and run <code class=""chakra-code css-1u83yg1"">git diff</code> on the Terminal.</p>\n<p class=""chakra-text css-o3oz8b"">You should see the following:</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><em class=""chakra-text css-o3oz8b"">The Terminal application showing the output of the <code class=""chakra-code css-1u83yg1"">git diff</code> command.</em></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Wow, doesn\'t that look familiar! It\'s the same output that we say with <code class=""chakra-code css-1u83yg1"">git log -p</code>! Wanna know a secret? <code class=""chakra-code css-1u83yg1"">git log -p</code> uses <code class=""chakra-code css-1u83yg1"">git diff</code> under the hood. So you\'ve actually already learned how to read the output of <code class=""chakra-code css-1u83yg1"">git diff</code>!</p>\n<p class=""chakra-text css-o3oz8b"">If you don\'t remember what the different sections are, check out the Annotated ""git log -p"" Output from the previous lesson.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><blockquote class=""css-6jmydm"">\n<p class=""chakra-text css-o3oz8b"">💡 These Changes Were Not Committed 💡</p>\n</blockquote>\n<blockquote class=""css-6jmydm"">\n<p class=""chakra-text css-o3oz8b"">The changes in this section were used to demo the output of <code class=""chakra-code css-1u83yg1"">git diff</code>. They were not committed to the repository. If you\'d like, you can definitely commit the changes to the repository, just know that your <code class=""chakra-code css-1u83yg1"">git log</code> will look slightly different from mine because it includes this extra commit.</p>\n</blockquote></div>', '<div class=""ureact-markdown css-tc5hjw""><h2 class=""chakra-heading css-fz7yxd"">Git Diff Recap</h2>\n<p class=""chakra-text css-o3oz8b"">To recap, the <code class=""chakra-code css-1u83yg1"">git diff</code> command is used to see changes that have been made but haven\'t been committed, yet:</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-bash"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span>$ </span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">git</span><span> </span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">diff</span></code></div></div></pre>\n<p class=""chakra-text css-o3oz8b"">This command displays:</p>\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp"">the files that have been modified</li><li class=""css-cvpopp"">the location of the lines that have been added/removed</li><li class=""css-cvpopp"">the actual changes that have been made</li></ul>\n<h3 class=""chakra-heading css-k57syw"">Further Research</h3>\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://git-scm.com/docs/git-diff"">git diff<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a> from the Git Docs</li></ul></div>']",['https://video.udacity-data.com/topher/2017/February/58a3901f_ud123-l4-git-diff/ud123-l4-git-diff.png'],
Version Control with Git,Version Control with Git,Lesson 4: Add Commits To A Repo,4.6  Having Git Ignore Files,"['<div class=""ureact-markdown css-tc5hjw""><h2 class=""chakra-heading css-fz7yxd"">Why Should Files Be Ignored</h2>\n<p class=""chakra-text css-o3oz8b"">Remember a couple sections back when we were learning about <code class=""chakra-code css-1u83yg1"">git add</code>? Instead of adding the files one by one, there was a special character that we could use to indicate the current directory and all subdirectories. Do you remember what that character is?</p>\n<p class=""chakra-text css-o3oz8b"">That\'s right, the period (<code class=""chakra-code css-1u83yg1"">.</code>)!</p>\n<h3 class=""chakra-heading css-k57syw"">The Problem</h3>\n<p class=""chakra-text css-o3oz8b"">Let\'s say you add a file like a Word document to the directory where your project is stored <em class=""chakra-text css-o3oz8b"">but don\'t want it added to the repository</em>. (You can simulate adding a Word document by running <code class=""chakra-code css-1u83yg1"">touch project.docx</code>) Git will see this new file, so if you run <code class=""chakra-code css-1u83yg1"">git status</code> it\'ll show up in the list of files.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><em class=""chakra-text css-o3oz8b"">The Terminal application showing the output of the <code class=""chakra-code css-1u83yg1"">git status</code> command. The output shows a new Word document that is in Git\'s ""Untracked files"" section.</em></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">The potential problem with having this file in your project is that, because <code class=""chakra-code css-1u83yg1"">git add .</code> adds <em class=""chakra-text css-o3oz8b"">all</em> files, the Word document might get accidentally committed to the repository.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><h2 class=""chakra-heading css-fz7yxd"">Git Ignore</h2>\n<p class=""chakra-text css-o3oz8b"">If you want to keep a file in your project\'s directory structure but make sure it isn\'t accidentally committed to the project, you can use the specially named file, <code class=""chakra-code css-1u83yg1"">.gitignore</code> (note the dot at the front, it\'s important!). Add this file to your project in the same directory that the hidden <code class=""chakra-code css-1u83yg1"">.git</code> directory is located. All you have to do is list the <em class=""chakra-text css-o3oz8b"">names</em> of files that you want Git to ignore (not track) and it will ignore them.</p>\n<p class=""chakra-text css-o3oz8b"">Let\'s try it with the ""project.docx"" file. Add the following line inside the <code class=""chakra-code css-1u83yg1"">.gitignore</code> file:</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-bash"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span>project.docx</span></code></div></div></pre>\n<p class=""chakra-text css-o3oz8b"">Now run <code class=""chakra-code css-1u83yg1"">git status</code> and check its output:</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><em class=""chakra-text css-o3oz8b"">The Terminal application showing the output of <code class=""chakra-code css-1u83yg1"">git status</code>. The Word document is no longer listed as an untracked file. The new "".gitignore"" file is listed, though.</em></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Git knows to look at the contents of a file with the name <code class=""chakra-code css-1u83yg1"">.gitignore</code>. Since it saw ""project.docx"" in it, it ignored that file and doesn\'t show it in the output of <code class=""chakra-code css-1u83yg1"">git status</code>.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><h2 class=""chakra-heading css-fz7yxd"">Globbing Crash Course</h2>\n<p class=""chakra-text css-o3oz8b"">Let\'s say that you add 50 images to your project, but want Git to ignore all of them. Does this mean you have to list each and every filename in the <code class=""chakra-code css-1u83yg1"">.gitignore</code> file? Oh gosh no, that would be crazy! Instead, you can use a concept called [globbing](<a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://en.wikipedia.org/wiki/Glob_(programming)"">https://en.wikipedia.org/wiki/Glob_(programming)<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a>.</p>\n<p class=""chakra-text css-o3oz8b"">Globbing lets you use special characters to match patterns/characters. In the <code class=""chakra-code css-1u83yg1"">.gitignore</code> file, you can use the following:</p>\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp"">blank lines can be used for spacing</li><li class=""css-cvpopp""><code class=""chakra-code css-1u83yg1"">#</code> - marks line as a comment</li><li class=""css-cvpopp""><code class=""chakra-code css-1u83yg1"">*</code> - matches 0 or more characters</li><li class=""css-cvpopp""><code class=""chakra-code css-1u83yg1"">?</code> - matches 1 character</li><li class=""css-cvpopp""><code class=""chakra-code css-1u83yg1"">[abc]</code> - matches a, b, <em class=""chakra-text css-o3oz8b"">or</em> c</li><li class=""css-cvpopp""><code class=""chakra-code css-1u83yg1"">**</code> - matches nested directories - <code class=""chakra-code css-1u83yg1"">a/**/z</code> matches\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp"">a/z</li><li class=""css-cvpopp"">a/b/z</li><li class=""css-cvpopp"">a/b/c/z</li></ul>\n</li></ul>\n<p class=""chakra-text css-o3oz8b"">So if all of the 50 images are JPEG images in the ""samples"" folder, we could add the following line to <code class=""chakra-code css-1u83yg1"">.gitignore</code> to have Git ignore all 50 images.</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-bash"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span>samples/*.jpg</span></code></div></div></pre></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Which of the following files will be ignored if <code class=""chakra-code css-1u83yg1"">*.png</code> is entered into the <code class=""chakra-code css-1u83yg1"">.gitignore</code> file?</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">ocean.jpg</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">trees.png</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">png-format.pdf</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">not-a-png.jpeg</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">bg-pattern.png</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">logo.gif</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">LOUDFILE.PNG</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">If you ask Git to ignore ""be?rs"", which of the following filenames will be ignored?</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">bears</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">beavers</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">BeArS</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">beers</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">boars</p></div>', '<div class=""ureact-markdown css-tc5hjw""><h2 class=""chakra-heading css-fz7yxd"">Git Ignore Recap</h2>\n<p class=""chakra-text css-o3oz8b"">To recap, the <code class=""chakra-code css-1u83yg1"">.gitignore</code> file is used to tell Git about the files that Git should not track. This file should be placed in the same directory that the <code class=""chakra-code css-1u83yg1"">.git</code> directory is in.</p>\n<h3 class=""chakra-heading css-k57syw"">Further Research</h3>\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://git-scm.com/book/en/v2/Git-Basics-Recording-Changes-to-the-Repository#Ignoring-Files"">Ignoring files<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a> from the Git Book</li><li class=""css-cvpopp""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://git-scm.com/docs/gitignore#_pattern_format"">gitignore<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a> from the Git Docs</li><li class=""css-cvpopp""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://help.github.com/articles/ignoring-files/"">Ignoring files<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a> from the GitHub Docs</li><li class=""css-cvpopp""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://www.gitignore.io/"">gitignore.io<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a></li></ul></div>']","['https://video.udacity-data.com/topher/2017/February/58a3936f_ud123-l4-git-ignore-word-doc/ud123-l4-git-ignore-word-doc.png', 'https://video.udacity-data.com/topher/2017/February/58a39121_ud123-l4-git-gitignore/ud123-l4-git-gitignore.png']",
Version Control with Git,Version Control with Git,Lesson 4: Add Commits To A Repo,4.7  Outro,[],[],https://www.youtube.com/embed/5eyvsMvAPYs
Version Control with Git,Version Control with Git,"Lesson 5: Tagging, Branching, and Merging",5.1  Intro,[],[],https://www.youtube.com/embed/sMf_r4_z-Ls
Version Control with Git,Version Control with Git,"Lesson 5: Tagging, Branching, and Merging",5.2  Tagging,"['<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">So far in this course, we\'ve been zoomed in on the specific Git commands. We\'ve learned how they work in detail and what it looks like running them on the Terminal.</p>\n<p class=""chakra-text css-o3oz8b"">Let\'s zoom out a bit to look at how a Git tag fits into a repository.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><h2 class=""chakra-heading css-fz7yxd"">Where Are We?</h2>\n<p class=""chakra-text css-o3oz8b"">You can do these steps in either project, but I\'ll be doing them in the <code class=""chakra-code css-1u83yg1"">new-git-project</code> project.</p>\n<p class=""chakra-text css-o3oz8b"">Let\'s take a look at the log of the project so far:</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><em class=""chakra-text css-o3oz8b"">The Terminal application showing the output from running <code class=""chakra-code css-1u83yg1"">git log --oneline</code>.</em></p></div>', '<div class=""ureact-markdown css-tc5hjw""><h2 class=""chakra-heading css-fz7yxd"">Git Tag Command</h2>\n<p class=""chakra-text css-o3oz8b"">Pay attention to what\'s shown (just the SHA and the commit message)</p>\n<p class=""chakra-text css-o3oz8b"">The command we\'ll be using to interact with the repository\'s tags is the <code class=""chakra-code css-1u83yg1"">git tag</code> command:</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-bash"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span>$ </span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">git</span><span> tag -a v1.0</span></code></div></div></pre>\n<p class=""chakra-text css-o3oz8b"">This will open your code editor and wait for you to supply a message for the tag. How about the message ""Ready for content""?</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><em class=""chakra-text css-o3oz8b"">Code editor waiting for the tag\'s message to be supplied.</em></p></div>', '<div class=""ureact-markdown css-tc5hjw""><blockquote class=""css-6jmydm"">\n<p class=""chakra-text css-o3oz8b"">CAREFUL: In the command above (<code class=""chakra-code css-1u83yg1"">git tag -a v1.0</code>) the <code class=""chakra-code css-1u83yg1"">-a</code> flag is used. This flag tells Git to create an <em class=""chakra-text css-o3oz8b"">annotated</em> flag. If you don\'t provide the flag (i.e. <code class=""chakra-code css-1u83yg1"">git tag v1.0</code>) then it\'ll create what\'s called a <em class=""chakra-text css-o3oz8b"">lightweight</em> tag.</p>\n</blockquote>\n<blockquote class=""css-6jmydm"">\n<p class=""chakra-text css-o3oz8b"">Annotated tags are recommended because they include a lot of extra information such as:</p>\n</blockquote>\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp"">the person who made the tag</li><li class=""css-cvpopp"">the date the tag was made</li><li class=""css-cvpopp"">a message for the tag</li></ul>\n<blockquote class=""css-6jmydm"">\n<p class=""chakra-text css-o3oz8b"">Because of this, you should always use annotated tags.</p>\n</blockquote></div>', '<div class=""ureact-markdown css-tc5hjw""><h2 class=""chakra-heading css-fz7yxd"">Verify Tag</h2>\n<p class=""chakra-text css-o3oz8b"">After saving and quitting the editor, nothing is displayed on the command line. So how do we know that a tag was actually added to the project? If you type out just <code class=""chakra-code css-1u83yg1"">git tag</code>, it will display all tags that are in the repository.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><em class=""chakra-text css-o3oz8b"">The Terminal application showing the output of the <code class=""chakra-code css-1u83yg1"">git tag</code> command. The tag <code class=""chakra-code css-1u83yg1"">v1.0</code> is listed.</em></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">So we\'ve verified that it\'s in the repository, but let\'s actually see <em class=""chakra-text css-o3oz8b"">where</em> it is inside the repository. To do that, we\'ll go back to our good old friend, <code class=""chakra-code css-1u83yg1"">git log</code>!</p></div>', '<div class=""ureact-markdown css-tc5hjw""><h2 class=""chakra-heading css-fz7yxd"">Git Log\'s --decorate Flag</h2>\n<p class=""chakra-text css-o3oz8b"">As you\'ve learned, <code class=""chakra-code css-1u83yg1"">git log</code> is a pretty powerful tool for letting us check out a repository\'s commits. We\'ve already looked at a couple of its flags, but it\'s time to add a new one to our toolbelt. The <code class=""chakra-code css-1u83yg1"">--decorate</code> flag will show us some details that are hidden from the default view.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Try running <code class=""chakra-code css-1u83yg1"">git log --decorate</code> now!</p></div>', '<div class=""ureact-markdown css-tc5hjw""><blockquote class=""css-6jmydm"">\n<h2 class=""chakra-heading css-fz7yxd"">💡 <code class=""chakra-code css-1u83yg1"">--decorate</code> Flag Changes in Git 2.13  💡</h2>\n</blockquote>\n<blockquote class=""css-6jmydm"">\n<p class=""chakra-text css-o3oz8b"">In the 2.13 update to Git, the <code class=""chakra-code css-1u83yg1"">log</code> command has changed to automatically enable the <code class=""chakra-code css-1u83yg1"">--decorate</code> flag. This means that you do not need to include the <code class=""chakra-code css-1u83yg1"">--decorate</code> flag in your command, since it is automatically included, anyway! So the following commands result in the exact same output:</p>\n</blockquote>\n<blockquote class=""css-6jmydm"">\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-shell"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span>$ </span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">git</span><span> log --decorate\n</span><span>$ </span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">git</span><span> log</span></code></div></div></pre>\n</blockquote>\n<blockquote class=""css-6jmydm"">\n<p class=""chakra-text css-o3oz8b"">Check out <a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://github.com/git/git/blob/v2.13.0/Documentation/RelNotes/2.13.0.txt#L176-L177"">the 2.13 release notes<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a>.</p>\n</blockquote></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><em class=""chakra-text css-o3oz8b"">The Terminal application showing the output of the <code class=""chakra-code css-1u83yg1"">git log --decorate</code> command. The log output now displays the newly created tag.</em></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">The tag information is at the very end of the first line:</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-bash"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span>commit 6fa5f34790808d9f4dccd0fa8fdbc40760102d6e </span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span>HEAD -</span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">&gt;</span><span> master, tag: v1.0</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span></code></div></div></pre>\n<p class=""chakra-text css-o3oz8b"">See how it says <code class=""chakra-code css-1u83yg1"">tag: v1.0</code>? That\'s the tag! Remember that tags are associated with a specific commit. This is why the tag is on the same line as the commit\'s SHA.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><blockquote class=""css-6jmydm"">\n<h2 class=""chakra-heading css-fz7yxd"">HEAD -&gt; master?</h2>\n</blockquote>\n<blockquote class=""css-6jmydm"">\n<p class=""chakra-text css-o3oz8b"">Did you notice that, in addition to the tag information being displayed in the log, the <code class=""chakra-code css-1u83yg1"">--decorate</code> also revealed <code class=""chakra-code css-1u83yg1"">HEAD -&gt; master</code>? That\'s information about a <em class=""chakra-text css-o3oz8b"">branch</em>! We\'ll be looking at branches in Git, next.</p>\n</blockquote></div>', '<div class=""ureact-markdown css-tc5hjw""><h2 class=""chakra-heading css-fz7yxd"">Deleting A Tag</h2>\n<p class=""chakra-text css-o3oz8b"">What if you accidentally misspelled something in the tag\'s message, or mistyped the actual tag name (<code class=""chakra-code css-1u83yg1"">v0.1</code> instead of <code class=""chakra-code css-1u83yg1"">v1.0</code>). How could you fix this? The easiest way is just to delete the tag and make a new one.</p>\n<p class=""chakra-text css-o3oz8b"">A Git tag can be deleted with the <code class=""chakra-code css-1u83yg1"">-d</code> flag (for <em class=""chakra-text css-o3oz8b"">delete</em>!) and the name of the tag:</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-bash"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span>$ </span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">git</span><span> tag -d v1.0</span></code></div></div></pre></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><em class=""chakra-text css-o3oz8b"">The Terminal application showing the removal of a tag by using the <code class=""chakra-code css-1u83yg1"">-d</code> flag. The command that is run is <code class=""chakra-code css-1u83yg1"">git tag -d v1.0</code>.</em></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">By default, a Git tag will not appear in a log. What flag must be used to display the tag information in the output of <code class=""chakra-code css-1u83yg1"">git log</code>?</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">--show-tags</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">--tags</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">--display-all</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">--decorate</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Which of the following will delete the tag <code class=""chakra-code css-1u83yg1"">v-1</code>?</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">git tag --delete v-1</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">git remove v-1</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">git tag -d v-1</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">git delete v-1</p></div>', '<div class=""ureact-markdown css-tc5hjw""><h2 class=""chakra-heading css-fz7yxd"">Adding A Tag To A Past Commit</h2>\n<p class=""chakra-text css-o3oz8b"">Running <code class=""chakra-code css-1u83yg1"">git tag -a v1.0</code> will tag the most recent commit. But what if you wanted to tag a commit that occurred farther back in the repo\'s history?</p>\n<p class=""chakra-text css-o3oz8b"">All you have to do is provide the SHA of the commit you want to tag!</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-bash"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span>$ </span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">git</span><span> tag -a v1.0 a87984</span></code></div></div></pre>\n<p class=""chakra-text css-o3oz8b"">(after popping open a code editor to let you supply the tag\'s message) this command will tag the commit with the SHA <code class=""chakra-code css-1u83yg1"">a87084</code> with the tag <code class=""chakra-code css-1u83yg1"">v1.0</code>. Using this technique, you can tag any commit in the entire git repository! Pretty neat, right?...and it\'s just a simple addition to add the SHA of a commit to the Git tagging command you already know.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Using the following <code class=""chakra-code css-1u83yg1"">git log --oneline</code> information, what command would you run to give the commit with the message ""style page header"" a tag of <code class=""chakra-code css-1u83yg1"">beta</code>?</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-bash"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span>2a9e9f3 </span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">add</span><span> breakpoint </span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">for</span><span> large-sized screens\n</span><span>137a0bd </span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">add</span><span> breakpoint </span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">for</span><span> medium-sized screens\n</span><span>c5ee895 </span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">add</span><span> space around page edge\n</span>b552fa5 style page header\nf8c87c7 convert social links from text to images</code></div></div></pre></div>', '<div class=""ureact-markdown css-tc5hjw""><h2 class=""chakra-heading css-fz7yxd"">Git Tag Recap</h2>\n<p class=""chakra-text css-o3oz8b"">To recap, the <code class=""chakra-code css-1u83yg1"">git tag</code> command is used to add a marker on a specific commit. The tag does not move around as new commits are added.</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-shell"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span>$ </span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">git</span><span> tag -a beta</span></code></div></div></pre>\n<p class=""chakra-text css-o3oz8b"">This command will:</p>\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp"">add a tag to the most recent commit</li><li class=""css-cvpopp"">add a tag to a specific commit <em class=""chakra-text css-o3oz8b"">if a SHA is passed</em></li></ul>\n<h3 class=""chakra-heading css-k57syw"">Further Research</h3>\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://git-scm.com/book/en/v2/Git-Basics-Tagging"">Git Basics - Tagging<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a> from the Git Book</li><li class=""css-cvpopp""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://git-scm.com/docs/git-tag"">Git Tag<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a> from the Git Docs</li></ul></div>']","['https://video.udacity-data.com/topher/2017/February/58a39500_ud123-l5-git-log-pre-tag/ud123-l5-git-log-pre-tag.png', 'https://video.udacity-data.com/topher/2017/February/58a39be9_ud123-l5-editor-with-tag-message/ud123-l5-editor-with-tag-message.png', 'https://video.udacity-data.com/topher/2017/February/58a39cdf_ud123-l5-git-tag/ud123-l5-git-tag.png', 'https://video.udacity-data.com/topher/2017/February/58a39d95_ud123-l5-git-log-decorate/ud123-l5-git-log-decorate.png', 'https://video.udacity-data.com/topher/2017/February/58a39e16_ud123-l5-git-tag-delete/ud123-l5-git-tag-delete.png']",https://www.youtube.com/embed/D4VdXT72ASE
Version Control with Git,Version Control with Git,"Lesson 5: Tagging, Branching, and Merging",5.3  Branching,"['<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">It\'s time to delve into the wonderful world of branches! Branches in Git are flexible and let you do some really powerful things. Before we get into the nitty gritty details of the commands, let\'s take another step back and look at the big picture of what branches are and how they function.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">So that\'s the big picture of how branches work and how to switch between branches. Did you know that you\'ve already seen the master branch on the command line? Because of the setup files you added in the first lesson, the current branch is displayed right in the command prompt.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><em class=""chakra-text css-o3oz8b"">The Terminal application showing the current branch in the command prompt. The current branch is the ""master"" branch.</em></p></div>', '<div class=""ureact-markdown css-tc5hjw""><h2 class=""chakra-heading css-fz7yxd"">The <code class=""chakra-code css-1u83yg1"">git branch</code> command</h2>\n<p class=""chakra-text css-o3oz8b"">The <code class=""chakra-code css-1u83yg1"">git branch</code> command is used to interact with Git\'s branches:</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-bash"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span>$ </span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">git</span><span> branch</span></code></div></div></pre>\n<p class=""chakra-text css-o3oz8b"">It can be used to:</p>\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp"">list all branch names in the repository</li><li class=""css-cvpopp"">create new branches</li><li class=""css-cvpopp"">delete branches</li></ul>\n<p class=""chakra-text css-o3oz8b"">If we type out just <code class=""chakra-code css-1u83yg1"">git branch</code> it will list out the branches in a repository:</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><em class=""chakra-text css-o3oz8b"">The Terminal application showing the output of the <code class=""chakra-code css-1u83yg1"">git branch</code> command. The master branch is displayed.</em></p></div>', '<div class=""ureact-markdown css-tc5hjw""><h2 class=""chakra-heading css-fz7yxd"">Create A Branch</h2>\n<p class=""chakra-text css-o3oz8b"">To create a branch, all you have to do is use <code class=""chakra-code css-1u83yg1"">git branch</code> and provide it the name of the branch you want it to create. So if you want a branch called ""sidebar"", you\'d run this command:</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-bash"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span>$ </span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">git</span><span> branch sidebar</span></code></div></div></pre></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Remember that there are a number of branches in the repository, but that the command prompt displays the <em class=""chakra-text css-o3oz8b"">current branch</em>.</p>\n<p class=""chakra-text css-o3oz8b"">Now that we just created a new ""sidebar"" branch, does the command prompt display <code class=""chakra-code css-1u83yg1"">sidebar</code> or <code class=""chakra-code css-1u83yg1"">master</code>?</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">sidebar</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">master</p></div>', '<div class=""ureact-markdown css-tc5hjw""><h2 class=""chakra-heading css-fz7yxd"">The <code class=""chakra-code css-1u83yg1"">git checkout</code> Command</h2>\n<p class=""chakra-text css-o3oz8b"">Remember that when a commit is made that it will be added to the current branch. So even though we created the new <code class=""chakra-code css-1u83yg1"">sidebar</code>, no new commits will be added to it since we haven\'t <em class=""chakra-text css-o3oz8b"">switched to it</em>, yet. If we made a commit right now, that commit would be added to the <code class=""chakra-code css-1u83yg1"">master</code> branch, <em class=""chakra-text css-o3oz8b"">not</em> the <code class=""chakra-code css-1u83yg1"">sidebar</code> branch. We\'ve already seen this in the demo, but to switch between branches, we need to use Git\'s <code class=""chakra-code css-1u83yg1"">checkout</code> command.</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-bash"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span>$ </span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">git</span><span> checkout sidebar</span></code></div></div></pre>\n<p class=""chakra-text css-o3oz8b"">It\'s important to understand how this command works. Running this command will:</p>\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp"">remove all files and directories from the Working Directory that Git is tracking\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp"">(files that Git tracks are stored in the repository, so nothing is lost)</li></ul>\n</li><li class=""css-cvpopp"">go into the repository and pull out all of the files and directories of the commit that the branch points to</li></ul>\n<p class=""chakra-text css-o3oz8b"">So this will remove all of the files that are referenced by commits in the master branch. It will replace them with the files that are referenced by the commits in the sidebar branch. This is very important to understand, so go back and read these last two sentences.</p>\n<p class=""chakra-text css-o3oz8b"">The funny thing, though, is that both <code class=""chakra-code css-1u83yg1"">sidebar</code> and <code class=""chakra-code css-1u83yg1"">master</code> are pointing <em class=""chakra-text css-o3oz8b"">at the same commit</em>, so it will look like nothing changes when you switch between them. But the command prompt will show ""sidebar"", now:</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><em class=""chakra-text css-o3oz8b"">The Terminal application showing the ""sidebar"" branch in the command prompt.</em></p></div>', '<div class=""ureact-markdown css-tc5hjw""><h2 class=""chakra-heading css-fz7yxd"">Branches In The Log</h2>\n<p class=""chakra-text css-o3oz8b"">The branch information in the command prompt is helpful, but the clearest way to see it is by looking at the output of <code class=""chakra-code css-1u83yg1"">git log</code>. But just like we had to use the <code class=""chakra-code css-1u83yg1"">--decorate</code> flag to display Git tags, we need it to display branches.</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-bash"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span>$ </span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">git</span><span> log --oneline --decorate</span></code></div></div></pre>\n<p class=""chakra-text css-o3oz8b"">This is what my log output displays (yours might look different depending on what commits you\'ve made):</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><em class=""chakra-text css-o3oz8b"">The Terminal application showing the output of the <code class=""chakra-code css-1u83yg1"">git log --oneline --decorate</code> command. The word ""HEAD"" has an arrow pointing to ""sidebar"" which is the active branch.</em></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">In the output above, notice how the special ""HEAD"" indicator we saw earlier has an arrow pointing to the sidebar branch. It\'s pointing to sidebar because the sidebar branch is the current branch, and any commits made right now will be added to the sidebar branch.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><h2 class=""chakra-heading css-fz7yxd"">The Active Branch</h2>\n<p class=""chakra-text css-o3oz8b"">The command prompt will display the <em class=""chakra-text css-o3oz8b"">active</em> branch. But this is a special customization we made to our prompt. If you find yourself on a different computer, the <em class=""chakra-text css-o3oz8b"">fastest</em> way to determine the active branch is to look at the output of the <code class=""chakra-code css-1u83yg1"">git branch</code> command. An asterisk will appear next to the name of the active branch.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><em class=""chakra-text css-o3oz8b"">The Terminal application showing the output of the <code class=""chakra-code css-1u83yg1"">git branch</code> command. The active branch (in this case, the ""sidebar"" branch) has an asterisk next to it.</em></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">From what you know about both the <code class=""chakra-code css-1u83yg1"">git branch</code> and <code class=""chakra-code css-1u83yg1"">git tag</code> commands, what do you think the following command will do?</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-bash"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span>$ </span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">git</span><span> branch alt-sidebar-loc 42a69f</span></code></div></div></pre></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">will create a branch <code class=""chakra-code css-1u83yg1"">alt</code> at the same commit as the <code class=""chakra-code css-1u83yg1"">master</code> branch</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">will create the 3 branches <code class=""chakra-code css-1u83yg1"">alt</code>, <code class=""chakra-code css-1u83yg1"">sidebar</code>, <code class=""chakra-code css-1u83yg1"">loc</code></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">will move the master branch to the commit with SHA <code class=""chakra-code css-1u83yg1"">42a69f</code></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">will create the <code class=""chakra-code css-1u83yg1"">alt-sidebar-loc</code> branch and have it point to the commit with SHA <code class=""chakra-code css-1u83yg1"">42a69f</code></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Given the following output from <code class=""chakra-code css-1u83yg1"">git branch</code>:</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-bash"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span>$ </span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">git</span><span> branch\n</span>  barbara\n* footer-fix\n  master\n  richard\n  sidebar\n  social-icons</code></div></div></pre>\n<p class=""chakra-text css-o3oz8b"">Which branch is the active branch?</p></div>', '<div class=""ureact-markdown css-tc5hjw""><h2 class=""chakra-heading css-fz7yxd"">Delete A Branch</h2>\n<p class=""chakra-text css-o3oz8b"">A branch is used to do development or make a fix to the project that won\'t affect the project (since the changes are made on a branch). Once you make the change on the branch, you can combine that branch into the <code class=""chakra-code css-1u83yg1"">master</code> branch (this ""combining of branches"" is called ""merging"" and we\'ll look at it shortly).</p>\n<p class=""chakra-text css-o3oz8b"">Now after a branch\'s changes have been merged, you probably won\'t need the branch anymore. If you want to delete the branch, you\'d use the <code class=""chakra-code css-1u83yg1"">-d</code> flag. The command below includes the <code class=""chakra-code css-1u83yg1"">-d</code> flag which tells Git to <em class=""chakra-text css-o3oz8b"">delete</em> the provided branch (in this case, the ""sidebar"" branch).</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-bash"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span>$ </span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">git</span><span> branch -d sidebar</span></code></div></div></pre>\n<p class=""chakra-text css-o3oz8b"">One thing to note is that you can\'t delete a branch that you\'re currently on. So to delete the <code class=""chakra-code css-1u83yg1"">sidebar</code> branch, you\'d have to switch to either the <code class=""chakra-code css-1u83yg1"">master</code> branch or create and switch to a new branch.</p>\n<p class=""chakra-text css-o3oz8b"">Deleting something can be quite nerve-wracking. Don\'t worry, though. Git won\'t let you delete a branch if it has commits on it that aren\'t on any other branch (meaning the commits are unique to the branch that\'s about to be deleted). If you created the <code class=""chakra-code css-1u83yg1"">sidebar</code> branch, added commits to it, and then tried to delete it with the <code class=""chakra-code css-1u83yg1"">git branch -d sidebar</code>, Git wouldn\'t let you delete the branch because you can\'t delete a branch that you\'re currently on. If you switched to the <code class=""chakra-code css-1u83yg1"">master</code> branch and tried to delete the <code class=""chakra-code css-1u83yg1"">sidebar</code> branch, Git <em class=""chakra-text css-o3oz8b"">also</em> wouldn\'t let you do that because those new commits on the <code class=""chakra-code css-1u83yg1"">sidebar</code> branch would be lost! To force deletion, you need to use a capital D flag - <code class=""chakra-code css-1u83yg1"">git branch -D sidebar</code>.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><h2 class=""chakra-heading css-fz7yxd"">Git Branch Recap</h2>\n<p class=""chakra-text css-o3oz8b"">To recap, the <code class=""chakra-code css-1u83yg1"">git branch</code> command is used to manage branches in Git:</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-bash"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span class=""token"" style=""color: rgb(113, 113, 101); font-style: italic;""># to list all branches</span><span>\n</span><span>$ </span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">git</span><span> branch\n</span>\n<span></span><span class=""token"" style=""color: rgb(113, 113, 101); font-style: italic;""># to create a new ""footer-fix"" branch</span><span>\n</span><span>$ </span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">git</span><span> branch footer-fix\n</span>\n<span></span><span class=""token"" style=""color: rgb(113, 113, 101); font-style: italic;""># to delete the ""footer-fix"" branch</span><span>\n</span><span>$ </span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">git</span><span> branch -d footer-fix</span></code></div></div></pre>\n<p class=""chakra-text css-o3oz8b"">This command is used to:</p>\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp"">list out local branches</li><li class=""css-cvpopp"">create new branches</li><li class=""css-cvpopp"">remove branches</li></ul>\n<h3 class=""chakra-heading css-k57syw"">Further Research</h3>\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://git-scm.com/book/en/v2/Git-Branching-Basic-Branching-and-Merging"">Git Branching - Basic Branching and Merging<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a> from the Git Docs</li><li class=""css-cvpopp""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""http://learngitbranching.js.org/"">Learn Git Branching<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a></li><li class=""css-cvpopp""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://www.atlassian.com/git/tutorials/using-branches"">Git Branching Tutorial<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a> from the Atlassian Blog</li></ul></div>']","['https://video.udacity-data.com/topher/2017/February/58a3a0fe_ud123-l5-branch-current/ud123-l5-branch-current.png', 'https://video.udacity-data.com/topher/2017/February/58a3a139_ud123-l5-git-branch/ud123-l5-git-branch.png', 'https://video.udacity-data.com/topher/2017/February/58a4c60a_ud123-l5-git-checkout-sidebar/ud123-l5-git-checkout-sidebar.png', 'https://video.udacity-data.com/topher/2017/February/58a4c65f_ud123-l5-git-log-branches/ud123-l5-git-log-branches.png', 'https://video.udacity-data.com/topher/2017/February/58a4c6aa_ud123-l5-git-branch-asterisk/ud123-l5-git-branch-asterisk.png']",https://www.youtube.com/embed/ywcOC6CLG4s
Version Control with Git,Version Control with Git,"Lesson 5: Tagging, Branching, and Merging",5.4  Branching Effectively,"['<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Alright! Now that you\'ve learned how to create, list, and delete branches, let\'s put that knowledge to use!</p>\n<p class=""chakra-text css-o3oz8b"">First, make sure we\'re on the same page and have the same starter code. We\'re going to be working in the <code class=""chakra-code css-1u83yg1"">new-git-project</code> project. The project has the following files:</p>\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp""><code class=""chakra-code css-1u83yg1"">index.html</code></li><li class=""css-cvpopp""><code class=""chakra-code css-1u83yg1"">css/app.css</code> (empty)</li><li class=""css-cvpopp""><code class=""chakra-code css-1u83yg1"">js/app.js</code> (empty)</li></ul>\n<p class=""chakra-text css-o3oz8b"">The CSS and JavaScript files are empty. Make sure the index file has the following content:</p></div>', '<div class=""ureact-markdown css-tc5hjw""><pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-html"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">&lt;!</span><span class=""token doctype-tag"" style=""color: rgb(153, 153, 153); font-weight: bold;"">doctype</span><span class=""token"" style=""color: rgb(153, 153, 153); font-weight: bold;""> </span><span class=""token name"" style=""color: rgb(153, 153, 153); font-weight: bold;"">html</span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">&gt;</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(15, 43, 61);"">&lt;</span><span class=""token"" style=""color: navy;"">html</span><span class=""token"" style=""color: navy;""> </span><span class=""token"" style=""color: rgb(2, 124, 124);"">lang</span><span class=""token attr-equals"" style=""color: rgb(15, 43, 61);"">=</span><span class=""token"" style=""color: rgb(15, 43, 61);"">""</span><span class=""token"" style=""color: rgb(221, 17, 68);"">en</span><span class=""token"" style=""color: rgb(15, 43, 61);"">""</span><span class=""token"" style=""color: rgb(15, 43, 61);"">&gt;</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(15, 43, 61);"">&lt;</span><span class=""token"" style=""color: navy;"">head</span><span class=""token"" style=""color: rgb(15, 43, 61);"">&gt;</span><span>\n</span><span>    </span><span class=""token"" style=""color: rgb(15, 43, 61);"">&lt;</span><span class=""token"" style=""color: navy;"">meta</span><span class=""token"" style=""color: navy;""> </span><span class=""token"" style=""color: rgb(2, 124, 124);"">charset</span><span class=""token attr-equals"" style=""color: rgb(15, 43, 61);"">=</span><span class=""token"" style=""color: rgb(15, 43, 61);"">""</span><span class=""token"" style=""color: rgb(221, 17, 68);"">utf-8</span><span class=""token"" style=""color: rgb(15, 43, 61);"">""</span><span class=""token"" style=""color: rgb(15, 43, 61);"">&gt;</span><span>\n</span><span>    </span><span class=""token"" style=""color: rgb(15, 43, 61);"">&lt;</span><span class=""token"" style=""color: navy;"">title</span><span class=""token"" style=""color: rgb(15, 43, 61);"">&gt;</span><span>Blog Project</span><span class=""token"" style=""color: rgb(15, 43, 61);"">&lt;/</span><span class=""token"" style=""color: navy;"">title</span><span class=""token"" style=""color: rgb(15, 43, 61);"">&gt;</span><span>\n</span><span>    </span><span class=""token"" style=""color: rgb(15, 43, 61);"">&lt;</span><span class=""token"" style=""color: navy;"">meta</span><span class=""token"" style=""color: navy;""> </span><span class=""token"" style=""color: rgb(2, 124, 124);"">name</span><span class=""token attr-equals"" style=""color: rgb(15, 43, 61);"">=</span><span class=""token"" style=""color: rgb(15, 43, 61);"">""</span><span class=""token"" style=""color: rgb(221, 17, 68);"">viewport</span><span class=""token"" style=""color: rgb(15, 43, 61);"">""</span><span class=""token"" style=""color: navy;""> </span><span class=""token"" style=""color: rgb(2, 124, 124);"">content</span><span class=""token attr-equals"" style=""color: rgb(15, 43, 61);"">=</span><span class=""token"" style=""color: rgb(15, 43, 61);"">""</span><span class=""token"" style=""color: rgb(221, 17, 68);"">width=device-width, initial-scale=1</span><span class=""token"" style=""color: rgb(15, 43, 61);"">""</span><span class=""token"" style=""color: rgb(15, 43, 61);"">&gt;</span><span>\n</span><span>    </span><span class=""token"" style=""color: rgb(15, 43, 61);"">&lt;</span><span class=""token"" style=""color: navy;"">meta</span><span class=""token"" style=""color: navy;""> </span><span class=""token"" style=""color: rgb(2, 124, 124);"">name</span><span class=""token attr-equals"" style=""color: rgb(15, 43, 61);"">=</span><span class=""token"" style=""color: rgb(15, 43, 61);"">""</span><span class=""token"" style=""color: rgb(221, 17, 68);"">description</span><span class=""token"" style=""color: rgb(15, 43, 61);"">""</span><span class=""token"" style=""color: navy;""> </span><span class=""token"" style=""color: rgb(2, 124, 124);"">content</span><span class=""token attr-equals"" style=""color: rgb(15, 43, 61);"">=</span><span class=""token"" style=""color: rgb(15, 43, 61);"">""</span><span class=""token"" style=""color: rgb(15, 43, 61);"">""</span><span class=""token"" style=""color: rgb(15, 43, 61);"">&gt;</span><span>\n</span><span>    </span><span class=""token"" style=""color: rgb(15, 43, 61);"">&lt;</span><span class=""token"" style=""color: navy;"">link</span><span class=""token"" style=""color: navy;""> </span><span class=""token"" style=""color: rgb(2, 124, 124);"">rel</span><span class=""token attr-equals"" style=""color: rgb(15, 43, 61);"">=</span><span class=""token"" style=""color: rgb(15, 43, 61);"">""</span><span class=""token"" style=""color: rgb(221, 17, 68);"">stylesheet</span><span class=""token"" style=""color: rgb(15, 43, 61);"">""</span><span class=""token"" style=""color: navy;""> </span><span class=""token"" style=""color: rgb(2, 124, 124);"">href</span><span class=""token attr-equals"" style=""color: rgb(15, 43, 61);"">=</span><span class=""token"" style=""color: rgb(15, 43, 61);"">""</span><span class=""token"" style=""color: rgb(221, 17, 68);"">css/app.css</span><span class=""token"" style=""color: rgb(15, 43, 61);"">""</span><span class=""token"" style=""color: rgb(15, 43, 61);"">&gt;</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(15, 43, 61);"">&lt;/</span><span class=""token"" style=""color: navy;"">head</span><span class=""token"" style=""color: rgb(15, 43, 61);"">&gt;</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(15, 43, 61);"">&lt;</span><span class=""token"" style=""color: navy;"">body</span><span class=""token"" style=""color: rgb(15, 43, 61);"">&gt;</span><span>\n</span>\n<span>    </span><span class=""token"" style=""color: rgb(15, 43, 61);"">&lt;</span><span class=""token"" style=""color: navy;"">header</span><span class=""token"" style=""color: rgb(15, 43, 61);"">&gt;</span><span>\n</span><span>        </span><span class=""token"" style=""color: rgb(15, 43, 61);"">&lt;</span><span class=""token"" style=""color: navy;"">h1</span><span class=""token"" style=""color: rgb(15, 43, 61);"">&gt;</span><span>Expedition</span><span class=""token"" style=""color: rgb(15, 43, 61);"">&lt;/</span><span class=""token"" style=""color: navy;"">h1</span><span class=""token"" style=""color: rgb(15, 43, 61);"">&gt;</span><span>\n</span><span>    </span><span class=""token"" style=""color: rgb(15, 43, 61);"">&lt;/</span><span class=""token"" style=""color: navy;"">header</span><span class=""token"" style=""color: rgb(15, 43, 61);"">&gt;</span><span>\n</span>\n<span>    </span><span class=""token"" style=""color: rgb(15, 43, 61);"">&lt;</span><span class=""token"" style=""color: navy;"">div</span><span class=""token"" style=""color: navy;""> </span><span class=""token"" style=""color: rgb(2, 124, 124);"">class</span><span class=""token attr-equals"" style=""color: rgb(15, 43, 61);"">=</span><span class=""token"" style=""color: rgb(15, 43, 61);"">""</span><span class=""token"" style=""color: rgb(221, 17, 68);"">container</span><span class=""token"" style=""color: rgb(15, 43, 61);"">""</span><span class=""token"" style=""color: rgb(15, 43, 61);"">&gt;</span><span>\n</span><span>        </span><span class=""token"" style=""color: rgb(15, 43, 61);"">&lt;</span><span class=""token"" style=""color: navy;"">main</span><span class=""token"" style=""color: rgb(15, 43, 61);"">&gt;</span><span>\n</span>            \n<span>        </span><span class=""token"" style=""color: rgb(15, 43, 61);"">&lt;/</span><span class=""token"" style=""color: navy;"">main</span><span class=""token"" style=""color: rgb(15, 43, 61);"">&gt;</span><span>\n</span><span>    </span><span class=""token"" style=""color: rgb(15, 43, 61);"">&lt;/</span><span class=""token"" style=""color: navy;"">div</span><span class=""token"" style=""color: rgb(15, 43, 61);"">&gt;</span><span>\n</span>\n<span>    </span><span class=""token"" style=""color: rgb(15, 43, 61);"">&lt;</span><span class=""token"" style=""color: navy;"">footer</span><span class=""token"" style=""color: rgb(15, 43, 61);"">&gt;</span><span>\n</span>        Made with ♥ @ Udacity\n<span>    </span><span class=""token"" style=""color: rgb(15, 43, 61);"">&lt;/</span><span class=""token"" style=""color: navy;"">footer</span><span class=""token"" style=""color: rgb(15, 43, 61);"">&gt;</span><span>\n</span><span>    </span><span class=""token"" style=""color: rgb(15, 43, 61);"">&lt;</span><span class=""token"" style=""color: navy;"">script</span><span class=""token"" style=""color: navy;""> </span><span class=""token"" style=""color: rgb(2, 124, 124);"">src</span><span class=""token attr-equals"" style=""color: rgb(15, 43, 61);"">=</span><span class=""token"" style=""color: rgb(15, 43, 61);"">""</span><span class=""token"" style=""color: rgb(221, 17, 68);"">js/app.js</span><span class=""token"" style=""color: rgb(15, 43, 61);"">""</span><span class=""token"" style=""color: rgb(15, 43, 61);"">&gt;</span><span class=""token"" style=""color: rgb(15, 43, 61);"">&lt;/</span><span class=""token"" style=""color: navy;"">script</span><span class=""token"" style=""color: rgb(15, 43, 61);"">&gt;</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(15, 43, 61);"">&lt;/</span><span class=""token"" style=""color: navy;"">body</span><span class=""token"" style=""color: rgb(15, 43, 61);"">&gt;</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(15, 43, 61);"">&lt;/</span><span class=""token"" style=""color: navy;"">html</span><span class=""token"" style=""color: rgb(15, 43, 61);"">&gt;</span></code></div></div></pre></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Before we proceed, let\'s make sure we have the same setup. Check off each of the following:</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">I have an <code class=""chakra-code css-1u83yg1"">index.html</code> file with the starter code from above</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">I have an <code class=""chakra-code css-1u83yg1"">app.css</code> file inside a <code class=""chakra-code css-1u83yg1"">css</code> directory</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">I have an <code class=""chakra-code css-1u83yg1"">app.js</code> file inside a <code class=""chakra-code css-1u83yg1"">js</code> directory</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">all files have been saved</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">all files have been staged and committed to the repository</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">the current branch is the <code class=""chakra-code css-1u83yg1"">master</code> branch</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">I have deleted all other branches</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">the output from running <code class=""chakra-code css-1u83yg1"">git status</code> on the command line includes the text <code class=""chakra-code css-1u83yg1"">working directory clean</code></p></div>', '<div class=""ureact-markdown css-tc5hjw""><h2 class=""chakra-heading css-fz7yxd"">The Game Plan</h2>\n<p class=""chakra-text css-o3oz8b"">Right now we have all of our code on the <code class=""chakra-code css-1u83yg1"">master</code> branch (which is the default branch). We\'re about to work with branches, by:</p>\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp"">adding content to them</li><li class=""css-cvpopp"">creating new branches</li><li class=""css-cvpopp"">switching back and forth between them</li></ul>\n<p class=""chakra-text css-o3oz8b"">Let\'s use branches to make the following changes:</p>\n<ol role=""list"" class=""css-13a5a39""><li class=""css-cvpopp"">on the master branch - add a default color to the page</li></ol>\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp"">create a sidebar branch - create a sidebar for the page</li><li class=""css-cvpopp"">on the master branch - change the heading of the page</li><li class=""css-cvpopp"">on the sidebar branch - add more content to the sidebar</li><li class=""css-cvpopp"">create a footer branch - add social links to the footer</li></ul></div>', '<div class=""ureact-markdown css-tc5hjw""><h2 class=""chakra-heading css-fz7yxd"">Change 1 - Add Page Color</h2>\n<p class=""chakra-text css-o3oz8b"">Make sure you\'re on the <code class=""chakra-code css-1u83yg1"">master</code> branch and add the following content to <code class=""chakra-code css-1u83yg1"">css/app.css</code>:</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-css"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span class=""token"" style=""color: navy;"">body</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">{</span><span>\n</span><span>    </span><span class=""token"" style=""color: rgb(2, 124, 124);"">background-color</span><span class=""token"" style=""color: rgb(15, 43, 61);"">:</span><span> </span><span class=""token hexcode color"">#00cae4</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(15, 43, 61);"">}</span></code></div></div></pre>\n<p class=""chakra-text css-o3oz8b"">Save the file. Then add the file to the staging index and commit it to the repository.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><em class=""chakra-text css-o3oz8b"">The Terminal application showing the output of the <code class=""chakra-code css-1u83yg1"">git log --oneline --decorate</code> command. The most-recent commit adds a default background color to the page.</em></p></div>', '<div class=""ureact-markdown css-tc5hjw""><h2 class=""chakra-heading css-fz7yxd"">Change 2 - Add Sidebar</h2>\n<p class=""chakra-text css-o3oz8b"">Let\'s add a sidebar to the page. But let\'s say that we\'re not really sure if we like the new background color. So we\'ll place the sidebar branch on the commit <em class=""chakra-text css-o3oz8b"">before</em> the one that sets the page\'s color. Your SHAs will be different, but, for me, the commit that\'s before the one that adds the color has a SHA of <code class=""chakra-code css-1u83yg1"">5bfe5e7</code>. So adding the branch to that commit would look like:</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-bash"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span>$ </span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">git</span><span> branch sidebar 5bfe5e7</span></code></div></div></pre>\n<p class=""chakra-text css-o3oz8b"">Now use the <code class=""chakra-code css-1u83yg1"">git checkout</code> command to switch to the new <code class=""chakra-code css-1u83yg1"">sidebar</code> branch. Running a <code class=""chakra-code css-1u83yg1"">git log --oneline --decorate</code> shows me:</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><em class=""chakra-text css-o3oz8b"">The Terminal application showing the output of <code class=""chakra-code css-1u83yg1"">git log --oneline --decorate</code>. The output does <em class=""chakra-text css-o3oz8b"">NOT</em> include the <code class=""chakra-code css-1u83yg1"">master</code> branch - it has disappeared.</em></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Did you notice that the <code class=""chakra-code css-1u83yg1"">master</code> branch does not display in the output? Where did it go!?! Is it lost? Don\'t worry, it\'s still there, we\'ll see how to get it to display in just a second.</p>\n<p class=""chakra-text css-o3oz8b"">But first, in your code editor, switch to the <code class=""chakra-code css-1u83yg1"">app.css</code> file. Notice that it does not have the CSS we previously entered! Because of this, if you load the project up in the browser, the page won\'t have a colored background. This makes sense since the CSS file is empty, but do you know why?</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Thinking back to the branching repository video from the previous lesson, why would the CSS file be empty?</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">The content has been erased.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">The content is stored safely on another branch.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">The content is in a temporary file that needs to be saved.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">A bear ate it.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Create a sidebar by adding the following <code class=""chakra-code css-1u83yg1"">&lt;aside&gt;</code> code to the HTML file:</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-html"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span class=""token"" style=""color: rgb(15, 43, 61);"">&lt;</span><span class=""token"" style=""color: navy;"">div</span><span class=""token"" style=""color: navy;""> </span><span class=""token"" style=""color: rgb(2, 124, 124);"">class</span><span class=""token attr-equals"" style=""color: rgb(15, 43, 61);"">=</span><span class=""token"" style=""color: rgb(15, 43, 61);"">""</span><span class=""token"" style=""color: rgb(221, 17, 68);"">container</span><span class=""token"" style=""color: rgb(15, 43, 61);"">""</span><span class=""token"" style=""color: rgb(15, 43, 61);"">&gt;</span><span>\n</span><span>    </span><span class=""token"" style=""color: rgb(15, 43, 61);"">&lt;</span><span class=""token"" style=""color: navy;"">main</span><span class=""token"" style=""color: rgb(15, 43, 61);"">&gt;</span><span>\n</span>\n<span>    </span><span class=""token"" style=""color: rgb(15, 43, 61);"">&lt;/</span><span class=""token"" style=""color: navy;"">main</span><span class=""token"" style=""color: rgb(15, 43, 61);"">&gt;</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(15, 43, 61);"">&lt;/</span><span class=""token"" style=""color: navy;"">div</span><span class=""token"" style=""color: rgb(15, 43, 61);"">&gt;</span><span>\n</span>\n<span></span><span class=""token"" style=""color: rgb(113, 113, 101); font-style: italic;"">&lt;!-- start of new content --&gt;</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(15, 43, 61);"">&lt;</span><span class=""token"" style=""color: navy;"">aside</span><span class=""token"" style=""color: rgb(15, 43, 61);"">&gt;</span><span>\n</span><span>    </span><span class=""token"" style=""color: rgb(15, 43, 61);"">&lt;</span><span class=""token"" style=""color: navy;"">h2</span><span class=""token"" style=""color: rgb(15, 43, 61);"">&gt;</span><span>About Me</span><span class=""token"" style=""color: rgb(15, 43, 61);"">&lt;/</span><span class=""token"" style=""color: navy;"">h2</span><span class=""token"" style=""color: rgb(15, 43, 61);"">&gt;</span><span>\n</span>\n<span>    </span><span class=""token"" style=""color: rgb(15, 43, 61);"">&lt;</span><span class=""token"" style=""color: navy;"">p</span><span class=""token"" style=""color: rgb(15, 43, 61);"">&gt;</span><span>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Eos, debitis earum molestias veniam suscipit aliquam totam exercitationem tempore neque vitae. Minima, corporis pariatur facere at quo porro beatae similique! Odit.</span><span class=""token"" style=""color: rgb(15, 43, 61);"">&lt;/</span><span class=""token"" style=""color: navy;"">p</span><span class=""token"" style=""color: rgb(15, 43, 61);"">&gt;</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(15, 43, 61);"">&lt;/</span><span class=""token"" style=""color: navy;"">aside</span><span class=""token"" style=""color: rgb(15, 43, 61);"">&gt;</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(113, 113, 101); font-style: italic;"">&lt;!-- end of new content --&gt;</span><span>\n</span>\n<span></span><span class=""token"" style=""color: rgb(15, 43, 61);"">&lt;</span><span class=""token"" style=""color: navy;"">footer</span><span class=""token"" style=""color: rgb(15, 43, 61);"">&gt;</span><span>\n</span>    Made with ♥ @ Udacity\n<span></span><span class=""token"" style=""color: rgb(15, 43, 61);"">&lt;/</span><span class=""token"" style=""color: navy;"">footer</span><span class=""token"" style=""color: rgb(15, 43, 61);"">&gt;</span></code></div></div></pre>\n<p class=""chakra-text css-o3oz8b"">I added my <code class=""chakra-code css-1u83yg1"">&lt;aside&gt;</code> content next to the <code class=""chakra-code css-1u83yg1"">&lt;main&gt;</code> element as a fellow child of the <code class=""chakra-code css-1u83yg1"">&lt;div class=""container""&gt;</code> element.</p>\n<p class=""chakra-text css-o3oz8b"">Feel free to add any content inside the <code class=""chakra-code css-1u83yg1"">&lt;aside&gt;</code> element!</p></div>', '<div class=""ureact-markdown css-tc5hjw""><blockquote class=""css-6jmydm"">\n<h2 class=""chakra-heading css-fz7yxd"">⚠️ Don\'t Change the CSS</h2>\n</blockquote>\n<blockquote class=""css-6jmydm"">\n<p class=""chakra-text css-o3oz8b"">WARNING: It\'s very important that you <em class=""chakra-text css-o3oz8b""><em class=""chakra-text css-o3oz8b"">do not change the CSS file</em></em>.</p>\n</blockquote>\n<blockquote class=""css-6jmydm"">\n<p class=""chakra-text css-o3oz8b"">We\'ll change it later, but if you make a change right now, we\'ll end up having what\'s known as a ""merge conflict"". We\'ll manually cause a merge conflict in a bit, but we don\'t want to have one right now, so just don\'t make any changes to the CSS file, yet.</p>\n</blockquote></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">We\'re done with this step, so it\'s time to commit the changes.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">I\'ve saved <code class=""chakra-code css-1u83yg1"">index.html</code></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">I\'ve staged <code class=""chakra-code css-1u83yg1"">index.html</code></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">I\'ve committed <code class=""chakra-code css-1u83yg1"">index.html</code> to the repsitory</p></div>', '<div class=""ureact-markdown css-tc5hjw""><h2 class=""chakra-heading css-fz7yxd"">Change 3 - Change Heading On Master</h2>\n<p class=""chakra-text css-o3oz8b"">Let\'s switch back to the master branch and update the page heading.</p>\n<p class=""chakra-text css-o3oz8b"">Use the <code class=""chakra-code css-1u83yg1"">git checkout</code> command to switch back to the <code class=""chakra-code css-1u83yg1"">master</code> branch. (Notice that the HTML for the new sidebar is no longer there(!) because all that code is stored safely on the <code class=""chakra-code css-1u83yg1"">sidebar</code> branch.)</p>\n<p class=""chakra-text css-o3oz8b"">Now change the <code class=""chakra-code css-1u83yg1"">&lt;h1&gt;</code> heading of the page from ""Expedition"" to something else. How about something exciting like the word ""Adventure""!?!</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Pop quiz time! How do you have Git show you the changes you\'ve saved, but not yet committed?</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">git show --diff</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">git log -p</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">git diff</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">git log --stat</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Now it\'s time to save the <code class=""chakra-code css-1u83yg1"">index.html</code> file and make a commit to add this change to the repository. (I used the commit message ""Improve site heading for SEO"", but see if you can think of a better one)</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">I\'ve saved <code class=""chakra-code css-1u83yg1"">index.html</code></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">I\'ve staged <code class=""chakra-code css-1u83yg1"">index.html</code></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">I\'ve committed <code class=""chakra-code css-1u83yg1"">index.html</code> to the repsitory</p></div>', '<div class=""ureact-markdown css-tc5hjw""><h2 class=""chakra-heading css-fz7yxd"">Change 4 - Add More Content To Sidebar</h2>\n<p class=""chakra-text css-o3oz8b"">Switch back to the <code class=""chakra-code css-1u83yg1"">sidebar</code> branch (notice, again, that content we\'ve added to the <code class=""chakra-code css-1u83yg1"">master</code> branch isn\'t visible on the <code class=""chakra-code css-1u83yg1"">sidebar</code> branch).</p>\n<p class=""chakra-text css-o3oz8b"">Now just add some content inside the <code class=""chakra-code css-1u83yg1"">&lt;aside&gt;</code> element. Add something about yourself - your favorite movie or book (my favorite is LOTR!). Anything will work, you just need to add some content.</p>\n<p class=""chakra-text css-o3oz8b"">Again, make sure that you do not make changes to the CSS file.</p>\n<p class=""chakra-text css-o3oz8b"">Now save the <code class=""chakra-code css-1u83yg1"">index.html</code> file and make a commit.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><h2 class=""chakra-heading css-fz7yxd"">Change 5 - Add Social Links To Footer</h2>\n<p class=""chakra-text css-o3oz8b"">We\'ve made a number of changes, and we\'re about to make our last one. Let\'s add some social icons to the page\'s footer. For grins and giggles, let\'s make this change on a new footer branch that\'s based off the <code class=""chakra-code css-1u83yg1"">master</code> branch. So we need to create a new <code class=""chakra-code css-1u83yg1"">footer</code> branch, first.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><blockquote class=""css-6jmydm"">\n<h2 class=""chakra-heading css-fz7yxd"">💡 Switch and Create Branch In One Command💡</h2>\n</blockquote>\n<blockquote class=""css-6jmydm"">\n<p class=""chakra-text css-o3oz8b"">The way we currently work with branches is to create a branch with the <code class=""chakra-code css-1u83yg1"">git branch</code> command and then switch to that newly created branch with the <code class=""chakra-code css-1u83yg1"">git checkout</code> command.</p>\n</blockquote>\n<blockquote class=""css-6jmydm"">\n<p class=""chakra-text css-o3oz8b"">But did you know that the <code class=""chakra-code css-1u83yg1"">git checkout</code> command can actually create a new branch, too? If you provide the <code class=""chakra-code css-1u83yg1"">-b</code> flag, you can create a branch <em class=""chakra-text css-o3oz8b"">and</em> switch to it all in one command.</p>\n</blockquote>\n<blockquote class=""css-6jmydm"">\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-bash"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span>$ </span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">git</span><span> checkout -b richards-branch-for-awesome-changes</span></code></div></div></pre>\n</blockquote>\n<blockquote class=""css-6jmydm"">\n<p class=""chakra-text css-o3oz8b"">It\'s a pretty useful command, and I use it often.</p>\n</blockquote></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Let\'s use this new feature of the <code class=""chakra-code css-1u83yg1"">git checkout</code> command to create our new <code class=""chakra-code css-1u83yg1"">footer</code> branch and have this footer branch start at the same location as the master branch:</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-bash"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span>$ </span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">git</span><span> checkout -b footer master</span></code></div></div></pre>\n<p class=""chakra-text css-o3oz8b"">Now if we run a quick <code class=""chakra-code css-1u83yg1"">git log --oneline --decorate</code>, we should see (your commit messages might be different):</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><em class=""chakra-text css-o3oz8b"">The Terminal application showing the output of <code class=""chakra-code css-1u83yg1"">git log --oneline --decorate</code>. The special <code class=""chakra-code css-1u83yg1"">HEAD</code> pointer is pointing at the <code class=""chakra-code css-1u83yg1"">footer</code> branch. The <code class=""chakra-code css-1u83yg1"">footer</code> branch is on the same commit as the ""master"" branch.</em></p></div>', '<div class=""ureact-markdown css-tc5hjw""><h3 class=""chakra-heading css-k57syw"">Add Social Links</h3>\n<p class=""chakra-text css-o3oz8b"">Now that we\'re on a new branch, let\'s add some social links to the page\'s footer. I\'ve added the following content:</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-html"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span class=""token"" style=""color: rgb(15, 43, 61);"">&lt;</span><span class=""token"" style=""color: navy;"">footer</span><span class=""token"" style=""color: rgb(15, 43, 61);"">&gt;</span><span>\n</span><span>    </span><span class=""token"" style=""color: rgb(113, 113, 101); font-style: italic;"">&lt;!-- start of new content --&gt;</span><span>\n</span><span>    </span><span class=""token"" style=""color: rgb(15, 43, 61);"">&lt;</span><span class=""token"" style=""color: navy;"">section</span><span class=""token"" style=""color: rgb(15, 43, 61);"">&gt;</span><span>\n</span><span>        </span><span class=""token"" style=""color: rgb(15, 43, 61);"">&lt;</span><span class=""token"" style=""color: navy;"">h3</span><span class=""token"" style=""color: navy;""> </span><span class=""token"" style=""color: rgb(2, 124, 124);"">class</span><span class=""token attr-equals"" style=""color: rgb(15, 43, 61);"">=</span><span class=""token"" style=""color: rgb(15, 43, 61);"">""</span><span class=""token"" style=""color: rgb(221, 17, 68);"">visuallyhidden</span><span class=""token"" style=""color: rgb(15, 43, 61);"">""</span><span class=""token"" style=""color: rgb(15, 43, 61);"">&gt;</span><span>Social Links</span><span class=""token"" style=""color: rgb(15, 43, 61);"">&lt;/</span><span class=""token"" style=""color: navy;"">h3</span><span class=""token"" style=""color: rgb(15, 43, 61);"">&gt;</span><span>\n</span><span>        </span><span class=""token"" style=""color: rgb(15, 43, 61);"">&lt;</span><span class=""token"" style=""color: navy;"">a</span><span class=""token"" style=""color: navy;""> </span><span class=""token"" style=""color: rgb(2, 124, 124);"">class</span><span class=""token attr-equals"" style=""color: rgb(15, 43, 61);"">=</span><span class=""token"" style=""color: rgb(15, 43, 61);"">""</span><span class=""token"" style=""color: rgb(221, 17, 68);"">social-link</span><span class=""token"" style=""color: rgb(15, 43, 61);"">""</span><span class=""token"" style=""color: navy;""> </span><span class=""token"" style=""color: rgb(2, 124, 124);"">href</span><span class=""token attr-equals"" style=""color: rgb(15, 43, 61);"">=</span><span class=""token"" style=""color: rgb(15, 43, 61);"">""</span><span class=""token"" style=""color: rgb(221, 17, 68);"">https://twitter.com/udacity</span><span class=""token"" style=""color: rgb(15, 43, 61);"">""</span><span class=""token"" style=""color: rgb(15, 43, 61);"">&gt;</span><span>\n</span><span>            </span><span class=""token"" style=""color: rgb(15, 43, 61);"">&lt;</span><span class=""token"" style=""color: navy;"">img</span><span class=""token"" style=""color: navy;""> </span><span class=""token"" style=""color: rgb(2, 124, 124);"">src</span><span class=""token attr-equals"" style=""color: rgb(15, 43, 61);"">=</span><span class=""token"" style=""color: rgb(15, 43, 61);"">""</span><span class=""token"" style=""color: rgb(221, 17, 68);"">img/social-twitter.png</span><span class=""token"" style=""color: rgb(15, 43, 61);"">""</span><span class=""token"" style=""color: navy;""> </span><span class=""token"" style=""color: rgb(2, 124, 124);"">alt</span><span class=""token attr-equals"" style=""color: rgb(15, 43, 61);"">=</span><span class=""token"" style=""color: rgb(15, 43, 61);"">""</span><span class=""token"" style=""color: rgb(221, 17, 68);"">Twitter</span><span class=""token"" style=""color: rgb(15, 43, 61);"">""</span><span class=""token"" style=""color: rgb(15, 43, 61);"">&gt;</span><span>\n</span><span>        </span><span class=""token"" style=""color: rgb(15, 43, 61);"">&lt;/</span><span class=""token"" style=""color: navy;"">a</span><span class=""token"" style=""color: rgb(15, 43, 61);"">&gt;</span><span>\n</span><span>        </span><span class=""token"" style=""color: rgb(15, 43, 61);"">&lt;</span><span class=""token"" style=""color: navy;"">a</span><span class=""token"" style=""color: navy;""> </span><span class=""token"" style=""color: rgb(2, 124, 124);"">class</span><span class=""token attr-equals"" style=""color: rgb(15, 43, 61);"">=</span><span class=""token"" style=""color: rgb(15, 43, 61);"">""</span><span class=""token"" style=""color: rgb(221, 17, 68);"">social-link</span><span class=""token"" style=""color: rgb(15, 43, 61);"">""</span><span class=""token"" style=""color: navy;""> </span><span class=""token"" style=""color: rgb(2, 124, 124);"">href</span><span class=""token attr-equals"" style=""color: rgb(15, 43, 61);"">=</span><span class=""token"" style=""color: rgb(15, 43, 61);"">""</span><span class=""token"" style=""color: rgb(221, 17, 68);"">https://www.instagram.com/udacity/</span><span class=""token"" style=""color: rgb(15, 43, 61);"">""</span><span class=""token"" style=""color: rgb(15, 43, 61);"">&gt;</span><span>\n</span><span>            </span><span class=""token"" style=""color: rgb(15, 43, 61);"">&lt;</span><span class=""token"" style=""color: navy;"">img</span><span class=""token"" style=""color: navy;""> </span><span class=""token"" style=""color: rgb(2, 124, 124);"">src</span><span class=""token attr-equals"" style=""color: rgb(15, 43, 61);"">=</span><span class=""token"" style=""color: rgb(15, 43, 61);"">""</span><span class=""token"" style=""color: rgb(221, 17, 68);"">img/social-instagram.png</span><span class=""token"" style=""color: rgb(15, 43, 61);"">""</span><span class=""token"" style=""color: navy;""> </span><span class=""token"" style=""color: rgb(2, 124, 124);"">alt</span><span class=""token attr-equals"" style=""color: rgb(15, 43, 61);"">=</span><span class=""token"" style=""color: rgb(15, 43, 61);"">""</span><span class=""token"" style=""color: rgb(221, 17, 68);"">Instagram</span><span class=""token"" style=""color: rgb(15, 43, 61);"">""</span><span class=""token"" style=""color: rgb(15, 43, 61);"">&gt;</span><span>\n</span><span>        </span><span class=""token"" style=""color: rgb(15, 43, 61);"">&lt;/</span><span class=""token"" style=""color: navy;"">a</span><span class=""token"" style=""color: rgb(15, 43, 61);"">&gt;</span><span>\n</span><span>        </span><span class=""token"" style=""color: rgb(15, 43, 61);"">&lt;</span><span class=""token"" style=""color: navy;"">a</span><span class=""token"" style=""color: navy;""> </span><span class=""token"" style=""color: rgb(2, 124, 124);"">class</span><span class=""token attr-equals"" style=""color: rgb(15, 43, 61);"">=</span><span class=""token"" style=""color: rgb(15, 43, 61);"">""</span><span class=""token"" style=""color: rgb(221, 17, 68);"">social-link</span><span class=""token"" style=""color: rgb(15, 43, 61);"">""</span><span class=""token"" style=""color: navy;""> </span><span class=""token"" style=""color: rgb(2, 124, 124);"">href</span><span class=""token attr-equals"" style=""color: rgb(15, 43, 61);"">=</span><span class=""token"" style=""color: rgb(15, 43, 61);"">""</span><span class=""token"" style=""color: rgb(221, 17, 68);"">https://plus.google.com/+Udacity</span><span class=""token"" style=""color: rgb(15, 43, 61);"">""</span><span class=""token"" style=""color: rgb(15, 43, 61);"">&gt;</span><span>\n</span><span>            </span><span class=""token"" style=""color: rgb(15, 43, 61);"">&lt;</span><span class=""token"" style=""color: navy;"">img</span><span class=""token"" style=""color: navy;""> </span><span class=""token"" style=""color: rgb(2, 124, 124);"">src</span><span class=""token attr-equals"" style=""color: rgb(15, 43, 61);"">=</span><span class=""token"" style=""color: rgb(15, 43, 61);"">""</span><span class=""token"" style=""color: rgb(221, 17, 68);"">img/social-google.png</span><span class=""token"" style=""color: rgb(15, 43, 61);"">""</span><span class=""token"" style=""color: navy;""> </span><span class=""token"" style=""color: rgb(2, 124, 124);"">alt</span><span class=""token attr-equals"" style=""color: rgb(15, 43, 61);"">=</span><span class=""token"" style=""color: rgb(15, 43, 61);"">""</span><span class=""token"" style=""color: rgb(221, 17, 68);"">Google Plus</span><span class=""token"" style=""color: rgb(15, 43, 61);"">""</span><span class=""token"" style=""color: rgb(15, 43, 61);"">&gt;</span><span>\n</span><span>        </span><span class=""token"" style=""color: rgb(15, 43, 61);"">&lt;/</span><span class=""token"" style=""color: navy;"">a</span><span class=""token"" style=""color: rgb(15, 43, 61);"">&gt;</span><span>\n</span><span>    </span><span class=""token"" style=""color: rgb(15, 43, 61);"">&lt;/</span><span class=""token"" style=""color: navy;"">section</span><span class=""token"" style=""color: rgb(15, 43, 61);"">&gt;</span><span>\n</span><span>    </span><span class=""token"" style=""color: rgb(113, 113, 101); font-style: italic;"">&lt;!-- end of new content --&gt;</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(15, 43, 61);"">&lt;/</span><span class=""token"" style=""color: navy;"">footer</span><span class=""token"" style=""color: rgb(15, 43, 61);"">&gt;</span></code></div></div></pre>\n<p class=""chakra-text css-o3oz8b"">Feel free to link to your own social accounts.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Now save the file and make a commit. (I used the commit message ""Add links to social media"", but definitely try coming up with a better one)</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">I\'ve saved <code class=""chakra-code css-1u83yg1"">index.html</code></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">I\'ve staged <code class=""chakra-code css-1u83yg1"">index.html</code></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">I\'ve committed <code class=""chakra-code css-1u83yg1"">index.html</code> to the repsitory</p></div>', '<div class=""ureact-markdown css-tc5hjw""><h2 class=""chakra-heading css-fz7yxd"">See All Branches At Once</h2>\n<p class=""chakra-text css-o3oz8b"">We\'ve made it to the end of all the changes we needed to make! Awesome job!</p>\n<p class=""chakra-text css-o3oz8b"">Now we have multiple sets of changes on three different branches. We can\'t see other branches in the <code class=""chakra-code css-1u83yg1"">git log</code> output unless we switch to a branch. Wouldn\'t it be nice if we could see <em class=""chakra-text css-o3oz8b"">all</em> branches at once in the <code class=""chakra-code css-1u83yg1"">git log</code> output.</p>\n<p class=""chakra-text css-o3oz8b"">As you\'ve hopefully learned by now, the <code class=""chakra-code css-1u83yg1"">git log</code> command is pretty powerful and <em class=""chakra-text css-o3oz8b"">can</em> show us this information. We\'ll use the new <code class=""chakra-code css-1u83yg1"">--graph</code> and <code class=""chakra-code css-1u83yg1"">--all</code> flags:</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-bash"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span>$ </span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">git</span><span> log --oneline --decorate --graph --all</span></code></div></div></pre>\n<p class=""chakra-text css-o3oz8b"">The <code class=""chakra-code css-1u83yg1"">--graph</code> flag adds the bullets and lines to the leftmost part of the output. This shows the actual <em class=""chakra-text css-o3oz8b"">branching</em> that\'s happening. The <code class=""chakra-code css-1u83yg1"">--all</code> flag is what displays <em class=""chakra-text css-o3oz8b"">all</em> of the branches in the repository.</p>\n<p class=""chakra-text css-o3oz8b"">Running this command will show all branches and commits in the repository:</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><em class=""chakra-text css-o3oz8b"">The Terminal application showing the output of <code class=""chakra-code css-1u83yg1"">git log --oneline --graph --decorate --all</code>. This shows all branches and therefore all commits in the repository.</em></p></div>', '<div class=""ureact-markdown css-tc5hjw""><h2 class=""chakra-heading css-fz7yxd"">Recap Of Changes</h2>\n<p class=""chakra-text css-o3oz8b"">We\'ve made the following changes:</p>\n<ol role=""list"" class=""css-13a5a39""><li class=""css-cvpopp"">on the master branch, we added a default color to the page</li></ol>\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp"">we created a sidebar branch and added code for a sidebar</li><li class=""css-cvpopp"">on the master branch, we changed the heading of the page</li><li class=""css-cvpopp"">on the sidebar branch, we added more content to the sidebar</li><li class=""css-cvpopp"">we created a footer branch and added social links to the footer</li></ul>\n<p class=""chakra-text css-o3oz8b"">These changes are all on their own, separate branches. Let\'s have Git combine these changes together. Combining branches together is called <strong>merging</strong>.</p></div>']","['https://video.udacity-data.com/topher/2017/February/58a4ce74_ud123-l5-changes-add-color/ud123-l5-changes-add-color.png', 'https://video.udacity-data.com/topher/2017/February/58a4cee4_ud123-l5-git-branch-sidebar/ud123-l5-git-branch-sidebar.png', 'https://video.udacity-data.com/topher/2017/February/58a4d41d_ud123-l5-git-checkout-b-footer-master/ud123-l5-git-checkout-b-footer-master.png', 'https://video.udacity-data.com/topher/2017/February/58a4d51e_ud123-l5-git-log-graph-all/ud123-l5-git-log-graph-all.png']",https://www.youtube.com/embed/Px6EUylw8Uw
Version Control with Git,Version Control with Git,"Lesson 5: Tagging, Branching, and Merging",5.5  Merging,"['<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Remember that the purpose of a topic branch (like <code class=""chakra-code css-1u83yg1"">sidebar</code>) is that it lets you make changes that do not affect the <code class=""chakra-code css-1u83yg1"">master</code> branch. Once you make changes on the topic branch, you can either decide that you don\'t like the changes on the branch and you can just delete that branch, or you can decide that you want to keep the changes on the topic branch and combine those changes in with those on another branch.</p>\n<p class=""chakra-text css-o3oz8b"">Combining branches together is called <strong>merging</strong>.</p>\n<p class=""chakra-text css-o3oz8b"">Git can automatically merge the changes on different branches together. This branching and merging ability is what makes Git <em class=""chakra-text css-o3oz8b"">incredibly powerful</em>! You can make small or extensive changes on branches, and then just use Git to combine those changes together.</p>\n<p class=""chakra-text css-o3oz8b"">Let\'s see how this works, in theory. Pay attention to the two main types of merges in Git, a regular <strong>merge</strong> and a <strong>Fast-forward merge</strong>.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Let\'s do a quick check-in to make sure we\'re both starting at the same point. Check off each of the following:</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">I am in the <code class=""chakra-code css-1u83yg1"">new-git-project</code> project</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">I have checked out the <code class=""chakra-code css-1u83yg1"">master</code> branch</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">the output of <code class=""chakra-code css-1u83yg1"">git status</code> includes the text <code class=""chakra-code css-1u83yg1"">working directory clean</code></p></div>', '<div class=""ureact-markdown css-tc5hjw""><blockquote class=""css-6jmydm"">\n<h2 class=""chakra-heading css-fz7yxd"">⚠️ Know The Branch ⚠️</h2>\n</blockquote>\n<blockquote class=""css-6jmydm"">\n<p class=""chakra-text css-o3oz8b"">It\'s very important to know which branch you\'re on when you\'re about to merge branches together. Remember that making a merge makes a commit.</p>\n</blockquote>\n<blockquote class=""css-6jmydm"">\n<p class=""chakra-text css-o3oz8b"">As of right now, we do not know how to <em class=""chakra-text css-o3oz8b"">undo</em> changes. We\'ll go over it in the next lesson, but if you make a merge on the wrong branch, use this command to undo the merge:</p>\n</blockquote>\n<blockquote class=""css-6jmydm"">\n<p class=""chakra-text css-o3oz8b""><code class=""chakra-code css-1u83yg1"">git reset --hard HEAD^</code></p>\n</blockquote>\n<blockquote class=""css-6jmydm"">\n<p class=""chakra-text css-o3oz8b"">(Make sure to include the <code class=""chakra-code css-1u83yg1"">^</code> character! It\'s a known as a ""Relative Commit Reference"" and indicates ""the parent commit"". We\'ll look at Relative Commit References in the next lesson.)</p>\n</blockquote></div>', '<div class=""ureact-markdown css-tc5hjw""><h2 class=""chakra-heading css-fz7yxd"">The Merge Command</h2>\n<p class=""chakra-text css-o3oz8b"">The <code class=""chakra-code css-1u83yg1"">git merge</code> command is used to combine Git branches:</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-bash"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span>$ </span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">git</span><span> merge </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">&lt;</span><span>name-of-branch-to-merge-in</span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">&gt;</span></code></div></div></pre>\n<p class=""chakra-text css-o3oz8b"">When a merge happens, Git will:</p>\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp"">look at the branches that it\'s going to merge</li><li class=""css-cvpopp"">look back along the branch\'s history to find a single commit that <em class=""chakra-text css-o3oz8b"">both</em> branches have in their commit history</li><li class=""css-cvpopp"">combine the lines of code that were changed on the separate branches together</li><li class=""css-cvpopp"">makes a commit to record the merge</li></ul></div>', '<div class=""ureact-markdown css-tc5hjw""><h3 class=""chakra-heading css-k57syw"">Fast-forward Merge</h3>\n<p class=""chakra-text css-o3oz8b"">In our project, I\'ve checked out the <code class=""chakra-code css-1u83yg1"">master</code> branch and I want <em class=""chakra-text css-o3oz8b"">it</em> to have the changes that are on the <code class=""chakra-code css-1u83yg1"">footer</code> branch. If I wanted to verbalize this, I could say this is - ""I want to merge in the <code class=""chakra-code css-1u83yg1"">footer</code> branch"". That ""merge in"" is important; when a merge is performed, the <em class=""chakra-text css-o3oz8b"">other</em> branch\'s changes are brought into the branch that\'s currently checked out.</p>\n<p class=""chakra-text css-o3oz8b"">Let me stress that again - When we merge, we\'re merging some other branch into the current (checked-out) branch. We\'re not merging two branches into a new branch. We\'re not merging the current branch into the other branch.</p>\n<p class=""chakra-text css-o3oz8b"">Now, since <code class=""chakra-code css-1u83yg1"">footer</code> is directly ahead of <code class=""chakra-code css-1u83yg1"">master</code>, this merge is one of the easiest merges to do. Merging <code class=""chakra-code css-1u83yg1"">footer</code> into <code class=""chakra-code css-1u83yg1"">master</code> will cause a <strong>Fast-forward merge</strong>. A Fast-forward merge will just move the currently checked out branch <em class=""chakra-text css-o3oz8b"">forward</em> until it points to the same commit that the other branch (in this case, <code class=""chakra-code css-1u83yg1"">footer</code>) is pointing to.</p>\n<p class=""chakra-text css-o3oz8b"">To merge in the <code class=""chakra-code css-1u83yg1"">footer</code> branch, run:</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-bash"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span>$ </span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">git</span><span> merge footer</span></code></div></div></pre>\n<p class=""chakra-text css-o3oz8b"">This is what my Terminal displays after running the command:</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><em class=""chakra-text css-o3oz8b"">The Terminal application showing the result of merging the <code class=""chakra-code css-1u83yg1"">footer</code> branch <em class=""chakra-text css-o3oz8b"">into</em> the <code class=""chakra-code css-1u83yg1"">master</code> branch.</em></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Take a look at the repository, again, now that you\'ve merged the two branches together. Do the <code class=""chakra-code css-1u83yg1"">master</code> branch and the <code class=""chakra-code css-1u83yg1"">footer</code> branch point to the same commit?</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Yes</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">No</p></div>', '<div class=""ureact-markdown css-tc5hjw""><h2 class=""chakra-heading css-fz7yxd"">Perform A Regular Merge</h2>\n<p class=""chakra-text css-o3oz8b"">Fantastic work doing a Fast-forward merge! That wasn\'t too hard, was it?</p>\n<p class=""chakra-text css-o3oz8b"">But you might say - ""Of course that was easy, all of the commits are already there and the branch pointer just moved forward!""...and you\'d be right. It\'s the simplest of merges.</p>\n<p class=""chakra-text css-o3oz8b"">So let\'s do the more common kind of merge where two <em class=""chakra-text css-o3oz8b"">divergent</em> branches are combined. You\'ll be surprised that to merge in a divergent branch like <code class=""chakra-code css-1u83yg1"">sidebar</code> is actually no different!</p>\n<p class=""chakra-text css-o3oz8b"">To merge in the <code class=""chakra-code css-1u83yg1"">sidebar</code> branch, make sure you\'re on the <code class=""chakra-code css-1u83yg1"">master</code> branch and run:</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-bash"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span>$ </span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">git</span><span> merge sidebar</span></code></div></div></pre>\n<p class=""chakra-text css-o3oz8b"">Because this combines two divergent branches, a commit is going to be made. And when a commit is made, a commit message needs to be supplied. Since this is a <em class=""chakra-text css-o3oz8b"">merge commit</em> a default message is already supplied. You can change the message if you want, but it\'s common practice to use the default merge commit message. So when your code editor opens with the message, just close it again and accept that commit message.</p>\n<p class=""chakra-text css-o3oz8b"">This is what my Terminal shows after using the default commit message:</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><em class=""chakra-text css-o3oz8b"">The Terminal application showing the result of merging the <code class=""chakra-code css-1u83yg1"">sidebar</code> branch.</em></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Aaaand that\'s all there is to merging! It\'s pretty simple, isn\'t it? You might read a lot of material that makes branching and merging seem overly complicated, but it\'s really not too bad at all.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">How about a quick quiz to see if you\'re following along with how merging works.</p>\n<p class=""chakra-text css-o3oz8b"">Let\'s say a repository has 4 branches in it:</p>\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp"">master</li><li class=""css-cvpopp"">allisons-mobile-footer-fix</li><li class=""css-cvpopp"">nav-updates</li><li class=""css-cvpopp"">jonathans-seo-changes</li></ul>\n<p class=""chakra-text css-o3oz8b"">The changes on <code class=""chakra-code css-1u83yg1"">master</code> and <code class=""chakra-code css-1u83yg1"">allisons-mobile-footer-fix</code> need to be merged together. If HEAD points to <code class=""chakra-code css-1u83yg1"">allisons-mobile-footer-fix</code>, which branch will move when the merge is performed?</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">master</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">allisons-mobile-footer-fix</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">nav-updates</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">jonathans-seo-changes</p></div>', '<div class=""ureact-markdown css-tc5hjw""><h2 class=""chakra-heading css-fz7yxd"">What If A Merge Fails?</h2>\n<p class=""chakra-text css-o3oz8b"">The merges we just did were able to merge successfully. Git is able to intelligently combine lots of work on different branches. However, there are times when it can\'t combine branches together. When a merge is performed and fails, that is called a <strong>merge conflict</strong>. We\'ll look at merge conflicts, what causes them, and how to resolve them in the next lesson.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><h2 class=""chakra-heading css-fz7yxd"">Merge Recap</h2>\n<p class=""chakra-text css-o3oz8b"">To recap, the <code class=""chakra-code css-1u83yg1"">git merge</code> command is used to combine branches in Git:</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-bash"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span>$ </span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">git</span><span> merge </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">&lt;</span><span>other-branch</span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">&gt;</span></code></div></div></pre>\n<p class=""chakra-text css-o3oz8b"">There are two types of merges:</p>\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp"">Fast-forward merge – the branch being merged in must be <em class=""chakra-text css-o3oz8b"">ahead</em> of the checked out branch. The checked out branch\'s pointer will just be moved forward to point to the same commit as the other branch.</li><li class=""css-cvpopp"">the regular type of merge\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp"">two divergent branches are combined</li><li class=""css-cvpopp"">a merge commit is created</li></ul>\n</li></ul>\n<h3 class=""chakra-heading css-k57syw"">Further Research</h3>\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://git-scm.com/book/en/v2/Git-Branching-Basic-Branching-and-Merging#Basic-Merging"">Basic Merging<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a> from Git Book</li><li class=""css-cvpopp""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://git-scm.com/docs/git-merge"">git-merge<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a> from Git Docs</li><li class=""css-cvpopp""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://www.atlassian.com/git/tutorials/git-merge"">git merge<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a> from Atlassian blog</li></ul></div>']",['https://video.udacity-data.com/topher/2017/February/58a4d84e_ud123-l5-git-merge-sidebar/ud123-l5-git-merge-sidebar.png'],https://www.youtube.com/embed/gQiWicrreJg
Version Control with Git,Version Control with Git,"Lesson 5: Tagging, Branching, and Merging",5.6  Merge Conflicts,"['<div class=""ureact-markdown css-tc5hjw""><h2 class=""chakra-heading css-fz7yxd"">Sometimes Merges Fail</h2>\n<p class=""chakra-text css-o3oz8b"">Most of the time Git will be able to merge branches together without any problem. However, there are instances when a merge cannot be <em class=""chakra-text css-o3oz8b"">fully</em> performed automatically. When a merge fails, it\'s called a <strong>merge conflict</strong>.</p>\n<p class=""chakra-text css-o3oz8b"">If a merge conflict does occur, Git will try to combine as much as it can, but then it will leave special markers (e.g. <code class=""chakra-code css-1u83yg1"">&gt;&gt;&gt;</code> and <code class=""chakra-code css-1u83yg1"">&lt;&lt;&lt;</code>) that tell you where you (yep, you the programmer!) needs to manually fix.</p>\n<h3 class=""chakra-heading css-k57syw"">What Causes A Merge Conflict</h3>\n<p class=""chakra-text css-o3oz8b"">As you\'ve learned, Git tracks <em class=""chakra-text css-o3oz8b"">lines</em> in files. A merge conflict will happen when <em class=""chakra-text css-o3oz8b"">the exact same line(s)</em> are changed in separate branches. For example, if you\'re on a <code class=""chakra-code css-1u83yg1"">alternate-sidebar-style</code> branch and change the sidebar\'s heading to ""About Me"" but then on a different branch and change the sidebar\'s heading to ""Information About Me"", which heading should Git choose? You\'ve changed the heading on both branches, so there\'s no way Git will know which one you actually want to keep. And it sure isn\'t going to just randomly pick for you!</p>\n<p class=""chakra-text css-o3oz8b"">Let\'s force a merge conflict so we can learn to resolve it. Trust me, it\'s simple once you get the hang of it! Remember that a merge conflict occurs when Git isn\'t sure which line(s) you want to use from the branches that are being merged. So we need to edit <em class=""chakra-text css-o3oz8b"">the same line on two different branches</em>...and then try to merge them.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><h2 class=""chakra-heading css-fz7yxd"">Forcing A Merge Conflict!</h2>\n<p class=""chakra-text css-o3oz8b"">Remember that a merge conflict occurs when <em class=""chakra-text css-o3oz8b"">the exact same line(s) are changed in separate branches</em>. Let\'s alter the page\'s heading on two different branches. So Let\'s:</p>\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp"">change the heading on the <code class=""chakra-code css-1u83yg1"">master</code> branch</li><li class=""css-cvpopp"">create a <code class=""chakra-code css-1u83yg1"">heading-update</code> branch <em class=""chakra-text css-o3oz8b"">that\'s located on the commit right before the recently modified <code class=""chakra-code css-1u83yg1"">master</code> branch</em></li><li class=""css-cvpopp"">change the <em class=""chakra-text css-o3oz8b"">same</em> heading</li><li class=""css-cvpopp"">switch back to the <code class=""chakra-code css-1u83yg1"">master</code> branch</li><li class=""css-cvpopp"">merge in the <code class=""chakra-code css-1u83yg1"">heading-update</code> branch</li></ul></div>', '<div class=""ureact-markdown css-tc5hjw""><h2 class=""chakra-heading css-fz7yxd"">Change Heading On Branch 1</h2>\n<p class=""chakra-text css-o3oz8b"">Since the <code class=""chakra-code css-1u83yg1"">master</code> branch is just a regular ol\' branch like all the rest, let\'s just alter the heading while we\'re on the <code class=""chakra-code css-1u83yg1"">master</code> branch. So change the <code class=""chakra-code css-1u83yg1"">&lt;h1&gt;</code> heading from whatever you have it to something else. For me, the heading is currently ""Adventure"" on line 13, and I\'m changing it to ""Quest"".</p>\n<p class=""chakra-text css-o3oz8b"">Once you\'ve made the change, save the file and commit it to the repository.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><h2 class=""chakra-heading css-fz7yxd"">Change Heading On Branch 2</h2>\n<p class=""chakra-text css-o3oz8b"">Now we need to create a different branch and update the heading on that branch.</p>\n<p class=""chakra-text css-o3oz8b"">Now this is important, we need to create a branch that\'s <em class=""chakra-text css-o3oz8b"">not branching from the master branch</em>. If we make a change that branches <em class=""chakra-text css-o3oz8b"">off</em> of the master branch, then <em class=""chakra-text css-o3oz8b"">that</em> change will be ""ahead"" of this one and Git will just use that change instead of the one we just made on <code class=""chakra-code css-1u83yg1"">master</code>. So we need to put the branch ""in the past"".</p>\n<p class=""chakra-text css-o3oz8b"">Let\'s just create a branch that\'s on the commit right <em class=""chakra-text css-o3oz8b"">before</em> the most recent one. So use Git log to get the previous commit\'s SHA and create a branch on that commit. Here\'s what my Git log looks like after creating a <code class=""chakra-code css-1u83yg1"">heading-update</code> branch:</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><em class=""chakra-text css-o3oz8b"">The Terminal application showing the output of <code class=""chakra-code css-1u83yg1"">git log --oneline --decorate --graph --all</code>. The <code class=""chakra-code css-1u83yg1"">heading-update</code> branch is currently checked out.</em></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Ok, now that we\'ve got our branch created, we just need to update the heading, again. Now make sure you change <em class=""chakra-text css-o3oz8b"">the exact same line</em> that you changed on the <code class=""chakra-code css-1u83yg1"">master</code> branch. I\'m changing ""Adventure"" on line 13 to ""Crusade"".</p>\n<p class=""chakra-text css-o3oz8b"">Then save the file and commit it to the repository.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><em class=""chakra-text css-o3oz8b"">The Terminal application showing the output of <code class=""chakra-code css-1u83yg1"">git log --oneline --decorate --graph --all</code>. Both the <code class=""chakra-code css-1u83yg1"">master</code> branch and the <code class=""chakra-code css-1u83yg1"">heading-update</code> branch alter the same line of the same file.</em></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Ok, we\'re just about to cause a merge conflict, make sure you\'re at the same place I am:</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">I\'ve made a commit on the <code class=""chakra-code css-1u83yg1"">master</code> branch that changes the heading</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">I\'ve made a commit on the <code class=""chakra-code css-1u83yg1"">heading-update</code> branch that <em class=""chakra-text css-o3oz8b"">also</em> changes the heading</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">I am currently on the <code class=""chakra-code css-1u83yg1"">master</code> branch</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Make sure you\'re on the master branch (we could really do this on either branch, but I just have a habit of keeping the <code class=""chakra-code css-1u83yg1"">master</code> branch the main one that other topic branches get merged into) and merge in the <code class=""chakra-code css-1u83yg1"">heading-update</code> branch:</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-bash"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span>$ </span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">git</span><span> merge heading-update</span></code></div></div></pre>\n<p class=""chakra-text css-o3oz8b"">You should see the following:</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><em class=""chakra-text css-o3oz8b"">The Terminal application showing the output of a merge that resulted in a merge conflict. The word ""CONFLICT"" appears and says that the conflict occurred in the index.html file.</em></p></div>', '<div class=""ureact-markdown css-tc5hjw""><h2 class=""chakra-heading css-fz7yxd"">Merge Conflict Output Explained</h2>\n<p class=""chakra-text css-o3oz8b"">The output that shows in the Terminal is:</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-bash"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span>$ </span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">git</span><span> merge heading-update \n</span>Auto-merging index.html\n<span>CONFLICT </span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span>content</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span>: Merge conflict </span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">in</span><span> index.html\n</span><span>Automatic merge failed</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span> fix conflicts and </span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">then</span><span> commit the result.</span></code></div></div></pre>\n<p class=""chakra-text css-o3oz8b"">Notice that right after the <code class=""chakra-code css-1u83yg1"">git merge heading-update</code> command, it tries merging the file that was changed on both branches (<code class=""chakra-code css-1u83yg1"">index.html</code>), but that there was a conflict. Also, notice that it tells you what happened - ""Automatic merge failed; fix conflicts and then commit the result"".</p>\n<p class=""chakra-text css-o3oz8b"">Remember our good friend <code class=""chakra-code css-1u83yg1"">git status</code>? Well he\'ll come in really handy when working with merge conflicts.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Try running <code class=""chakra-code css-1u83yg1"">git status</code> right now. Which of the following information does it show?</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">You have unmerged paths</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Unmerged paths</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">fix conflicts and run ""git commit""</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">use ""git add ..."" to mark resolution</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">The <code class=""chakra-code css-1u83yg1"">git status</code> output tells us to that the merge conflict is inside <code class=""chakra-code css-1u83yg1"">index.html</code>. So check out that file in your code editor!</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><em class=""chakra-text css-o3oz8b"">Code editor showing the merge conflict indicators.</em></p></div>', '<div class=""ureact-markdown css-tc5hjw""><h2 class=""chakra-heading css-fz7yxd"">Merge Conflict Indicators Explanation</h2>\n<p class=""chakra-text css-o3oz8b"">The editor has the following merge conflict indicators:</p>\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp""><code class=""chakra-code css-1u83yg1"">&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD</code> everything below this line (until the next indicator) shows you what\'s on the current branch</li><li class=""css-cvpopp""><code class=""chakra-code css-1u83yg1"">||||||| merged common ancestors</code> everything below this line (until the next indicator) shows you what the original lines were</li><li class=""css-cvpopp""><code class=""chakra-code css-1u83yg1"">=======</code> is the end of the original lines, everything that follows (until the next indicator) is what\'s on the branch that\'s being merged in</li><li class=""css-cvpopp""><code class=""chakra-code css-1u83yg1"">&gt;&gt;&gt;&gt;&gt;&gt;&gt; heading-update</code> is the ending indicator of what\'s on the branch that\'s being merged in (in this case, the <code class=""chakra-code css-1u83yg1"">heading-update</code> branch)</li></ul></div>', '<div class=""ureact-markdown css-tc5hjw""><h2 class=""chakra-heading css-fz7yxd"">Resolving A Merge Conflict</h2>\n<p class=""chakra-text css-o3oz8b"">Git is using the merge conflict indicators to show you what lines caused the merge conflict on the two different branches as well as what the original line used to have. So to resolve a merge conflict, you need to:</p>\n<ol role=""list"" class=""css-13a5a39""><li class=""css-cvpopp"">choose which line(s) to keep</li></ol>\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp"">remove all lines with indicators</li></ul>\n<p class=""chakra-text css-o3oz8b"">For some reason, I\'m not happy with the word ""Crusade"" right now, but ""Quest"" isn\'t all that exciting either. How about ""Adventurous Quest"" as a heading?!?</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><em class=""chakra-text css-o3oz8b"">Code editor where showing the merge conflict indicators being removed and the page heading being updated.</em></p></div>', '<div class=""ureact-markdown css-tc5hjw""><h2 class=""chakra-heading css-fz7yxd"">Commit Merge Conflict</h2>\n<p class=""chakra-text css-o3oz8b"">Once you\'ve removed all lines with merge conflict indicators and have selected what heading you want to use, just save the file, add it to the staging index, and commit it! Just like with a regular merge, this will pop open your code editor for you to supply a commit message. Just like before, it\'s common to use the provided merge commit message, so after the editor opens, just close it to use the provided commit message.</p>\n<p class=""chakra-text css-o3oz8b"">And that\'s it! Merge conflicts really aren\'t all that challenging once you understand what the merge conflict indicators are showing you.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">You\'ve made numerous commits so far in your exploration of Git. If a merge conflict occurs in a file and you edit the file, save it, stage it, and commit it but <em class=""chakra-text css-o3oz8b"">forget</em> to remove the merge conflict indicators, will Git commit the file?</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Yes</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">No</p></div>', '<div class=""ureact-markdown css-tc5hjw""><h2 class=""chakra-heading css-fz7yxd"">Merge Conflict Recap</h2>\n<p class=""chakra-text css-o3oz8b"">A merge conflict happens when the same line or lines have been changed on different branches that are being merged. Git will pause mid-merge telling you that there is a conflict and will tell you in what file or files the conflict occurred. To resolve the conflict in a file:</p>\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp"">locate and remove all lines with merge conflict indicators</li><li class=""css-cvpopp"">determine what to keep</li><li class=""css-cvpopp"">save the file(s)</li><li class=""css-cvpopp"">stage the file(s)</li><li class=""css-cvpopp"">make a commit</li></ul>\n<p class=""chakra-text css-o3oz8b"">Be careful that a file might have merge conflicts in multiple parts of the file, so make sure you check the entire file for merge conflict indicators - a quick search for <code class=""chakra-code css-1u83yg1"">&lt;&lt;&lt;</code> should help you locate all of them.</p>\n<h3 class=""chakra-heading css-k57syw"">Further Research</h3>\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://git-scm.com/book/en/v2/Git-Branching-Basic-Branching-and-Merging#Basic-Merge-Conflicts"">Basic Merge Conflicts<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a> from the Git book</li><li class=""css-cvpopp""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://git-scm.com/docs/git-merge#_how_conflicts_are_presented"">How Conflicts Are Presented<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a> from the Git docs</li></ul></div>']","['https://video.udacity-data.com/topher/2017/February/58a4da49_ud123-l5-git-merge-conflict-prep/ud123-l5-git-merge-conflict-prep.png', 'https://video.udacity-data.com/topher/2017/February/58a4dbc5_ud123-l5-git-merge-conflict-prep2/ud123-l5-git-merge-conflict-prep2.png', 'https://video.udacity-data.com/topher/2017/February/58a4dc22_ud123-l5-git-merge-conflict/ud123-l5-git-merge-conflict.png', 'https://video.udacity-data.com/topher/2017/February/58a74de1_ud123-l5-git-merge-conflict-indicators/ud123-l5-git-merge-conflict-indicators.png']",
Version Control with Git,Version Control with Git,"Lesson 5: Tagging, Branching, and Merging",5.7  Outro,[],[],https://www.youtube.com/embed/ot4fPX1jzOI
Version Control with Git,Version Control with Git,Lesson 6: Undoing Changes,6.1  Intro,[],[],https://www.youtube.com/embed/Kfi7l41wUVc
Version Control with Git,Version Control with Git,Lesson 6: Undoing Changes,6.2  Modifying The Last Commit,"['<div class=""ureact-markdown css-tc5hjw""><h2 class=""chakra-heading css-fz7yxd"">Changing The Last Commit</h2>\n<p class=""chakra-text css-o3oz8b"">You\'ve already made plenty of commits with the <code class=""chakra-code css-1u83yg1"">git commit</code> command. Now with the <code class=""chakra-code css-1u83yg1"">--amend</code> flag, you can alter the <em class=""chakra-text css-o3oz8b"">most-recent</em> commit.</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-bash"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span>$ </span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">git</span><span> commit --amend</span></code></div></div></pre>\n<p class=""chakra-text css-o3oz8b"">If your Working Directory is clean (meaning there aren\'t any uncommitted changes in the repository), then running <code class=""chakra-code css-1u83yg1"">git commit --amend</code> will let you provide a new commit message. Your code editor will open up and display the original commit message. Just fix a misspelling or completely reword it! Then save it and close the editor to lock in the new commit message.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><h2 class=""chakra-heading css-fz7yxd"">Add Forgotten Files To Commit</h2>\n<p class=""chakra-text css-o3oz8b"">Alternatively, <code class=""chakra-code css-1u83yg1"">git commit --amend</code> will let you include files (or changes to files) you might\'ve forgotten to include. Let\'s say you\'ve updated the color of all navigation links across your entire website. You committed that change and thought you were done. But then you discovered that a special nav link buried deep on a page doesn\'t have the new color. You <em class=""chakra-text css-o3oz8b"">could</em> just make a new commit that updates the color for that one link, but that would have two back-to-back commits that do practically the exact same thing (change link colors).</p>\n<p class=""chakra-text css-o3oz8b"">Instead, you can amend the last commit (the one that updated the color of all of the other links) to include this forgotten one. To do get the forgotten link included, just:</p>\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp"">edit the file(s)</li><li class=""css-cvpopp"">save the file(s)</li><li class=""css-cvpopp"">stage the file(s)</li><li class=""css-cvpopp"">and run <code class=""chakra-code css-1u83yg1"">git commit --amend</code></li></ul>\n<p class=""chakra-text css-o3oz8b"">So you\'d make changes to the necessary CSS and/or HTML files to get the forgotten link styled correctly, then you\'d save all of the files that were modified, then you\'d use <code class=""chakra-code css-1u83yg1"">git add</code> to stage all of the modified files (just as if you were going to make a new commit!), but then you\'d run <code class=""chakra-code css-1u83yg1"">git commit --amend</code> to update the most-recent commit instead of creating a new one.</p></div>']",[],
Version Control with Git,Version Control with Git,Lesson 6: Undoing Changes,6.3  Reverting A Commit,"['<div class=""ureact-markdown css-tc5hjw""><h2 class=""chakra-heading css-fz7yxd"">What Is A Revert?</h2>\n<p class=""chakra-text css-o3oz8b"">When you tell Git to <strong>revert</strong> a specific commit, Git takes the changes that were made in commit and does the exact opposite of them. Let\'s break that down a bit. If a character is added in commit A, if Git <em class=""chakra-text css-o3oz8b"">reverts</em> commit A, then Git will make a new commit where that character is deleted. It also works the other way where if a character/line is removed, then reverting that commit will <em class=""chakra-text css-o3oz8b"">add</em> that content back!</p>\n<p class=""chakra-text css-o3oz8b"">We ended the previous lesson with a merge conflict and resolved that conflict by setting the heading to <code class=""chakra-code css-1u83yg1"">Adventurous Quest</code>. Let\'s say that there\'s a commit in your repository that changes the heading now to <code class=""chakra-code css-1u83yg1"">Quests &amp; Crusades</code>.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><em class=""chakra-text css-o3oz8b"">The Terminal application showing the log of a repository. The most-recent commit changes the heading from ""Adventurous Quest"" to ""Quests &amp; Crusades"".</em></p></div>', '<div class=""ureact-markdown css-tc5hjw""><h2 class=""chakra-heading css-fz7yxd"">The <code class=""chakra-code css-1u83yg1"">git revert</code> Command</h2>\n<p class=""chakra-text css-o3oz8b"">Now that I\'ve made a commit with some changes, I can revert it with the <code class=""chakra-code css-1u83yg1"">git revert</code> command</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-bash"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span>$ </span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">git</span><span> revert </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">&lt;</span><span>SHA-of-commit-to-revert</span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">&gt;</span></code></div></div></pre>\n<p class=""chakra-text css-o3oz8b"">Since the SHA of the most-recent commit is <code class=""chakra-code css-1u83yg1"">db7e87a</code>, to revert it:\nI\'ll just run <code class=""chakra-code css-1u83yg1"">git revert db7e87a</code> (this will pop open my code editor to edit/accept the provided commit message)</p>\n<p class=""chakra-text css-o3oz8b"">I\'ll get the following output:</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><em class=""chakra-text css-o3oz8b"">The Terminal application showing the output of reverting a commit. The output provides the commit message of the commit that was reverted. It also creates a new commit to record this change.</em></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Did you see how the output of the <code class=""chakra-code css-1u83yg1"">git revert</code> command tells us what it reverted? It uses the commit message of the commit that I told it to revert. Something that\'s also important is that it creates <em class=""chakra-text css-o3oz8b"">a new commit</em>.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><h2 class=""chakra-heading css-fz7yxd"">Revert Recap</h2>\n<p class=""chakra-text css-o3oz8b"">To recap, the <code class=""chakra-code css-1u83yg1"">git revert</code> command is used to reverse a previously made commit:</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-bash"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span>$ </span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">git</span><span> revert </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">&lt;</span><span>SHA-of-commit-to-revert</span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">&gt;</span></code></div></div></pre>\n<p class=""chakra-text css-o3oz8b"">This command:</p>\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp"">will undo the changes that were made by the provided commit</li><li class=""css-cvpopp"">creates a new commit to record the change</li></ul>\n<h3 class=""chakra-heading css-k57syw"">Further Research</h3>\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://git-scm.com/docs/git-revert"">git-revert<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a> from Git Docs</li><li class=""css-cvpopp""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://www.atlassian.com/git/tutorials/undoing-changes"">git revert<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a> Atlassian tutorial</li></ul></div>']","['https://video.udacity-data.com/topher/2017/February/58a4de9e_ud123-l6-git-revert-prep/ud123-l6-git-revert-prep.png', 'https://video.udacity-data.com/topher/2017/February/58a4dedb_ud123-l6-git-revert-post/ud123-l6-git-revert-post.png']",
Version Control with Git,Version Control with Git,Lesson 6: Undoing Changes,6.4  Resetting Commits,"['<div class=""ureact-markdown css-tc5hjw""><h2 class=""chakra-heading css-fz7yxd"">Reset vs Revert</h2>\n<p class=""chakra-text css-o3oz8b"">At first glance, <em class=""chakra-text css-o3oz8b"">resetting</em> might seem coincidentally close to <em class=""chakra-text css-o3oz8b"">reverting</em>, but they are actually quite different. Reverting creates a new commit that reverts or undos a previous commit. Resetting, on the other hand, <em class=""chakra-text css-o3oz8b"">erases</em> commits!</p></div>', '<div class=""ureact-markdown css-tc5hjw""><blockquote class=""css-6jmydm"">\n<h2 class=""chakra-heading css-fz7yxd"">⚠️ Resetting Is Dangerous ⚠️</h2>\n</blockquote>\n<blockquote class=""css-6jmydm"">\n<p class=""chakra-text css-o3oz8b"">You\'ve got to be careful with Git\'s resetting capabilities. This is one of the few commands that lets you erase commits from the repository. If a commit is no longer in the repository, then its content is gone.</p>\n</blockquote>\n<blockquote class=""css-6jmydm"">\n<p class=""chakra-text css-o3oz8b"">To alleviate the stress a bit, Git <em class=""chakra-text css-o3oz8b"">does</em> keep track of everything for about 30 days before it completely erases anything. To access this content, you\'ll need to use the <code class=""chakra-code css-1u83yg1"">git reflog</code> command. Check out these links for more info:</p>\n</blockquote>\n<blockquote class=""css-6jmydm"">\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://git-scm.com/docs/git-reflog"">git-reflog<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a></li></ul>\n</blockquote>\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://www.atlassian.com/git/tutorials/rewriting-history"">Rewriting History<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a></li><li class=""css-cvpopp""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""http://gitready.com/intermediate/2009/02/09/reflog-your-safety-net.html"">reflog, your safety net<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a></li></ul></div>', '<div class=""ureact-markdown css-tc5hjw""><h2 class=""chakra-heading css-fz7yxd"">Relative Commit References</h2>\n<p class=""chakra-text css-o3oz8b"">You already know that you can reference commits by their SHA, by tags, branches, and the special <code class=""chakra-code css-1u83yg1"">HEAD</code> pointer. Sometimes that\'s not enough, though. There will be times when you\'ll want to reference a commit relative to another commit. For example, there will be times where you\'ll want to tell Git about the commit that\'s one before the current commit...or two before the current commit. There are special characters called ""Ancestry References"" that we can use to tell Git about these relative references. Those characters are:</p>\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp""><code class=""chakra-code css-1u83yg1"">^</code> – indicates the parent commit</li><li class=""css-cvpopp""><code class=""chakra-code css-1u83yg1"">~</code> – indicates the <em class=""chakra-text css-o3oz8b"">first</em> parent commit</li></ul>\n<p class=""chakra-text css-o3oz8b"">Here\'s how we can refer to previous commits:</p>\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp"">the parent commit – the following indicate the parent commit of the current commit\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp"">HEAD^</li><li class=""css-cvpopp"">HEAD~</li><li class=""css-cvpopp"">HEAD~1</li></ul>\n</li><li class=""css-cvpopp"">the grandparent commit – the following indicate the grandparent commit of the current commit\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp"">HEAD^^</li><li class=""css-cvpopp"">HEAD~2</li></ul>\n</li><li class=""css-cvpopp"">the great-grandparent commit – the following indicate the great-grandparent commit of the current commit\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp"">HEAD^^^</li><li class=""css-cvpopp"">HEAD~3</li></ul>\n</li></ul>\n<p class=""chakra-text css-o3oz8b"">The main difference between the <code class=""chakra-code css-1u83yg1"">^</code> and the <code class=""chakra-code css-1u83yg1"">~</code> is when a commit is created <em class=""chakra-text css-o3oz8b"">from a merge</em>. A merge commit has <em class=""chakra-text css-o3oz8b"">two</em> parents. With a merge commit, the <code class=""chakra-code css-1u83yg1"">^</code> reference is used to indicate the <em class=""chakra-text css-o3oz8b"">first</em> parent of the commit while <code class=""chakra-code css-1u83yg1"">^2</code> indicates the <em class=""chakra-text css-o3oz8b"">second</em> parent. The first parent is the branch you were on when you ran <code class=""chakra-code css-1u83yg1"">git merge</code> while the second parent is the branch that was merged in.</p>\n<p class=""chakra-text css-o3oz8b"">It\'s easier if we look at an example. This what my <code class=""chakra-code css-1u83yg1"">git log</code> currently shows:</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-bash"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span>* 9ec05ca </span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span>HEAD -</span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">&gt;</span><span> master</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span> Revert </span><span class=""token"" style=""color: rgb(221, 17, 68);"">""Set page heading to ""</span><span>Quests </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">&amp;</span><span> Crusades</span><span class=""token"" style=""color: rgb(221, 17, 68);"">""""</span><span>\n</span><span>* db7e87a Set page heading to </span><span class=""token"" style=""color: rgb(221, 17, 68);"">""Quests &amp; Crusades""</span><span>\n</span><span>*   796ddb0 Merge branch </span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'heading-update\'</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">|</span><span class=""token"" style=""color: rgb(15, 43, 61);"">\\</span><span>  \n</span><span></span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">|</span><span> * 4c9749e </span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span>heading-update</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span> Set page heading to </span><span class=""token"" style=""color: rgb(221, 17, 68);"">""Crusade""</span><span>\n</span><span>* </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">|</span><span> 0c5975a Set page heading to </span><span class=""token"" style=""color: rgb(221, 17, 68);"">""Quest""</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">|</span><span>/  \n</span><span>*   1a56a81 Merge branch </span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'sidebar\'</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">|</span><span class=""token"" style=""color: rgb(15, 43, 61);"">\\</span><span>  \n</span><span></span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">|</span><span> * f69811c </span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span>sidebar</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span> Update sidebar with favorite movie\n</span><span></span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">|</span><span> * e6c65a6 Add new sidebar content\n</span><span>* </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">|</span><span> e014d91 </span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span>footer</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span> Add links to social media\n</span><span>* </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">|</span><span> 209752a Improve site heading </span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">for</span><span> SEO\n</span><span>* </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">|</span><span> 3772ab1 Set background color </span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">for</span><span> page\n</span><span></span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">|</span><span>/  \n</span>* 5bfe5e7 Add starting HTML structure\n<span>* 6fa5f34 Add .gitignore </span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">file</span><span>\n</span>* a879849 Add header to blog\n* 94de470 Initial commit</code></div></div></pre>\n<p class=""chakra-text css-o3oz8b"">Let\'s look at how we\'d refer to some of the previous commits. Since <code class=""chakra-code css-1u83yg1"">HEAD</code> points to the <code class=""chakra-code css-1u83yg1"">9ec05ca</code> commit:</p>\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp""><code class=""chakra-code css-1u83yg1"">HEAD^</code> is the <code class=""chakra-code css-1u83yg1"">db7e87a</code> commit</li><li class=""css-cvpopp""><code class=""chakra-code css-1u83yg1"">HEAD~1</code> is also the <code class=""chakra-code css-1u83yg1"">db7e87a</code> commit</li><li class=""css-cvpopp""><code class=""chakra-code css-1u83yg1"">HEAD^^</code> is the <code class=""chakra-code css-1u83yg1"">796ddb0</code> commit</li><li class=""css-cvpopp""><code class=""chakra-code css-1u83yg1"">HEAD~2</code> is also the <code class=""chakra-code css-1u83yg1"">796ddb0</code> commit</li><li class=""css-cvpopp""><code class=""chakra-code css-1u83yg1"">HEAD^^^</code> is the <code class=""chakra-code css-1u83yg1"">0c5975a</code> commit</li><li class=""css-cvpopp""><code class=""chakra-code css-1u83yg1"">HEAD~3</code> is also the <code class=""chakra-code css-1u83yg1"">0c5975a</code> commit</li><li class=""css-cvpopp""><code class=""chakra-code css-1u83yg1"">HEAD^^^2</code> is the <code class=""chakra-code css-1u83yg1"">4c9749e</code> commit (this is the grandparent\'s (<code class=""chakra-code css-1u83yg1"">HEAD^^</code>) <em class=""chakra-text css-o3oz8b"">second parent</em> (<code class=""chakra-code css-1u83yg1"">^2</code>))</li></ul></div>', '<div class=""ureact-markdown css-tc5hjw""><h2 class=""chakra-heading css-fz7yxd"">Which Commit?</h2>\n<p class=""chakra-text css-o3oz8b"">Use this repository to answer the following quiz questions:</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-bash"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span>* 9ec05ca </span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span>HEAD -</span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">&gt;</span><span> master</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span> Revert </span><span class=""token"" style=""color: rgb(221, 17, 68);"">""Set page heading to ""</span><span>Quests </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">&amp;</span><span> Crusades</span><span class=""token"" style=""color: rgb(221, 17, 68);"">""""</span><span>\n</span><span>* db7e87a Set page heading to </span><span class=""token"" style=""color: rgb(221, 17, 68);"">""Quests &amp; Crusades""</span><span>\n</span><span>*   796ddb0 Merge branch </span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'heading-update\'</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">|</span><span class=""token"" style=""color: rgb(15, 43, 61);"">\\</span><span>  \n</span><span></span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">|</span><span> * 4c9749e </span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span>heading-update</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span> Set page heading to </span><span class=""token"" style=""color: rgb(221, 17, 68);"">""Crusade""</span><span>\n</span><span>* </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">|</span><span> 0c5975a Set page heading to </span><span class=""token"" style=""color: rgb(221, 17, 68);"">""Quest""</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">|</span><span>/  \n</span><span>*   1a56a81 Merge branch </span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'sidebar\'</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">|</span><span class=""token"" style=""color: rgb(15, 43, 61);"">\\</span><span>  \n</span><span></span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">|</span><span> * f69811c </span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span>sidebar</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span> Update sidebar with favorite movie\n</span><span></span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">|</span><span> * e6c65a6 Add new sidebar content\n</span><span>* </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">|</span><span> e014d91 </span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span>footer</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span> Add links to social media\n</span><span>* </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">|</span><span> 209752a Improve site heading </span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">for</span><span> SEO\n</span><span>* </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">|</span><span> 3772ab1 Set background color </span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">for</span><span> page\n</span><span></span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">|</span><span>/  \n</span>* 5bfe5e7 Add starting HTML structure\n<span>* 6fa5f34 Add .gitignore </span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">file</span><span>\n</span>* a879849 Add header to blog\n* 94de470 Initial commit</code></div></div></pre></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Which commit is referenced by <code class=""chakra-code css-1u83yg1"">HEAD~6</code>?</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">4c9749e</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">0c5975a</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">1a56a81</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">f69811c</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">e014d91</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">209752a</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">You did so well on that last one, why not give this one a go! Using the same repository, which commit is referenced by <code class=""chakra-code css-1u83yg1"">HEAD~4^2</code>?</p></div>', '<div class=""ureact-markdown css-tc5hjw""><h2 class=""chakra-heading css-fz7yxd"">The <code class=""chakra-code css-1u83yg1"">git reset</code> Command</h2>\n<p class=""chakra-text css-o3oz8b"">The <code class=""chakra-code css-1u83yg1"">git reset</code> command is used to reset (erase) commits:</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-bash"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span>$ </span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">git</span><span> reset </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">&lt;</span><span>reference-to-commit</span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">&gt;</span></code></div></div></pre>\n<p class=""chakra-text css-o3oz8b"">It can be used to:</p>\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp"">move the HEAD and current branch pointer to the referenced commit</li><li class=""css-cvpopp"">erase commits</li><li class=""css-cvpopp"">move committed changes to the staging index</li><li class=""css-cvpopp"">unstage committed changes</li></ul></div>', '<div class=""ureact-markdown css-tc5hjw""><h2 class=""chakra-heading css-fz7yxd"">Git Reset\'s Flags</h2>\n<p class=""chakra-text css-o3oz8b"">The way that Git determines if it erases, stages previously committed changes, or unstages previously committed changes is by the flag that\'s used. The flags are:</p>\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp""><code class=""chakra-code css-1u83yg1"">--mixed</code></li><li class=""css-cvpopp""><code class=""chakra-code css-1u83yg1"">--soft</code></li><li class=""css-cvpopp""><code class=""chakra-code css-1u83yg1"">--hard</code></li></ul>\n<p class=""chakra-text css-o3oz8b"">It\'s easier to understand how they work with a little animation.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><blockquote class=""css-6jmydm"">\n<h2 class=""chakra-heading css-fz7yxd"">💡 Backup Branch 💡</h2>\n</blockquote>\n<blockquote class=""css-6jmydm"">\n<p class=""chakra-text css-o3oz8b"">Remember that using the <code class=""chakra-code css-1u83yg1"">git reset</code> command will <em class=""chakra-text css-o3oz8b"">erase</em> commits from the current branch. So if you want to follow along with all the resetting stuff that\'s coming up, you\'ll need to create a branch on the current commit that you can use as a backup.</p>\n</blockquote>\n<blockquote class=""css-6jmydm"">\n<p class=""chakra-text css-o3oz8b"">Before I do any resetting, I usually create a <code class=""chakra-code css-1u83yg1"">backup</code> branch on the most-recent commit so that I can get back to the commits if I make a mistake:</p>\n</blockquote>\n<blockquote class=""css-6jmydm"">\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-bash"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span>$ </span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">git</span><span> branch backup</span></code></div></div></pre>\n</blockquote></div>', '<div class=""ureact-markdown css-tc5hjw""><h2 class=""chakra-heading css-fz7yxd"">Reset\'s <code class=""chakra-code css-1u83yg1"">--mixed</code> Flag</h2>\n<p class=""chakra-text css-o3oz8b"">Let\'s look at each one of these flags.</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-bash"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span>* 9ec05ca </span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span>HEAD -</span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">&gt;</span><span> master</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span> Revert </span><span class=""token"" style=""color: rgb(221, 17, 68);"">""Set page heading to ""</span><span>Quests </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">&amp;</span><span> Crusades</span><span class=""token"" style=""color: rgb(221, 17, 68);"">""""</span><span>\n</span><span>* db7e87a Set page heading to </span><span class=""token"" style=""color: rgb(221, 17, 68);"">""Quests &amp; Crusades""</span><span>\n</span><span>* 796ddb0 Merge branch </span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'heading-update\'</span></code></div></div></pre>\n<p class=""chakra-text css-o3oz8b"">Using the sample repo above with <code class=""chakra-code css-1u83yg1"">HEAD</code> pointing to <code class=""chakra-code css-1u83yg1"">master</code> on commit <code class=""chakra-code css-1u83yg1"">9ec05ca</code>, running <code class=""chakra-code css-1u83yg1"">git reset --mixed HEAD^</code> will take the changes made in commit <code class=""chakra-code css-1u83yg1"">9ec05ca</code> and move them to the working directory.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><em class=""chakra-text css-o3oz8b"">The Terminal application showing the result of resetting with the <code class=""chakra-code css-1u83yg1"">--mixed</code> flag. The changes are unstaged.</em></p></div>', '<div class=""ureact-markdown css-tc5hjw""><blockquote class=""css-6jmydm"">\n<h2 class=""chakra-heading css-fz7yxd"">💡 Back To Normal 💡</h2>\n</blockquote>\n<blockquote class=""css-6jmydm"">\n<p class=""chakra-text css-o3oz8b"">If you created the <code class=""chakra-code css-1u83yg1"">backup</code> branch prior to resetting anything, then you can easily get back to having the <code class=""chakra-code css-1u83yg1"">master</code> branch point to the same commit as the <code class=""chakra-code css-1u83yg1"">backup</code> branch. You\'ll just need to:</p>\n</blockquote>\n<ol role=""list"" class=""css-13a5a39""><li class=""css-cvpopp"">remove the uncommitted changes from the working directory</li></ol>\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp"">merge <code class=""chakra-code css-1u83yg1"">backup</code> into <code class=""chakra-code css-1u83yg1"">master</code> (which will cause a Fast-forward merge and move <code class=""chakra-code css-1u83yg1"">master</code> up to the same point as <code class=""chakra-code css-1u83yg1"">backup</code>)</li></ul>\n<blockquote class=""css-6jmydm"">\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-bash"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span>$ </span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">git</span><span> checkout -- index.html\n</span><span>$ </span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">git</span><span> merge backup</span></code></div></div></pre>\n</blockquote></div>', '<div class=""ureact-markdown css-tc5hjw""><h2 class=""chakra-heading css-fz7yxd"">Reset\'s <code class=""chakra-code css-1u83yg1"">--soft</code> Flag</h2>\n<p class=""chakra-text css-o3oz8b"">Let\'s use the same few commits and look at how the <code class=""chakra-code css-1u83yg1"">--soft</code> flag works:</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-bash"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span>* 9ec05ca </span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span>HEAD -</span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">&gt;</span><span> master</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span> Revert </span><span class=""token"" style=""color: rgb(221, 17, 68);"">""Set page heading to ""</span><span>Quests </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">&amp;</span><span> Crusades</span><span class=""token"" style=""color: rgb(221, 17, 68);"">""""</span><span>\n</span><span>* db7e87a Set page heading to </span><span class=""token"" style=""color: rgb(221, 17, 68);"">""Quests &amp; Crusades""</span><span>\n</span><span>* 796ddb0 Merge branch </span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'heading-update\'</span></code></div></div></pre>\n<p class=""chakra-text css-o3oz8b"">Running <code class=""chakra-code css-1u83yg1"">git reset --soft HEAD^</code> will take the changes made in commit <code class=""chakra-code css-1u83yg1"">9ec05ca</code> and move them directly to the Staging Index.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><em class=""chakra-text css-o3oz8b"">The Terminal application showing the result of resetting with the <code class=""chakra-code css-1u83yg1"">--soft</code> flag. The changes are moved to the Staging Index.</em></p></div>', '<div class=""ureact-markdown css-tc5hjw""><h2 class=""chakra-heading css-fz7yxd"">Reset\'s <code class=""chakra-code css-1u83yg1"">--hard</code> Flag</h2>\n<p class=""chakra-text css-o3oz8b"">Last but not least, let\'s  look at the <code class=""chakra-code css-1u83yg1"">--hard</code> flag:</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-bash"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span>* 9ec05ca </span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span>HEAD -</span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">&gt;</span><span> master</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span> Revert </span><span class=""token"" style=""color: rgb(221, 17, 68);"">""Set page heading to ""</span><span>Quests </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">&amp;</span><span> Crusades</span><span class=""token"" style=""color: rgb(221, 17, 68);"">""""</span><span>\n</span><span>* db7e87a Set page heading to </span><span class=""token"" style=""color: rgb(221, 17, 68);"">""Quests &amp; Crusades""</span><span>\n</span><span>* 796ddb0 Merge branch </span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'heading-update\'</span></code></div></div></pre>\n<p class=""chakra-text css-o3oz8b"">Running <code class=""chakra-code css-1u83yg1"">git reset --hard HEAD^</code> will take the changes made in commit <code class=""chakra-code css-1u83yg1"">9ec05ca</code> and erases them.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><em class=""chakra-text css-o3oz8b"">The Terminal application showing the result of resetting with the <code class=""chakra-code css-1u83yg1"">--hard</code> flag. The changes are moved erased.</em></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Now it\'s your turn!</p>\n<p class=""chakra-text css-o3oz8b"">Refer to the following repository:</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-bash"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span>* e014d91 </span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span>HEAD -</span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">&gt;</span><span> master, footer</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span> Add links to social media\n</span><span>* 209752a Improve site heading </span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">for</span><span> SEO\n</span><span>* 3772ab1 Set background color </span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">for</span><span> page\n</span>* 5bfe5e7 Add starting HTML structure\n<span>* 6fa5f34 Add .gitignore </span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">file</span><span>\n</span>* a879849 Add header to blog\n* 94de470 Initial commit</code></div></div></pre></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">What will happen to the changes from the <code class=""chakra-code css-1u83yg1"">3772ab1</code> commit if <code class=""chakra-code css-1u83yg1"">git reset --hard HEAD~3</code> is run? Will the changes be in the Staging Index, in the Working Directory, or complete erased?</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Staging Index</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Working Directory</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">erased</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">What will happen to the changes from the <code class=""chakra-code css-1u83yg1"">209752a</code> commit if <code class=""chakra-code css-1u83yg1"">git reset --soft HEAD^^</code> is run? Will the changes be in the Staging Index, in the Working Directory, or complete erased?</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Staging Index</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Working Directory</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">erased</p></div>', '<div class=""ureact-markdown css-tc5hjw""><h2 class=""chakra-heading css-fz7yxd"">Reset Recap</h2>\n<p class=""chakra-text css-o3oz8b"">To recap, the <code class=""chakra-code css-1u83yg1"">git reset</code> command is used erase commits:</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-bash"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span>$ </span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">git</span><span> reset </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">&lt;</span><span>reference-to-commit</span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">&gt;</span></code></div></div></pre>\n<p class=""chakra-text css-o3oz8b"">It can be used to:</p>\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp"">move the HEAD and current branch pointer to the referenced commit</li><li class=""css-cvpopp"">erase commits with the <code class=""chakra-code css-1u83yg1"">--hard</code> flag</li><li class=""css-cvpopp"">moves committed changes to the staging index with the <code class=""chakra-code css-1u83yg1"">--soft</code> flag</li><li class=""css-cvpopp"">unstages committed changes <code class=""chakra-code css-1u83yg1"">--mixed</code> flag</li></ul>\n<p class=""chakra-text css-o3oz8b"">Typically, ancestry references are used to indicate previous commits. The ancestry references are:</p>\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp""><code class=""chakra-code css-1u83yg1"">^</code> – indicates the parent commit</li><li class=""css-cvpopp""><code class=""chakra-code css-1u83yg1"">~</code> – indicates the first parent commit</li></ul>\n<h3 class=""chakra-heading css-k57syw"">Further Research</h3>\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://git-scm.com/docs/git-reset"">git-reset<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a> from Git docs</li><li class=""css-cvpopp""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://git-scm.com/book/en/v2/Git-Tools-Reset-Demystified"">Reset Demystified<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a> from Git Blog</li><li class=""css-cvpopp""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://git-scm.com/book/en/v2/Git-Tools-Revision-Selection#Ancestry-References"">Ancestry References<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a> from Git Book</li></ul></div>']","['https://video.udacity-data.com/topher/2017/February/58a4e242_ud123-l6-git-revert-mixed/ud123-l6-git-revert-mixed.png', 'https://video.udacity-data.com/topher/2017/February/58a4e29a_ud123-l6-git-revert-soft/ud123-l6-git-revert-soft.png', 'https://video.udacity-data.com/topher/2017/February/58a4e2c2_ud123-l6-git-revert-hard/ud123-l6-git-revert-hard.png']",https://www.youtube.com/embed/UN7ki2G2yKc
Version Control with Git,Version Control with Git,Lesson 6: Undoing Changes,6.5  Lesson Outro,[],[],https://www.youtube.com/embed/-_PPVk2UZMU
Version Control with Git,Version Control with Git,Lesson 6: Undoing Changes,6.6  Course Outro,"['<div class=""ureact-markdown css-tc5hjw""><h2 class=""chakra-heading css-fz7yxd"">Expand On Your Git Skills</h2>\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp"">take the companion GitHub course</li><li class=""css-cvpopp"">create a repo to track your computer\'s settings - <a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://dotfiles.github.io/"">https://dotfiles.github.io/<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a></li><li class=""css-cvpopp"">develop the next, awesome feature for your personal project</li><li class=""css-cvpopp"">try tackling some Git challenges with the <a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://github.com/jlord/git-it-electron"">Git-it app<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a></li></ul></div>']",[],https://www.youtube.com/embed/twn_cheqoK8
