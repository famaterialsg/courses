course,sub_course,module,sub_module,content_html_list,img_list,video_url
Object-Oriented JavaScript,Object-Oriented JavaScript,Lesson 1: Objects in Depth,1.1  Introduction,"['<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Which of the following are features or characteristics of an <strong>object</strong>? Select all that apply:</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Ordered</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Key/value pairs</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">{ Curly Braces }</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Indexed</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Unordered</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">[ Square Brackets ]</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Write an expression to access the last item in the following array:</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-js"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">const</span><span> mileTimes </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">=</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">[</span><span class=""token"" style=""color: rgb(2, 124, 124);"">7.50</span><span class=""token"" style=""color: rgb(15, 43, 61);"">,</span><span> </span><span class=""token"" style=""color: rgb(2, 124, 124);"">6.25</span><span class=""token"" style=""color: rgb(15, 43, 61);"">,</span><span> </span><span class=""token"" style=""color: rgb(2, 124, 124);"">10.60</span><span class=""token"" style=""color: rgb(15, 43, 61);"">,</span><span> </span><span class=""token"" style=""color: rgb(2, 124, 124);"">8.88</span><span class=""token"" style=""color: rgb(15, 43, 61);"">]</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span></code></div></div></pre></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Write an expression to access the value of the <code class=""chakra-code css-1u83yg1"">population</code> object\'s <code class=""chakra-code css-1u83yg1"">brazil</code> property:</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-js"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">const</span><span> populations </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">=</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">{</span><span>\n</span><span>  </span><span class=""token literal-property"" style=""color: rgb(2, 124, 124);"">china</span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">:</span><span> </span><span class=""token"" style=""color: rgb(2, 124, 124);"">1379000000</span><span class=""token"" style=""color: rgb(15, 43, 61);"">,</span><span>\n</span><span>  </span><span class=""token literal-property"" style=""color: rgb(2, 124, 124);"">brazil</span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">:</span><span> </span><span class=""token"" style=""color: rgb(2, 124, 124);"">207700000</span><span class=""token"" style=""color: rgb(15, 43, 61);"">,</span><span>\n</span><span>  </span><span class=""token literal-property"" style=""color: rgb(2, 124, 124);"">india</span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">:</span><span> </span><span class=""token"" style=""color: rgb(2, 124, 124);"">1324000000</span><span class=""token"" style=""color: rgb(15, 43, 61);"">,</span><span>\n</span><span>  </span><span class=""token literal-property"" style=""color: rgb(2, 124, 124);"">unitedStates</span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">:</span><span> </span><span class=""token"" style=""color: rgb(2, 124, 124);"">323100000</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(15, 43, 61);"">}</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span></code></div></div></pre></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Write an expression that outputs how to say hello in Portuguese:</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-js"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">const</span><span> greetings </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">=</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">{</span><span>\n</span><span>  </span><span class=""token literal-property"" style=""color: rgb(2, 124, 124);"">hello</span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">:</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">{</span><span>\n</span><span>    </span><span class=""token literal-property"" style=""color: rgb(2, 124, 124);"">english</span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">:</span><span> </span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'hi\'</span><span class=""token"" style=""color: rgb(15, 43, 61);"">,</span><span>\n</span><span>    </span><span class=""token literal-property"" style=""color: rgb(2, 124, 124);"">french</span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">:</span><span> </span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'bonjour\'</span><span class=""token"" style=""color: rgb(15, 43, 61);"">,</span><span>\n</span><span>    </span><span class=""token literal-property"" style=""color: rgb(2, 124, 124);"">portuguese</span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">:</span><span> </span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'oi\'</span><span>\n</span><span>  </span><span class=""token"" style=""color: rgb(15, 43, 61);"">}</span><span class=""token"" style=""color: rgb(15, 43, 61);"">,</span><span>\n</span><span>  </span><span class=""token literal-property"" style=""color: rgb(2, 124, 124);"">goodbye</span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">:</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">{</span><span>\n</span><span>    </span><span class=""token literal-property"" style=""color: rgb(2, 124, 124);"">english</span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">:</span><span> </span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'bye\'</span><span class=""token"" style=""color: rgb(15, 43, 61);"">,</span><span>\n</span><span>    </span><span class=""token literal-property"" style=""color: rgb(2, 124, 124);"">french</span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">:</span><span> </span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'au revoir\'</span><span class=""token"" style=""color: rgb(15, 43, 61);"">,</span><span>\n</span><span>    </span><span class=""token literal-property"" style=""color: rgb(2, 124, 124);"">portuguese</span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">:</span><span> </span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'tchau\'</span><span>\n</span><span>  </span><span class=""token"" style=""color: rgb(15, 43, 61);"">}</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(15, 43, 61);"">}</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span></code></div></div></pre></div>']",[],https://www.youtube.com/embed/XkLcC7xWK-A
Object-Oriented JavaScript,Object-Oriented JavaScript,Lesson 1: Objects in Depth,1.2  Create and Modify Properties,"['<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://github.com/udacity/OOJS-screencasts/blob/master/L1-objects-in-depth/25-adding-and-removing-properties.js"">Here\'s the code from the preceding video.<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">What is true about modifying objects? Select all that apply:</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Removing properties with the <code class=""chakra-code css-1u83yg1"">delete</code> operator returns <code class=""chakra-code css-1u83yg1"">true</code> upon successful deletion.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Accessing a deleted property (i.e., a property that no longer exists) returns <code class=""chakra-code css-1u83yg1"">null</code>.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">With a few exceptions, properties in objects are <em class=""chakra-text css-o3oz8b"">mutable</em>.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Properties can be added to objects exclusively with square bracket notation.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Consider the following <code class=""chakra-code css-1u83yg1"">house</code> object:</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-js"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">let</span><span> house </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">=</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">{</span><span>\n</span><span>  </span><span class=""token literal-property"" style=""color: rgb(2, 124, 124);"">color</span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">:</span><span> </span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'green\'</span><span class=""token"" style=""color: rgb(15, 43, 61);"">,</span><span>\n</span><span>  </span><span class=""token literal-property"" style=""color: rgb(2, 124, 124);"">numRooms</span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">:</span><span> </span><span class=""token"" style=""color: rgb(2, 124, 124);"">4</span><span class=""token"" style=""color: rgb(15, 43, 61);"">,</span><span>\n</span><span>  </span><span class=""token literal-property"" style=""color: rgb(2, 124, 124);"">numWindows</span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">:</span><span> </span><span class=""token"" style=""color: rgb(2, 124, 124);"">8</span><span class=""token"" style=""color: rgb(15, 43, 61);"">,</span><span>\n</span><span>  </span><span class=""token literal-property"" style=""color: rgb(2, 124, 124);"">forSale</span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">:</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">false</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(15, 43, 61);"">}</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span></code></div></div></pre>\n<p class=""chakra-text css-o3oz8b"">Write an expression to delete the <code class=""chakra-code css-1u83yg1"">numWindows</code> property from <code class=""chakra-code css-1u83yg1"">house</code>.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Consider the updated <code class=""chakra-code css-1u83yg1"">house</code> object from above:</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-js"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">let</span><span> house </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">=</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">{</span><span>\n</span><span>  </span><span class=""token literal-property"" style=""color: rgb(2, 124, 124);"">color</span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">:</span><span> </span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'green\'</span><span class=""token"" style=""color: rgb(15, 43, 61);"">,</span><span>\n</span><span>  </span><span class=""token literal-property"" style=""color: rgb(2, 124, 124);"">numRooms</span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">:</span><span> </span><span class=""token"" style=""color: rgb(2, 124, 124);"">4</span><span class=""token"" style=""color: rgb(15, 43, 61);"">,</span><span>\n</span><span>  </span><span class=""token literal-property"" style=""color: rgb(2, 124, 124);"">forSale</span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">:</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">false</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(15, 43, 61);"">}</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span></code></div></div></pre>\n<p class=""chakra-text css-o3oz8b"">Write an expression to add a new <code class=""chakra-code css-1u83yg1"">hasGarage</code> property to <code class=""chakra-code css-1u83yg1"">house</code>. Set the value of the <code class=""chakra-code css-1u83yg1"">hasGarage</code> property to <code class=""chakra-code css-1u83yg1"">true</code>.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Which of the following is immutable? Select all that apply:</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">8</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">\'How are you today?\'</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">{ numProperties: 1 }</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">3.14</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">true</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">[0, 1, 2, 3, 4, 5]</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">function () { console.log(\'Hello!\'); }</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Consider the following:</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-js"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">let</span><span> string </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">=</span><span> </span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'orange\'</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span>\n<span></span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">function</span><span> </span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">changeToApple</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token parameter"">string</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">{</span><span>\n</span><span>  string </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">=</span><span> </span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'apple\'</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(15, 43, 61);"">}</span><span>\n</span>\n<span></span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">changeToApple</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span>string</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span>\n<span></span><span class=""token console"" style=""color: rgb(68, 85, 136); font-weight: bold;"">console</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token method property-access"" style=""color: rgb(153, 0, 0); font-weight: bold;"">log</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span>string</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(113, 113, 101); font-style: italic;"">// ???</span></code></div></div></pre>\n<p class=""chakra-text css-o3oz8b"">What is logged to the console?</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><code class=""chakra-code css-1u83yg1"">apple</code>, <code class=""chakra-code css-1u83yg1"">orange</code></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><code class=""chakra-code css-1u83yg1"">orange</code></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><code class=""chakra-code css-1u83yg1"">apple</code></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><code class=""chakra-code css-1u83yg1"">undefined</code></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Consider the following object, <code class=""chakra-code css-1u83yg1"">oven</code>:</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-js"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">const</span><span> oven </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">=</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">{</span><span>\n</span><span>  </span><span class=""token literal-property"" style=""color: rgb(2, 124, 124);"">type</span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">:</span><span> </span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'clay\'</span><span class=""token"" style=""color: rgb(15, 43, 61);"">,</span><span>\n</span><span>  </span><span class=""token literal-property"" style=""color: rgb(2, 124, 124);"">temperature</span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">:</span><span> </span><span class=""token"" style=""color: rgb(2, 124, 124);"">400</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(15, 43, 61);"">}</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span></code></div></div></pre>\n<p class=""chakra-text css-o3oz8b"">What is the value of <code class=""chakra-code css-1u83yg1"">oven</code>\'s <code class=""chakra-code css-1u83yg1"">temperature</code> property after the following operations?</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-js"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">const</span><span> newOven </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">=</span><span> oven</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span>\n<span>newOven</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token property-access"">temperature</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">+=</span><span> </span><span class=""token"" style=""color: rgb(2, 124, 124);"">50</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span></code></div></div></pre></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><code class=""chakra-code css-1u83yg1"">400</code></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><code class=""chakra-code css-1u83yg1"">50</code></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><code class=""chakra-code css-1u83yg1"">450</code></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><code class=""chakra-code css-1u83yg1"">350</code></p></div>', '<div class=""ureact-markdown css-tc5hjw""><h3 class=""chakra-heading css-k57syw"">Further Research</h3>\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/delete"">The \'delete\' operator<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a> on MDN</li></ul></div>']",[],https://www.youtube.com/embed/wDxnseegDYs
Object-Oriented JavaScript,Object-Oriented JavaScript,Lesson 1: Objects in Depth,1.3  Invoking Object Methods,"['<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://github.com/udacity/OOJS-screencasts/blob/master/L1-objects-in-depth/39-calling-methods-demo.js"">Here\'s the code from the preceding video.<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">What is true about object methods? Select all that apply:</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Unlike how regular functions are invoked, to invoke a method you can simply access the object\'s property without parentheses (<code class=""chakra-code css-1u83yg1"">()</code>).</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Methods cannot accept any arguments.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Methods can be called without a receiving object.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">A method is a property that points to a function.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Write an expression that invokes the <code class=""chakra-code css-1u83yg1"">alerter()</code> function in the following array, <code class=""chakra-code css-1u83yg1"">myArray</code>:</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-js"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">const</span><span> myArray </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">=</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">[</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">function</span><span> </span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">alerter</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">{</span><span> </span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">alert</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'Hello!\'</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">}</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">]</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span></code></div></div></pre></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Write an expression that invokes the function referenced by the <code class=""chakra-code css-1u83yg1"">bell</code> object\'s <code class=""chakra-code css-1u83yg1"">ring</code> property:</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-js"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">const</span><span> bell </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">=</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">{</span><span>\n</span><span>  </span><span class=""token literal-property"" style=""color: rgb(2, 124, 124);"">color</span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">:</span><span> </span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'gold\'</span><span class=""token"" style=""color: rgb(15, 43, 61);"">,</span><span>\n</span><span>  </span><span class=""token function-variable"" style=""color: rgb(153, 0, 0); font-weight: bold;"">ring</span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">:</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">function</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">{</span><span>\n</span><span>    </span><span class=""token console"" style=""color: rgb(68, 85, 136); font-weight: bold;"">console</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token method property-access"" style=""color: rgb(153, 0, 0); font-weight: bold;"">log</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'Ring ring ring!\'</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span><span>  </span><span class=""token"" style=""color: rgb(15, 43, 61);"">}</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(15, 43, 61);"">}</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span></code></div></div></pre></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://github.com/udacity/OOJS-screencasts/blob/master/L1-objects-in-depth/46-this-demo.js"">Here\'s the code from the preceding video.<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">What is true about <code class=""chakra-code css-1u83yg1"">this</code>? Select all that apply:</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><code class=""chakra-code css-1u83yg1"">this</code> refers to ""this property,"" or ""this method.""</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Using <code class=""chakra-code css-1u83yg1"">this</code>, methods can access and manipulate an object\'s properties.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">The exact value of <code class=""chakra-code css-1u83yg1"">this</code> is set before a method is invoked.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><code class=""chakra-code css-1u83yg1"">this</code> is a reserved word in JavaScript.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Let\'s make sure we\'re still on the same page! Write an expression that invokes the function referenced by the <code class=""chakra-code css-1u83yg1"">tree</code> object\'s <code class=""chakra-code css-1u83yg1"">growOneFoot</code> property:</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-js"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">const</span><span> tree </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">=</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">{</span><span>\n</span><span>  </span><span class=""token literal-property"" style=""color: rgb(2, 124, 124);"">type</span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">:</span><span> </span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'redwood\'</span><span class=""token"" style=""color: rgb(15, 43, 61);"">,</span><span>\n</span><span>  </span><span class=""token literal-property"" style=""color: rgb(2, 124, 124);"">leaves</span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">:</span><span> </span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'green\'</span><span class=""token"" style=""color: rgb(15, 43, 61);"">,</span><span>\n</span><span>  </span><span class=""token literal-property"" style=""color: rgb(2, 124, 124);"">height</span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">:</span><span> </span><span class=""token"" style=""color: rgb(2, 124, 124);"">80</span><span class=""token"" style=""color: rgb(15, 43, 61);"">,</span><span>\n</span><span>  </span><span class=""token literal-property"" style=""color: rgb(2, 124, 124);"">age</span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">:</span><span> </span><span class=""token"" style=""color: rgb(2, 124, 124);"">15</span><span class=""token"" style=""color: rgb(15, 43, 61);"">,</span><span>\n</span><span>  </span><span class=""token function-variable"" style=""color: rgb(153, 0, 0); font-weight: bold;"">growOneFoot</span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">:</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">function</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">{</span><span>\n</span><span>    </span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">this</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token property-access"">height</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">+=</span><span> </span><span class=""token"" style=""color: rgb(2, 124, 124);"">1</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span><span>  </span><span class=""token"" style=""color: rgb(15, 43, 61);"">}</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(15, 43, 61);"">}</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span></code></div></div></pre></div>', '<div class=""ureact-markdown css-tc5hjw""><h3 class=""chakra-heading css-k57syw"">Further Research</h3>\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Working_with_Objects#Defining_methods"">Defining Methods<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a> on MDN</li><li class=""css-cvpopp""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://javascript.info/object-methods#this-in-methods"">""this"" in Methods<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a></li></ul></div>']",[],https://www.youtube.com/embed/MgNjr5z3MGw
Object-Oriented JavaScript,Object-Oriented JavaScript,Lesson 1: Objects in Depth,1.4  Beware of Globals,"['<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Now, let\'s check out a different example. What do you think will be the value of <code class=""chakra-code css-1u83yg1"">this</code> inside the following code?</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-js"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">function</span><span> </span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">whoThis</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">{</span><span>\n</span><span>  </span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">this</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token property-access"">trickyish</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">=</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">true</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(15, 43, 61);"">}</span><span>\n</span>\n<span></span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">whoThis</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(113, 113, 101); font-style: italic;"">// (what does the above expression output?)</span></code></div></div></pre>\n<p class=""chakra-text css-o3oz8b"">Write your thoughts below.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://github.com/udacity/OOJS-screencasts/blob/master/L1-objects-in-depth/57-this-without-object.js"">Here\'s the code from the preceding video.<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">You\'ve seen what <code class=""chakra-code css-1u83yg1"">this</code> refers to in <code class=""chakra-code css-1u83yg1"">chameleon.lookAround();</code> and in <code class=""chakra-code css-1u83yg1"">whoThis()</code>. Carefully review this code:</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-js"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">const</span><span> car </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">=</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">{</span><span>\n</span><span>  </span><span class=""token literal-property"" style=""color: rgb(2, 124, 124);"">numberOfDoors</span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">:</span><span> </span><span class=""token"" style=""color: rgb(2, 124, 124);"">4</span><span class=""token"" style=""color: rgb(15, 43, 61);"">,</span><span>\n</span><span>  </span><span class=""token function-variable"" style=""color: rgb(153, 0, 0); font-weight: bold;"">drive</span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">:</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">function</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">{</span><span>\n</span><span>     </span><span class=""token console"" style=""color: rgb(68, 85, 136); font-weight: bold;"">console</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token method property-access"" style=""color: rgb(153, 0, 0); font-weight: bold;"">log</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token template-string template-punctuation"" style=""color: rgb(221, 17, 68);"">`</span><span class=""token template-string"" style=""color: rgb(221, 17, 68);"">Get in one of the </span><span class=""token template-string interpolation interpolation-punctuation"" style=""color: rgb(15, 43, 61);"">${</span><span class=""token template-string interpolation"" style=""color: rgb(15, 43, 61); font-weight: bold;"">this</span><span class=""token template-string interpolation"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token template-string interpolation property-access"">numberOfDoors</span><span class=""token template-string interpolation interpolation-punctuation"" style=""color: rgb(15, 43, 61);"">}</span><span class=""token template-string"" style=""color: rgb(221, 17, 68);""> doors, and let\'s go!</span><span class=""token template-string template-punctuation"" style=""color: rgb(221, 17, 68);"">`</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span><span>  </span><span class=""token"" style=""color: rgb(15, 43, 61);"">}</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(15, 43, 61);"">}</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span>\n<span></span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">const</span><span> letsRoll </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">=</span><span> car</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token property-access"">drive</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span>\n<span></span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">letsRoll</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span></code></div></div></pre>\n<p class=""chakra-text css-o3oz8b"">What does you think <code class=""chakra-code css-1u83yg1"">this</code> refers to in the code above?</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">The <code class=""chakra-code css-1u83yg1"">letsRoll</code> function itself</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">The <code class=""chakra-code css-1u83yg1"">window</code> object</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">The <code class=""chakra-code css-1u83yg1"">document</code> object</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">The <code class=""chakra-code css-1u83yg1"">&lt;body&gt;</code> element</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">It will cause an error</p></div>', '<div class=""ureact-markdown css-tc5hjw""><blockquote class=""css-6jmydm"">\n<h3 class=""chakra-heading css-k57syw"">Globals and <code class=""chakra-code css-1u83yg1"">var</code>, <code class=""chakra-code css-1u83yg1"">let</code>, and <code class=""chakra-code css-1u83yg1"">const</code></h3>\n<p class=""chakra-text css-o3oz8b"">The keywords <code class=""chakra-code css-1u83yg1"">var</code>, <code class=""chakra-code css-1u83yg1"">let</code>, and <code class=""chakra-code css-1u83yg1"">const</code> are used to declare variables in JavaScript. <code class=""chakra-code css-1u83yg1"">var</code> has been around since the beginning of the language, while <code class=""chakra-code css-1u83yg1"">let</code> and <code class=""chakra-code css-1u83yg1"">const</code> are significantly newer additions (added in ES6).</p>\n<p class=""chakra-text css-o3oz8b"">Only declaring variables with the <code class=""chakra-code css-1u83yg1"">var</code> keyword will add them to the <code class=""chakra-code css-1u83yg1"">window</code> object. If you declare a variable <em class=""chakra-text css-o3oz8b"">outside of a function</em> with either <code class=""chakra-code css-1u83yg1"">let</code> or <code class=""chakra-code css-1u83yg1"">const</code>, it will <em class=""chakra-text css-o3oz8b"">not</em> be added as a property to the <code class=""chakra-code css-1u83yg1"">window</code> object.</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-js"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">let</span><span> currentlyEating </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">=</span><span> </span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'ice cream\'</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span>\n<span></span><span class=""token dom"" style=""color: rgb(2, 124, 124);"">window</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token property-access"">currentlyEating</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">===</span><span> currentlyEating \n</span><span></span><span class=""token"" style=""color: rgb(113, 113, 101); font-style: italic;"">// false!</span></code></div></div></pre>\n</blockquote></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Which of the following variables and functions will be available on the <code class=""chakra-code css-1u83yg1"">window</code> object?</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-js"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">var</span><span> iceCreamEaten </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">=</span><span> </span><span class=""token"" style=""color: rgb(2, 124, 124);"">1</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span>\n<span></span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">function</span><span> </span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">consume</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token parameter"">numberOfGallons</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">{</span><span>\n</span><span>  </span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">var</span><span> result </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">=</span><span> iceCreamEaten </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">+</span><span> numberOfGallons</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span>\n<span>  </span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">function</span><span> </span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">updateTotals</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token parameter"">newTotal</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">{</span><span>\n</span><span>    iceCreamEaten </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">=</span><span> result</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span><span>  </span><span class=""token"" style=""color: rgb(15, 43, 61);"">}</span><span>\n</span>  \n<span>  </span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">updateTotals</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(15, 43, 61);"">}</span><span>\n</span>\n<span></span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">consume</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(2, 124, 124);"">3</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span></code></div></div></pre></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><code class=""chakra-code css-1u83yg1"">iceCreamEaten</code></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><code class=""chakra-code css-1u83yg1"">consume</code></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><code class=""chakra-code css-1u83yg1"">numberOfGallons</code></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><code class=""chakra-code css-1u83yg1"">result</code></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><code class=""chakra-code css-1u83yg1"">updateTotals</code></p></div>', '<div class=""ureact-markdown css-tc5hjw""><h3 class=""chakra-heading css-k57syw"">Further Research</h3>\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://developer.mozilla.org/en-US/docs/Web/API/Window"">The window object<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a> on MDN</li><li class=""css-cvpopp""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://www.w3.org/TR/html5/browsers.html#the-window-object"">The window specification<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a> on W3C</li><li class=""css-cvpopp""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""http://wiki.c2.com/?GlobalVariablesAreBad"">Article: Globals are Bad<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a></li><li class=""css-cvpopp""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://bit.ly/2m07ZOj"">Coupling<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a> on Wikipedia</li><li class=""css-cvpopp""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://en.wikipedia.org/wiki/Name_collision"">Name Collision<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a> on Wikipedia</li></ul></div>']",[],https://www.youtube.com/embed/fTVmpcG_9ss
Object-Oriented JavaScript,Object-Oriented JavaScript,Lesson 1: Objects in Depth,1.5  Extracting Properties and Values,"['<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://github.com/udacity/OOJS-screencasts/blob/master/L1-objects-in-depth/70-objectkeys-and-objectvalues-demo.js"">Here\'s the code from the preceding video.<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">What is true about <code class=""chakra-code css-1u83yg1"">Object.keys()</code>? Select all that apply.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">The resulting array\'s elements are strings</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">The method is used simply by calling <code class=""chakra-code css-1u83yg1"">.keys</code> onto any given object</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">In some environments, the return value of <code class=""chakra-code css-1u83yg1"">Object.keys()</code> is actually an object.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">The order of the array\'s elements are in the same order as using a <code class=""chakra-code css-1u83yg1"">for</code> loop.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">What is true about <code class=""chakra-code css-1u83yg1"">Object.values()</code>? Select all that apply.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">The resulting array\'s elements are strings.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">The method is used simply by calling <code class=""chakra-code css-1u83yg1"">.values</code> onto any given object.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">In some environments, the return value of <code class=""chakra-code css-1u83yg1"">Object.values()</code> is actually an object.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">The order of the array\'s elements are in the same order as using a <code class=""chakra-code css-1u83yg1"">for</code> loop.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Write an expression using <code class=""chakra-code css-1u83yg1"">Object.keys()</code> to extract the keys (i.e., property names) from the <code class=""chakra-code css-1u83yg1"">triangle</code> object:</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-js"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">const</span><span> triangle </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">=</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">{</span><span>\n</span><span>  </span><span class=""token literal-property"" style=""color: rgb(2, 124, 124);"">type</span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">:</span><span> </span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'polygon\'</span><span class=""token"" style=""color: rgb(15, 43, 61);"">,</span><span>\n</span><span>  </span><span class=""token literal-property"" style=""color: rgb(2, 124, 124);"">sides</span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">:</span><span> </span><span class=""token"" style=""color: rgb(2, 124, 124);"">3</span><span class=""token"" style=""color: rgb(15, 43, 61);"">,</span><span>\n</span><span>  </span><span class=""token literal-property"" style=""color: rgb(2, 124, 124);"">sumOfAngles</span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">:</span><span> </span><span class=""token"" style=""color: rgb(2, 124, 124);"">180</span><span class=""token"" style=""color: rgb(15, 43, 61);"">,</span><span>\n</span><span>  </span><span class=""token literal-property"" style=""color: rgb(2, 124, 124);"">equilateral</span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">:</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">true</span><span class=""token"" style=""color: rgb(15, 43, 61);"">,</span><span>\n</span><span>  </span><span class=""token literal-property"" style=""color: rgb(2, 124, 124);"">equiangular</span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">:</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">true</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(15, 43, 61);"">}</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span></code></div></div></pre></div>', '<div class=""ureact-markdown css-tc5hjw""><h3 class=""chakra-heading css-k57syw"">Further Research</h3>\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/keys"">Object.keys()<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a> on MDN</li><li class=""css-cvpopp""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/values"">Object.values()<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a> on MDN</li><li class=""css-cvpopp""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""http://tokenposts.blogspot.com.au/2012/04/javascript-objectkeys-browser.html"">Browser Compatibility<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a></li></ul></div>']",[],https://www.youtube.com/embed/mRgapwiy-MQ
Object-Oriented JavaScript,Object-Oriented JavaScript,Lesson 1: Objects in Depth,1.6  Lesson Summary,[],[],https://www.youtube.com/embed/2VGDq4aCdfc
Object-Oriented JavaScript,Object-Oriented JavaScript,Lesson 2: Functions at Runtime,2.1  Introduction,[],[],https://www.youtube.com/embed/GXClOl9Tghc
Object-Oriented JavaScript,Object-Oriented JavaScript,Lesson 2: Functions at Runtime,2.2  First-Class Functions,"['<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://github.com/udacity/OOJS-screencasts/blob/master/L2-functions-at-runtime/4-functions-are-first-class-functions-demo.js"">Here\'s the code from the preceding video.<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">How are JavaScript functions <em class=""chakra-text css-o3oz8b"">first-class</em> functions? Select all that apply:</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">A function can be returned from another function</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">A function can be stored in a variable</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">A function is actually a primitive</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">A function can be passed in as an argument into another function</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://github.com/udacity/OOJS-screencasts/blob/master/L2-functions-at-runtime/9-returning-functions-demo.js"">Here\'s the code from the preceding video.<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a></p></div>', '<div class=""ureact-markdown css-tc5hjw""><h3 class=""chakra-heading css-k57syw"">Further Research</h3>\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://en.wikipedia.org/wiki/First-class_function"">First-class function<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a> on Wikipedia</li></ul></div>']",[],https://www.youtube.com/embed/8VjddoyyG1Q
Object-Oriented JavaScript,Object-Oriented JavaScript,Lesson 2: Functions at Runtime,2.3  Callbacks,"['<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://github.com/udacity/OOJS-screencasts/blob/master/L2-functions-at-runtime/16-callback-demo.js"">Here\'s the code from the preceding video.<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">What is true about callbacks? Select all that apply:</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">A function that is passed as an argument to another function is called a callback.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">A function that takes another function in as an argument is a higher-order function.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Leveraging callbacks is possible because JavaScript functions are <em class=""chakra-text css-o3oz8b"">first-class</em> functions.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Callback functions do not work in the browser.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Consider the following two functions:</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-js"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">function</span><span> </span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">each</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token parameter"">array</span><span class=""token parameter"" style=""color: rgb(15, 43, 61);"">,</span><span class=""token parameter""> callback</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">{</span><span>\n</span><span>  </span><span class=""token control-flow"" style=""color: rgb(15, 43, 61); font-weight: bold;"">for</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">let</span><span> i </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">=</span><span> </span><span class=""token"" style=""color: rgb(2, 124, 124);"">0</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span> i </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">&lt;</span><span> array</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token property-access"">length</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span> i</span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">++</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">{</span><span>\n</span><span>    </span><span class=""token control-flow"" style=""color: rgb(15, 43, 61); font-weight: bold;"">if</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">callback</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span>array</span><span class=""token"" style=""color: rgb(15, 43, 61);"">[</span><span>i</span><span class=""token"" style=""color: rgb(15, 43, 61);"">]</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">{</span><span>\n</span><span>      </span><span class=""token console"" style=""color: rgb(68, 85, 136); font-weight: bold;"">console</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token method property-access"" style=""color: rgb(153, 0, 0); font-weight: bold;"">log</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span>array</span><span class=""token"" style=""color: rgb(15, 43, 61);"">[</span><span>i</span><span class=""token"" style=""color: rgb(15, 43, 61);"">]</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span><span>    </span><span class=""token"" style=""color: rgb(15, 43, 61);"">}</span><span>\n</span><span>  </span><span class=""token"" style=""color: rgb(15, 43, 61);"">}</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(15, 43, 61);"">}</span></code></div></div></pre>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-js"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">function</span><span> </span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">isPositive</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token parameter"">n</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">{</span><span>\n</span><span>  </span><span class=""token control-flow"" style=""color: rgb(15, 43, 61); font-weight: bold;"">return</span><span> n </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">&gt;</span><span> </span><span class=""token"" style=""color: rgb(2, 124, 124);"">0</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(15, 43, 61);"">}</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span></code></div></div></pre>\n<p class=""chakra-text css-o3oz8b"">The following is then executed:</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-apache"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span>each([-2, 7, 11, -4, -10], isPositive);</span></code></div></div></pre>\n<p class=""chakra-text css-o3oz8b"">What is outputted to the console?</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><code class=""chakra-code css-1u83yg1"">-2</code>, <code class=""chakra-code css-1u83yg1"">-4</code>, <code class=""chakra-code css-1u83yg1"">-10</code></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><code class=""chakra-code css-1u83yg1"">-7</code>, <code class=""chakra-code css-1u83yg1"">-11</code></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><code class=""chakra-code css-1u83yg1"">-2</code>, <code class=""chakra-code css-1u83yg1"">7</code>, <code class=""chakra-code css-1u83yg1"">11</code>, <code class=""chakra-code css-1u83yg1"">-4</code>, <code class=""chakra-code css-1u83yg1"">-10</code></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><code class=""chakra-code css-1u83yg1"">7</code>, <code class=""chakra-code css-1u83yg1"">11</code></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://github.com/udacity/OOJS-screencasts/blob/master/L2-functions-at-runtime/22-forEach-demo.js"">Here\'s the code from the preceding video.<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Which of the following are valid ways to iterate through an array and log each value to the console?</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">[1, 2, 3, 4].forEach(function(num) { <br>   &nbsp;&nbsp; console.log(num); <br> });</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">[1, 2, 3, 4].forEach(function() {  <br>   &nbsp;&nbsp; console.log(num);<br> });</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">function logNum (num) {  <br>   &nbsp;&nbsp; console.log(num);<br> }  <br> <br> [1, 2, 3, 4].forEach(logNum);</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">[1, 2, 3, 4].forEach(console.log);</p></div>', '<div class=""ureact-markdown css-tc5hjw""><h3 class=""chakra-heading css-k57syw"">Further Research</h3>\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/prototype"">Array Methods<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a> on MDN</li></ul></div>']",[],https://www.youtube.com/embed/pJfiPKKiu9Q
Object-Oriented JavaScript,Object-Oriented JavaScript,Lesson 2: Functions at Runtime,2.4  Scope,"['<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">If you took <a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://www.udacity.com/course/intro-to-javascript--ud803"">Intro to Javascript<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a>, you learned about <em class=""chakra-text css-o3oz8b"">block</em> scope vs. <em class=""chakra-text css-o3oz8b"">function</em> scope. These determine where a variable can be seen in some code. Computer scientists call this <strong>lexical scope</strong>.</p>\n<p class=""chakra-text css-o3oz8b"">However, there also exists <em class=""chakra-text css-o3oz8b"">another</em> kind of scope called <strong>runtime scope</strong>. When a function is run, it creates a new runtime scope. This scope represents the <em class=""chakra-text css-o3oz8b"">context</em> of the function, or more specifically, the set of variables available for the function to use.</p>\n<p class=""chakra-text css-o3oz8b"">So what exactly <em class=""chakra-text css-o3oz8b"">does</em> a function have access to?</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><em class=""chakra-text css-o3oz8b"">The nested <code class=""chakra-code css-1u83yg1"">child()</code> function has access to all <code class=""chakra-code css-1u83yg1"">a</code>, <code class=""chakra-code css-1u83yg1"">b</code>, and <code class=""chakra-code css-1u83yg1"">c</code> variables. That is, these variables are in the <code class=""chakra-code css-1u83yg1"">child()</code> function\'s scope.</em></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://github.com/udacity/OOJS-screencasts/blob/master/L2-functions-at-runtime/35-scope-demo.js"">Here\'s the code from the preceding video.<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Consider the following:</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-javascript"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">const</span><span> num1 </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">=</span><span> </span><span class=""token"" style=""color: rgb(2, 124, 124);"">5</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span>\n<span></span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">function</span><span> </span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">functionOne</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">{</span><span>\n</span><span>  </span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">const</span><span> num2 </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">=</span><span> </span><span class=""token"" style=""color: rgb(2, 124, 124);"">10</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span>\n<span>  </span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">function</span><span> </span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">functionTwo</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token parameter"">num3</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">{</span><span>\n</span><span>    </span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">const</span><span> num4 </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">=</span><span> </span><span class=""token"" style=""color: rgb(2, 124, 124);"">35</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span>\n<span>    </span><span class=""token control-flow"" style=""color: rgb(15, 43, 61); font-weight: bold;"">return</span><span> num1 </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">+</span><span> num2 </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">+</span><span> num3 </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">+</span><span> num4</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span><span>  </span><span class=""token"" style=""color: rgb(15, 43, 61);"">}</span><span>\n</span>\n<span>  </span><span class=""token control-flow"" style=""color: rgb(15, 43, 61); font-weight: bold;"">return</span><span> </span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">functionTwo</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(2, 124, 124);"">0</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(15, 43, 61);"">}</span></code></div></div></pre>\n<p class=""chakra-text css-o3oz8b"">Which variables does <code class=""chakra-code css-1u83yg1"">functionTwo()</code> have access to? Select all that apply:</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><code class=""chakra-code css-1u83yg1"">num1</code></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><code class=""chakra-code css-1u83yg1"">num2</code></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><code class=""chakra-code css-1u83yg1"">num3</code></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><code class=""chakra-code css-1u83yg1"">num4</code></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">It is indeterminate.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><em class=""chakra-text css-o3oz8b"">When resolving a variable, the JavaScript engine begins by looking at the nested child function\'s locally-defined variables. If found, then the value is retrieved; if not, the JavaScript engine continues to looking outward until the variable is resolved. If the JavaScript engine reaches the global scope and is still unable to resolve the variable, the variable is undefined.</em></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">What will the console display when <code class=""chakra-code css-1u83yg1"">myFunction()</code> is called?</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-js"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">let</span><span> n </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">=</span><span> </span><span class=""token"" style=""color: rgb(2, 124, 124);"">2</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span>\n<span></span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">function</span><span> </span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">myFunction</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">{</span><span>\n</span><span>  </span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">let</span><span> n </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">=</span><span> </span><span class=""token"" style=""color: rgb(2, 124, 124);"">8</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span><span>  </span><span class=""token console"" style=""color: rgb(68, 85, 136); font-weight: bold;"">console</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token method property-access"" style=""color: rgb(153, 0, 0); font-weight: bold;"">log</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span>n</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(15, 43, 61);"">}</span><span>\n</span>\n<span></span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">myFunction</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(113, 113, 101); font-style: italic;"">// ???</span></code></div></div></pre></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><code class=""chakra-code css-1u83yg1"">2</code></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><code class=""chakra-code css-1u83yg1"">8</code></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><code class=""chakra-code css-1u83yg1"">null</code></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><code class=""chakra-code css-1u83yg1"">undefined</code></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">When searching for variables along the scope chain, in what order will the JavaScript interpreter search?</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Local variables</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Parent function\'s variables</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Parent function\'s <em class=""chakra-text css-o3oz8b"">parent function\'s</em> variables</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Global variables</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">1st</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">2nd</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">3rd</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">4th</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">When the following code runs, what is the output of the first, second, and third logs to the console (respectively)?</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-js"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">let</span><span> n </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">=</span><span> </span><span class=""token"" style=""color: rgb(2, 124, 124);"">8</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span>\n<span></span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">function</span><span> </span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">functionOne</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">{</span><span>\n</span><span>  </span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">let</span><span> n </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">=</span><span> </span><span class=""token"" style=""color: rgb(2, 124, 124);"">9</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span>  \n<span>  </span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">function</span><span> </span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">functionTwo</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">{</span><span>\n</span><span>    </span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">let</span><span> n </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">=</span><span> </span><span class=""token"" style=""color: rgb(2, 124, 124);"">10</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span><span>    </span><span class=""token console"" style=""color: rgb(68, 85, 136); font-weight: bold;"">console</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token method property-access"" style=""color: rgb(153, 0, 0); font-weight: bold;"">log</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span>n</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>  </span><span class=""token"" style=""color: rgb(113, 113, 101); font-style: italic;"">// First log</span><span>\n</span><span>  </span><span class=""token"" style=""color: rgb(15, 43, 61);"">}</span><span>\n</span>\n<span>  </span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">functionTwo</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span>\n<span>  </span><span class=""token console"" style=""color: rgb(68, 85, 136); font-weight: bold;"">console</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token method property-access"" style=""color: rgb(153, 0, 0); font-weight: bold;"">log</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span>n</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>  </span><span class=""token"" style=""color: rgb(113, 113, 101); font-style: italic;"">// Second log</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(15, 43, 61);"">}</span><span>\n</span>\n<span></span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">functionOne</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span>\n<span></span><span class=""token console"" style=""color: rgb(68, 85, 136); font-weight: bold;"">console</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token method property-access"" style=""color: rgb(153, 0, 0); font-weight: bold;"">log</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span>n</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>  </span><span class=""token"" style=""color: rgb(113, 113, 101); font-style: italic;"">// Third log</span></code></div></div></pre></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><code class=""chakra-code css-1u83yg1"">8</code>, <code class=""chakra-code css-1u83yg1"">9</code>, <code class=""chakra-code css-1u83yg1"">10</code></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><code class=""chakra-code css-1u83yg1"">10</code>, <code class=""chakra-code css-1u83yg1"">9</code>, <code class=""chakra-code css-1u83yg1"">9</code></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><code class=""chakra-code css-1u83yg1"">9</code>, <code class=""chakra-code css-1u83yg1"">10</code>, <code class=""chakra-code css-1u83yg1"">8</code></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><code class=""chakra-code css-1u83yg1"">10</code>, <code class=""chakra-code css-1u83yg1"">9</code>, <code class=""chakra-code css-1u83yg1"">8</code></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">It is indeterminant.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><h3 class=""chakra-heading css-k57syw"">Further Research</h3>\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://www.udacity.com/course/intro-to-javascript--ud803"">Intro to JavaScript<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a> (Lesson 5\'s coverage of scope)</li><li class=""css-cvpopp"">Douglas Crockford\'s discussion of block-scoped variables in <a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://www.youtube.com/watch?v=Ji6NHEnNHcA&amp;t=26m9s"">The Better Parts<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a></li><li class=""css-cvpopp""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/block#Description"">Block Scoping Rules<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a> on MDN</li><li class=""css-cvpopp""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions"">Functions and Function Scope<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a> on MDN</li></ul></div>']","['https://video.udacity-data.com/topher/2017/December/5a31c70a_l2-34-scope-image/l2-34-scope-image.png', 'https://video.udacity-data.com/topher/2017/December/5a31c70a_l2-42-scope-chain/l2-42-scope-chain.png']",https://www.youtube.com/embed/EZ3owNzefF4
Object-Oriented JavaScript,Object-Oriented JavaScript,Lesson 2: Functions at Runtime,2.5  Closures,"['<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://github.com/udacity/OOJS-screencasts/blob/master/L2-functions-at-runtime/53-closure-demo-1.js"">Here\'s the code from the preceding video.<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">What is true about closures? Select all that apply:</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">A closure is created for a function only if that function is executed.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Scope and closures are largely unrelated topics.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">A function maintains a reference to its parent\'s scope.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">If the reference to a parent function is still accessible, the scope persists.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">What is the output when <code class=""chakra-code css-1u83yg1"">result(10);</code> is executed?</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-js"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">function</span><span> </span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">outerFunction</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">{</span><span>\n</span><span>  </span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">let</span><span> num1 </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">=</span><span> </span><span class=""token"" style=""color: rgb(2, 124, 124);"">5</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span>\n<span>  </span><span class=""token control-flow"" style=""color: rgb(15, 43, 61); font-weight: bold;"">return</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">function</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token parameter"">num2</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">{</span><span>\n</span><span>    </span><span class=""token console"" style=""color: rgb(68, 85, 136); font-weight: bold;"">console</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token method property-access"" style=""color: rgb(153, 0, 0); font-weight: bold;"">log</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span>num1 </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">+</span><span> num2</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span><span>  </span><span class=""token"" style=""color: rgb(15, 43, 61);"">}</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(15, 43, 61);"">}</span><span>\n</span>\n<span></span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">let</span><span> result </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">=</span><span> </span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">outerFunction</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span>\n<span></span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">result</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(2, 124, 124);"">10</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(113, 113, 101); font-style: italic;"">// ???</span></code></div></div></pre></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><code class=""chakra-code css-1u83yg1"">5</code></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><code class=""chakra-code css-1u83yg1"">10</code></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><code class=""chakra-code css-1u83yg1"">15</code></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><code class=""chakra-code css-1u83yg1"">undefined</code></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><code class=""chakra-code css-1u83yg1"">null</code></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><code class=""chakra-code css-1u83yg1"">NaN</code></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://github.com/udacity/OOJS-screencasts/blob/master/L2-functions-at-runtime/57-closure-demo-2.js"">Here\'s the code from the preceding video.<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a></p></div>', '<div class=""ureact-markdown css-tc5hjw""><h3 class=""chakra-heading css-k57syw"">Further Research</h3>\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Memory_Management"">Memory Management<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a> on MDN</li><li class=""css-cvpopp""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Closures"">Closures<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a> on MDN</li><li class=""css-cvpopp""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""http://es5.github.io/#x10.2"">Lexical Environments<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a> in the ES5 spec</li></ul></div>']",[],https://www.youtube.com/embed/qSUqXlJ3CII
Object-Oriented JavaScript,Object-Oriented JavaScript,Lesson 2: Functions at Runtime,2.6  Immediately-Invoked Function Expressions (IIFE),"['<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><em class=""chakra-text css-o3oz8b""><code class=""chakra-code css-1u83yg1"">myFunction</code> refers to an IIFE with a locally-defined variable, <code class=""chakra-code css-1u83yg1"">hi</code>, and a returned function that closes over <code class=""chakra-code css-1u83yg1"">hi</code> and prints its value to the console.</em></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">In the above image, an immediately-invoked function expression is used to immediately run a function. This function runs and returns an anonymous function that is stored in the <code class=""chakra-code css-1u83yg1"">myFunction</code> variable.</p>\n<p class=""chakra-text css-o3oz8b"">Note that the function that is being returned closes over (i.e., <em class=""chakra-text css-o3oz8b"">captures</em>) the <code class=""chakra-code css-1u83yg1"">hi</code> variable. This allows <code class=""chakra-code css-1u83yg1"">myFunction</code> to maintain a private, mutable state that cannot be accessed outside the function! What\'s more: because the function expressed is called immediately, the IIFE wraps up the code nicely so that we don\'t pollute the global scope.</p>\n<p class=""chakra-text css-o3oz8b"">If any of this sounds familiar -- it\'s because IIFE\'s are <em class=""chakra-text css-o3oz8b"">very</em> closely related to everything you\'ve learned about scope and closures!</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">What is true about immediately-invoked function expressions? Select all that apply:</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">IIFE\'s can be used to create private scope</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">IIFE\'s are generally written without parentheses</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">IIFE\'s are very closely associated with scope and closures</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">There is an alternative syntax for writing an IIFE</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Here\'s the code from the preceding video:</p>\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://github.com/udacity/OOJS-screencasts/blob/master/L2-functions-at-runtime/button.html"">button.html<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a></li><li class=""css-cvpopp""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://github.com/udacity/OOJS-screencasts/blob/master/L2-functions-at-runtime/button.js"">button.js<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a></li></ul></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">The following immediately-invoked function expression is run in the browser:</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-js"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">function</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token parameter"">n</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">{</span><span>\n</span><span>  </span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">delete</span><span> n</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span><span>  </span><span class=""token control-flow"" style=""color: rgb(15, 43, 61); font-weight: bold;"">return</span><span> n</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(15, 43, 61);"">}</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(2, 124, 124);"">2</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span></code></div></div></pre>\n<p class=""chakra-text css-o3oz8b"">What is the return value?</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><code class=""chakra-code css-1u83yg1"">undefined</code></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><code class=""chakra-code css-1u83yg1"">null</code></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><code class=""chakra-code css-1u83yg1"">NaN</code></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><code class=""chakra-code css-1u83yg1"">2</code></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">The console will throw an error.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><h3 class=""chakra-heading css-k57syw"">Further Research</h3>\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://javascriptweblog.wordpress.com/2010/07/06/function-declarations-vs-function-expressions/"">Function Declarations vs. Function Expressions<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a></li><li class=""css-cvpopp""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""http://adripofjavascript.com/blog/drips/an-introduction-to-iffes-immediately-invoked-function-expressions.html"">An Introduction to IIFEs - Immediately Invoked Function Expressions<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a> on A Drip of JavaScript</li><li class=""css-cvpopp""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""http://benalman.com/news/2010/11/immediately-invoked-function-expression/"">Immediately-Invoked Function Expression (IIFE)<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a> by Ben Alman</li></ul></div>']",['https://video.udacity-data.com/topher/2017/December/5a31c70b_l2-67-iife-with-a-closure/l2-67-iife-with-a-closure.png'],https://www.youtube.com/embed/jHrk_5erjxE
Object-Oriented JavaScript,Object-Oriented JavaScript,Lesson 2: Functions at Runtime,2.7  Lesson Summary,"['<div class=""ureact-markdown css-tc5hjw""><h3 class=""chakra-heading css-k57syw"">Further Research</h3>\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp"">Addy Osmani\'s <a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://addyosmani.com/resources/essentialjsdesignpatterns/book/"">Learning JavaScript Design Patterns<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a></li></ul></div>']",[],https://www.youtube.com/embed/GHUgAUd6YoE
Object-Oriented JavaScript,Object-Oriented JavaScript,Lesson 3: Classes and Objects,3.1  Introduction,"['<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Find something around you and create an object of its properties and methods.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Now it\'s your turn! Take some time to look around your area for objects and reflect on ways that they can be grouped. For example, perhaps a tumbler and a mug each belong to a <code class=""chakra-code css-1u83yg1"">Cup</code> class. Or, maybe a corgi belongs a <code class=""chakra-code css-1u83yg1"">Dog</code> class, and a <code class=""chakra-code css-1u83yg1"">sunflower</code> belongs to a <code class=""chakra-code css-1u83yg1"">Flower</code> class.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">I have reflected on nearby objects and ways that they can be grouped.</p></div>']",[],https://www.youtube.com/embed/ZkmB9xKYrVg
Object-Oriented JavaScript,Object-Oriented JavaScript,Lesson 3: Classes and Objects,3.2  Constructor Functions,"['<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Previously, we have created objects using the object literal notation. Likewise, we can even write functions that <em class=""chakra-text css-o3oz8b"">return</em> objects. There is yet another way for us to create objects, and it is the foundation of object-oriented JavaScript: the <strong>constructor function</strong>. We saw a bit of it back in Lesson 1 when invoking the <code class=""chakra-code css-1u83yg1"">Object()</code> constructor function. Now, let\'s take a deeper dive into it!</p>\n<p class=""chakra-text css-o3oz8b"">To instantiate (i.e., <em class=""chakra-text css-o3oz8b"">create</em>) a new object, we use the <code class=""chakra-code css-1u83yg1"">new</code> operator to invoke the function:</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-js"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">new</span><span> </span><span class=""token"" style=""color: rgb(68, 85, 136); font-weight: bold;"">SoftwareDeveloper</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span></code></div></div></pre>\n<p class=""chakra-text css-o3oz8b"">The first thing to note above is the use of the <code class=""chakra-code css-1u83yg1"">new</code> keyword. Second, note that the name of the constructor function, <code class=""chakra-code css-1u83yg1"">SoftwareDeveloper()</code>, is written with the first letter capitalized to <em class=""chakra-text css-o3oz8b"">visually</em> distinguish it from a regular function.</p>\n<p class=""chakra-text css-o3oz8b"">Keep in mind that even though the function\'s name starts with a capital, that doesn\'t <em class=""chakra-text css-o3oz8b"">automatically</em> make this a constructor function (i.e., though developers name constructor functions in CamelCase by convention, it is <em class=""chakra-text css-o3oz8b"">not</em> enforced by the language). What <em class=""chakra-text css-o3oz8b"">does</em> make <code class=""chakra-code css-1u83yg1"">SoftwareDeveloper()</code> a constructor function are:</p>\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp"">The use of the <code class=""chakra-code css-1u83yg1"">new</code> operator to invoke the function</li><li class=""css-cvpopp"">How the function is coded internally (which we\'ll look at right now!)</li></ul>\n<h3 class=""chakra-heading css-k57syw"">Constructor Functions: Structure and Syntax</h3>\n<p class=""chakra-text css-o3oz8b"">This is what the internals of a constructor function looks like:</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-js"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">function</span><span> </span><span class=""token maybe-class-name"" style=""color: rgb(153, 0, 0); font-weight: bold;"">SoftwareDeveloper</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">{</span><span>\n</span><span>  </span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">this</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token property-access"">favoriteLanguage</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">=</span><span> </span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'JavaScript\'</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(15, 43, 61);"">}</span></code></div></div></pre>\n<p class=""chakra-text css-o3oz8b"">This might seem a bit different than the functions you\'ve written up to this point, so let\'s break it down!</p>\n<p class=""chakra-text css-o3oz8b"">First, rather than declaring local variables, constructor functions persist data with the <code class=""chakra-code css-1u83yg1"">this</code> keyword. The above function will add a <code class=""chakra-code css-1u83yg1"">favoriteLanguage</code> property to any object that it creates, and assigns it a default value of <code class=""chakra-code css-1u83yg1"">\'JavaScript\'</code>. Don\'t worry too much about <code class=""chakra-code css-1u83yg1"">this</code> in a constructor function for now; just know that <code class=""chakra-code css-1u83yg1"">this</code> refers to the new object that was created by using the <code class=""chakra-code css-1u83yg1"">new</code> keyword in front of the constructor function. We\'ll go into more detail about <code class=""chakra-code css-1u83yg1"">this</code> soon!</p>\n<p class=""chakra-text css-o3oz8b"">One last thing that might seem unusual is that this function doesn\'t seem to return anything! Constructor functions in JavaScript <em class=""chakra-text css-o3oz8b"">should not</em> have an explicit return value (i.e., there should <em class=""chakra-text css-o3oz8b"">not</em> be <code class=""chakra-code css-1u83yg1"">return</code> statement).</p>\n<p class=""chakra-text css-o3oz8b"">Great! Now that we\'ve seen the structure and syntax of a constructor, how can we use it to create an object?</p>\n<h3 class=""chakra-heading css-k57syw"">Creating a New Object</h3>\n<p class=""chakra-text css-o3oz8b"">As we\'ve seen above, let\'s use the <code class=""chakra-code css-1u83yg1"">new</code> operator to create a new object:</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-js"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">let</span><span> developer </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">=</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">new</span><span> </span><span class=""token"" style=""color: rgb(68, 85, 136); font-weight: bold;"">SoftwareDeveloper</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span></code></div></div></pre>\n<p class=""chakra-text css-o3oz8b"">We\'ve saved the return value of this invocation to the variable <code class=""chakra-code css-1u83yg1"">developer</code>. Let\'s execute <code class=""chakra-code css-1u83yg1"">console.log(developer);</code> to log this <code class=""chakra-code css-1u83yg1"">SoftwareDeveloper</code> object to the console:</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><em class=""chakra-text css-o3oz8b"">The <code class=""chakra-code css-1u83yg1"">SoftwareDeveloper</code> object is logged to the console.</em></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://github.com/udacity/OOJS-screencasts/blob/master/L3-objects-and-classes/11-comparing-objects.js"">Here\'s the code from the preceding video.<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a></p></div>', '<div class=""ureact-markdown css-tc5hjw""><h3 class=""chakra-heading css-k57syw"">Creating Multiple Objects</h3>\n<p class=""chakra-text css-o3oz8b"">What\'s more: we can even use the <em class=""chakra-text css-o3oz8b"">same</em> constructor function to create as many objects as we\'d like!</p>\n<p class=""chakra-text css-o3oz8b"">Let\'s invoke the same <code class=""chakra-code css-1u83yg1"">SoftwareDeveloper()</code> constructor two more times to instantiate two additional objects: <code class=""chakra-code css-1u83yg1"">engineer</code> and <code class=""chakra-code css-1u83yg1"">programmer</code>.</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-js"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">let</span><span> engineer </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">=</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">new</span><span> </span><span class=""token"" style=""color: rgb(68, 85, 136); font-weight: bold;"">SoftwareDeveloper</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">let</span><span> programmer </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">=</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">new</span><span> </span><span class=""token"" style=""color: rgb(68, 85, 136); font-weight: bold;"">SoftwareDeveloper</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span>\n<span></span><span class=""token console"" style=""color: rgb(68, 85, 136); font-weight: bold;"">console</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token method property-access"" style=""color: rgb(153, 0, 0); font-weight: bold;"">log</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span>engineer</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(113, 113, 101); font-style: italic;"">// SoftwareDeveloper { favoriteLanguage: \'JavaScript\' }</span><span>\n</span>\n<span></span><span class=""token console"" style=""color: rgb(68, 85, 136); font-weight: bold;"">console</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token method property-access"" style=""color: rgb(153, 0, 0); font-weight: bold;"">log</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span>programmer</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(113, 113, 101); font-style: italic;"">// SoftwareDeveloper { favoriteLanguage: \'JavaScript\' }</span></code></div></div></pre></div>', '<div class=""ureact-markdown css-tc5hjw""><h3 class=""chakra-heading css-k57syw"">Constructor Functions Can Have Parameters</h3>\n<p class=""chakra-text css-o3oz8b"">Just like regular functions, one benefit of using constructor functions is that they can also accept arguments. Let\'s update the constructor above to accept a single argument, and assign the <code class=""chakra-code css-1u83yg1"">name</code> property to it:</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-js"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">function</span><span> </span><span class=""token maybe-class-name"" style=""color: rgb(153, 0, 0); font-weight: bold;"">SoftwareDeveloper</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token parameter"">name</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">{</span><span>\n</span><span>  </span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">this</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token property-access"">favoriteLanguage</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">=</span><span> </span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'JavaScript\'</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span><span>  </span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">this</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token property-access"">name</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">=</span><span> name</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(15, 43, 61);"">}</span></code></div></div></pre>\n<p class=""chakra-text css-o3oz8b"">In the updated <code class=""chakra-code css-1u83yg1"">SoftwareDeveloper()</code> function, whatever value is passed into the function will be the value of the object\'s <code class=""chakra-code css-1u83yg1"">name</code> property. Let\'s check it out:</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-js"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">let</span><span> instructor </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">=</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">new</span><span> </span><span class=""token"" style=""color: rgb(68, 85, 136); font-weight: bold;"">SoftwareDeveloper</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'Andrew\'</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span>\n<span></span><span class=""token console"" style=""color: rgb(68, 85, 136); font-weight: bold;"">console</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token method property-access"" style=""color: rgb(153, 0, 0); font-weight: bold;"">log</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span>instructor</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(113, 113, 101); font-style: italic;"">// SoftwareDeveloper { favoriteLanguage: \'JavaScript\', name: \'Andrew\' }</span></code></div></div></pre>\n<p class=""chakra-text css-o3oz8b"">Great! And as we\'ve seen above, we can create different objects using the same constructor. Let\'s call the same constructor function but pass a different argument this time:</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-js"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">let</span><span> teacher </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">=</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">new</span><span> </span><span class=""token"" style=""color: rgb(68, 85, 136); font-weight: bold;"">SoftwareDeveloper</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'Richard\'</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span>\n<span></span><span class=""token console"" style=""color: rgb(68, 85, 136); font-weight: bold;"">console</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token method property-access"" style=""color: rgb(153, 0, 0); font-weight: bold;"">log</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span>teacher</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(113, 113, 101); font-style: italic;"">// SoftwareDeveloper { favoriteLanguage: \'JavaScript\', name: \'Richard\' }</span></code></div></div></pre>\n<p class=""chakra-text css-o3oz8b"">Just to recap: above, we passed the string <code class=""chakra-code css-1u83yg1"">\'Richard\'</code> into the <code class=""chakra-code css-1u83yg1"">SoftwareDeveloper()</code> constructor function, then instantiated a new object. <code class=""chakra-code css-1u83yg1"">\'Richard\'</code> then became the value of the <code class=""chakra-code css-1u83yg1"">name</code> property in the <code class=""chakra-code css-1u83yg1"">teacher</code> object.</p>\n<p class=""chakra-text css-o3oz8b"">Let\'s check out another example!</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://github.com/udacity/OOJS-screencasts/blob/master/L3-objects-and-classes/15-instantiating-an-object.js"">Here\'s the code from the preceding video.<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Which of the following about constructor functions are true? Constructor functions (select all that apply)...</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">should have a <code class=""chakra-code css-1u83yg1"">return</code> statement</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">must be invoked with <code class=""chakra-code css-1u83yg1"">new</code></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">are used to instantiate a new object</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">can have at most two parameters/arguments</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">What happens if a constructor function begins with a lower-case letter?</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">A new object isn\'t created.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">An error occurs.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><code class=""chakra-code css-1u83yg1"">this</code> cannot be used inside a function.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Nothing. It will still work.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://github.com/udacity/OOJS-screencasts/blob/master/L3-objects-and-classes/22-how-to-view-constructor-references.js"">Here\'s the code from the preceding video.<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Consider the following constructors:</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-js"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">function</span><span> </span><span class=""token maybe-class-name"" style=""color: rgb(153, 0, 0); font-weight: bold;"">Finch</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token parameter"">name</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">{</span><span>\n</span><span>  </span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">this</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token property-access"">kingdom</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">=</span><span> </span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'Animalia\'</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span><span>  </span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">this</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token property-access"">name</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">=</span><span> name</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(15, 43, 61);"">}</span><span>\n</span>\n<span></span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">function</span><span> </span><span class=""token maybe-class-name"" style=""color: rgb(153, 0, 0); font-weight: bold;"">Sparrow</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token parameter"">name</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">{</span><span>\n</span><span>  </span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">this</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token property-access"">kingdom</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">=</span><span> </span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'Animalia\'</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span><span>  </span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">this</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token property-access"">name</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">=</span><span> name</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(15, 43, 61);"">}</span></code></div></div></pre>\n<p class=""chakra-text css-o3oz8b"">Let\'s create an instance of each constructor:</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-js"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">const</span><span> atticus </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">=</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">new</span><span> </span><span class=""token"" style=""color: rgb(68, 85, 136); font-weight: bold;"">Finch</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'Atticus\'</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">const</span><span> jack </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">=</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">new</span><span> </span><span class=""token"" style=""color: rgb(68, 85, 136); font-weight: bold;"">Sparrow</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'Jack\'</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span></code></div></div></pre>\n<p class=""chakra-text css-o3oz8b"">What is the result when <code class=""chakra-code css-1u83yg1"">atticus instanceof Sparrow;</code> is executed?</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><code class=""chakra-code css-1u83yg1"">true</code></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><code class=""chakra-code css-1u83yg1"">false</code></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><code class=""chakra-code css-1u83yg1"">undefined</code></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><code class=""chakra-code css-1u83yg1"">null</code></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">The console throws an error</p></div>', '<div class=""ureact-markdown css-tc5hjw""><h3 class=""chakra-heading css-k57syw"">Further Research</h3>\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/new"">The new operator<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a> on MDN</li><li class=""css-cvpopp""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/instanceof"">The instanceof operator<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a> on MDN</li></ul></div>']",['https://video.udacity-data.com/topher/2017/December/5a31c70b_l3-10-object-from-constructor-function/l3-10-object-from-constructor-function.png'],https://www.youtube.com/embed/7XpQpOnkCSk
Object-Oriented JavaScript,Object-Oriented JavaScript,Lesson 3: Classes and Objects,3.3  The `this` Keyword,"['<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Time for a quick review! We explored the <code class=""chakra-code css-1u83yg1"">this</code> keyword a bit in Lesson 1, so let\'s make sure we\'re on the same page before continuing.</p>\n<p class=""chakra-text css-o3oz8b"">What is true about <code class=""chakra-code css-1u83yg1"">this</code>? Select all that apply:</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><code class=""chakra-code css-1u83yg1"">this</code> refers to ""this property,"" or ""this method""</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Using <code class=""chakra-code css-1u83yg1"">this</code>, methods can access and manipulate an object\'s properties</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">The exact value of <code class=""chakra-code css-1u83yg1"">this</code> is already set before a method is invoked</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><code class=""chakra-code css-1u83yg1"">this</code> is a reserved word in JavaScript</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Consider the following constructor function, <code class=""chakra-code css-1u83yg1"">City</code>:</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-js"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">function</span><span> </span><span class=""token maybe-class-name"" style=""color: rgb(153, 0, 0); font-weight: bold;"">City</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token parameter"">name</span><span class=""token parameter"" style=""color: rgb(15, 43, 61);"">,</span><span class=""token parameter""> population</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">{</span><span>\n</span><span>  </span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">this</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token property-access"">name</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">=</span><span> name</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span><span>  </span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">this</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token property-access"">population</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">=</span><span> population</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span>\n<span>  </span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">this</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token method-variable function-variable method property-access"" style=""color: rgb(153, 0, 0); font-weight: bold;"">identify</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">=</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">function</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">{</span><span>\n</span><span>    </span><span class=""token console"" style=""color: rgb(68, 85, 136); font-weight: bold;"">console</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token method property-access"" style=""color: rgb(153, 0, 0); font-weight: bold;"">log</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token template-string template-punctuation"" style=""color: rgb(221, 17, 68);"">`</span><span class=""token template-string interpolation interpolation-punctuation"" style=""color: rgb(15, 43, 61);"">${</span><span class=""token template-string interpolation"" style=""color: rgb(15, 43, 61); font-weight: bold;"">this</span><span class=""token template-string interpolation"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token template-string interpolation property-access"">name</span><span class=""token template-string interpolation interpolation-punctuation"" style=""color: rgb(15, 43, 61);"">}</span><span class=""token template-string"" style=""color: rgb(221, 17, 68);"">\'s population is </span><span class=""token template-string interpolation interpolation-punctuation"" style=""color: rgb(15, 43, 61);"">${</span><span class=""token template-string interpolation"" style=""color: rgb(15, 43, 61); font-weight: bold;"">this</span><span class=""token template-string interpolation"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token template-string interpolation property-access"">population</span><span class=""token template-string interpolation interpolation-punctuation"" style=""color: rgb(15, 43, 61);"">}</span><span class=""token template-string"" style=""color: rgb(221, 17, 68);"">.</span><span class=""token template-string template-punctuation"" style=""color: rgb(221, 17, 68);"">`</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span><span>  </span><span class=""token"" style=""color: rgb(15, 43, 61);"">}</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(15, 43, 61);"">}</span></code></div></div></pre>\n<p class=""chakra-text css-o3oz8b"">The following is executed:</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-js"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">const</span><span> sanFrancisco </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">=</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">new</span><span> </span><span class=""token"" style=""color: rgb(68, 85, 136); font-weight: bold;"">City</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'San Francisco\'</span><span class=""token"" style=""color: rgb(15, 43, 61);"">,</span><span> </span><span class=""token"" style=""color: rgb(2, 124, 124);"">870000</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span></code></div></div></pre>\n<p class=""chakra-text css-o3oz8b"">What is the value of <code class=""chakra-code css-1u83yg1"">this</code>?</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><code class=""chakra-code css-1u83yg1"">City</code></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Any property (such as <code class=""chakra-code css-1u83yg1"">name</code>, or <code class=""chakra-code css-1u83yg1"">population</code>)</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><code class=""chakra-code css-1u83yg1"">undefined</code>, because <code class=""chakra-code css-1u83yg1"">this</code> must always be inside an <em class=""chakra-text css-o3oz8b"">object</em> (i.e., in a method), not a constructor function</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">The newly-created object, referenced by <code class=""chakra-code css-1u83yg1"">sanFrancisco</code></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><em class=""chakra-text css-o3oz8b"">If a constructor function is called with the <code class=""chakra-code css-1u83yg1"">new</code> operator, the value of <code class=""chakra-code css-1u83yg1"">this</code> is set to the newly-created object. If a method is invoked on an object, <code class=""chakra-code css-1u83yg1"">this</code> is set to that object itself. And if a function is simply invoked, <code class=""chakra-code css-1u83yg1"">this</code> is set to the global object: <code class=""chakra-code css-1u83yg1"">window</code>.</em></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Consider the following object, <code class=""chakra-code css-1u83yg1"">building</code>:</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-js"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">const</span><span> building </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">=</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">{</span><span>\n</span><span>  </span><span class=""token literal-property"" style=""color: rgb(2, 124, 124);"">floors</span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">:</span><span> </span><span class=""token"" style=""color: rgb(2, 124, 124);"">5</span><span class=""token"" style=""color: rgb(15, 43, 61);"">,</span><span>\n</span><span>  </span><span class=""token function-variable"" style=""color: rgb(153, 0, 0); font-weight: bold;"">addFloor</span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">:</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">function</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">{</span><span>\n</span><span>    </span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">this</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token property-access"">floors</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">+=</span><span> </span><span class=""token"" style=""color: rgb(2, 124, 124);"">1</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span><span>  </span><span class=""token"" style=""color: rgb(15, 43, 61);"">}</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(15, 43, 61);"">}</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span>\n<span>building</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token method property-access"" style=""color: rgb(153, 0, 0); font-weight: bold;"">addFloor</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(113, 113, 101); font-style: italic;"">// ???</span></code></div></div></pre>\n<p class=""chakra-text css-o3oz8b"">What is the value of <code class=""chakra-code css-1u83yg1"">this</code> when <code class=""chakra-code css-1u83yg1"">building.addFloor();</code> is executed?</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><code class=""chakra-code css-1u83yg1"">window</code></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><code class=""chakra-code css-1u83yg1"">building</code></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><code class=""chakra-code css-1u83yg1"">undefined</code></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><code class=""chakra-code css-1u83yg1"">addFloor()</code> will return an error because <code class=""chakra-code css-1u83yg1"">this.floors += 1;</code> cannot be resolved</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Consider the following:</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-js"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">function</span><span> </span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">myFunction</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">{</span><span>\n</span><span>  </span><span class=""token console"" style=""color: rgb(68, 85, 136); font-weight: bold;"">console</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token method property-access"" style=""color: rgb(153, 0, 0); font-weight: bold;"">log</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(221, 17, 68);"">""What is the value of \'this\'?""</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(15, 43, 61);"">}</span><span>\n</span>\n<span></span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">myFunction</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(113, 113, 101); font-style: italic;"">// ???</span></code></div></div></pre>\n<p class=""chakra-text css-o3oz8b"">When <code class=""chakra-code css-1u83yg1"">myFunction();</code> is executed, what is the value of the <code class=""chakra-code css-1u83yg1"">this</code> keyword?</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><code class=""chakra-code css-1u83yg1"">myFunction</code></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><code class=""chakra-code css-1u83yg1"">undefined</code></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><code class=""chakra-code css-1u83yg1"">this</code> does not get set to any value when a function is invoked</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><code class=""chakra-code css-1u83yg1"">window</code></p></div>', '<div class=""ureact-markdown css-tc5hjw""><h3 class=""chakra-heading css-k57syw"">Further Research</h3>\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/this"">The this operator<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a> on MDN</li></ul></div>']",['https://video.udacity-data.com/topher/2017/December/5a31c70c_l3-53-this-grid-2/l3-53-this-grid-2.png'],https://www.youtube.com/embed/v2yF-ItJdzY
Object-Oriented JavaScript,Object-Oriented JavaScript,Lesson 3: Classes and Objects,3.4  Setting Our Own `this`,"['<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Recall that functions, objects, and the <code class=""chakra-code css-1u83yg1"">this</code> keyword are all interconnected. Whether you\'re invoking a constructor function with the <code class=""chakra-code css-1u83yg1"">new</code> operator, invoking a method on an object, or simply invoking a function normally -- each form of invocation sets the value of <code class=""chakra-code css-1u83yg1"">this</code> a bit differently.</p>\n<p class=""chakra-text css-o3oz8b"">But what if we want to set the value of <code class=""chakra-code css-1u83yg1"">this</code> ourselves? JavaScript offers a few methods that can do just that!</p></div>', '<div class=""ureact-markdown css-tc5hjw""><h3 class=""chakra-heading css-k57syw"">Choosing One Method Over the Other</h3>\n<p class=""chakra-text css-o3oz8b"">Both <code class=""chakra-code css-1u83yg1"">call()</code> and <code class=""chakra-code css-1u83yg1"">apply()</code> invoke a function in the scope of the first argument passed in them (i.e., the object to be the value of <code class=""chakra-code css-1u83yg1"">this</code>). So when would you choose <code class=""chakra-code css-1u83yg1"">call()</code> over <code class=""chakra-code css-1u83yg1"">apply()</code>, or vice versa?</p>\n<p class=""chakra-text css-o3oz8b""><code class=""chakra-code css-1u83yg1"">call()</code> may be limited if you don\'t know ahead of time the number of arguments that the function needs. In this case, <code class=""chakra-code css-1u83yg1"">apply()</code> would be a better option, since it simply takes an array of arguments, then unpacks them to pass along to the function. Keep in mind that the unpacking comes at a minor performance cost, but it shouldn\'t be much of an issue.</p>\n<p class=""chakra-text css-o3oz8b"">Let\'s now see <code class=""chakra-code css-1u83yg1"">call()</code> and <code class=""chakra-code css-1u83yg1"">apply()</code> in action!</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://github.com/udacity/OOJS-screencasts/blob/master/L3-objects-and-classes/44-invoking-functions-demo.js"">Here\'s the code from the preceding video.<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Consider the following <code class=""chakra-code css-1u83yg1"">dave</code> object, and the <code class=""chakra-code css-1u83yg1"">sayHello()</code> function:</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-js"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">const</span><span> dave </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">=</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">{</span><span>\n</span><span>  </span><span class=""token literal-property"" style=""color: rgb(2, 124, 124);"">name</span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">:</span><span> </span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'Dave\'</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(15, 43, 61);"">}</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span>\n<span></span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">function</span><span> </span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">sayHello</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token parameter"">message</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">{</span><span>\n</span><span>  </span><span class=""token console"" style=""color: rgb(68, 85, 136); font-weight: bold;"">console</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token method property-access"" style=""color: rgb(153, 0, 0); font-weight: bold;"">log</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token template-string template-punctuation"" style=""color: rgb(221, 17, 68);"">`</span><span class=""token template-string interpolation interpolation-punctuation"" style=""color: rgb(15, 43, 61);"">${</span><span class=""token template-string interpolation"">message</span><span class=""token template-string interpolation interpolation-punctuation"" style=""color: rgb(15, 43, 61);"">}</span><span class=""token template-string"" style=""color: rgb(221, 17, 68);"">, </span><span class=""token template-string interpolation interpolation-punctuation"" style=""color: rgb(15, 43, 61);"">${</span><span class=""token template-string interpolation"" style=""color: rgb(15, 43, 61); font-weight: bold;"">this</span><span class=""token template-string interpolation"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token template-string interpolation property-access"">name</span><span class=""token template-string interpolation interpolation-punctuation"" style=""color: rgb(15, 43, 61);"">}</span><span class=""token template-string"" style=""color: rgb(221, 17, 68);"">. You\'re looking well today.</span><span class=""token template-string template-punctuation"" style=""color: rgb(221, 17, 68);"">`</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(15, 43, 61);"">}</span></code></div></div></pre>\n<p class=""chakra-text css-o3oz8b"">Let\'s say you want the message <code class=""chakra-code css-1u83yg1"">\'Hello, Dave. You\'re looking well today.\'</code> printed to the console.</p>\n<p class=""chakra-text css-o3oz8b"">Which of the following expressions could you write to accomplish that?</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><code class=""chakra-code css-1u83yg1"">dave.apply(sayHello(\'Hello\'));</code></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><code class=""chakra-code css-1u83yg1"">dave.sayHello(\'Hello\');</code></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><code class=""chakra-code css-1u83yg1"">sayHello.apply(dave, [\'Hello\']);</code></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">It is not possible. <code class=""chakra-code css-1u83yg1"">sayHello()</code> <em class=""chakra-text css-o3oz8b"">must</em> be called as a method (i.e., invoked onto an object directly) in order to set <code class=""chakra-code css-1u83yg1"">this</code> properly.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Consider the following <code class=""chakra-code css-1u83yg1"">Andrew</code> and <code class=""chakra-code css-1u83yg1"">Richard</code> objects:</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-js"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">const</span><span> </span><span class=""token maybe-class-name"">Andrew</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">=</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">{</span><span>\n</span><span>  </span><span class=""token literal-property"" style=""color: rgb(2, 124, 124);"">name</span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">:</span><span> </span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'Andrew\'</span><span class=""token"" style=""color: rgb(15, 43, 61);"">,</span><span>\n</span><span>  </span><span class=""token function-variable"" style=""color: rgb(153, 0, 0); font-weight: bold;"">introduce</span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">:</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">function</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">{</span><span>\n</span><span>    </span><span class=""token console"" style=""color: rgb(68, 85, 136); font-weight: bold;"">console</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token method property-access"" style=""color: rgb(153, 0, 0); font-weight: bold;"">log</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token template-string template-punctuation"" style=""color: rgb(221, 17, 68);"">`</span><span class=""token template-string"" style=""color: rgb(221, 17, 68);"">Hi, my name is </span><span class=""token template-string interpolation interpolation-punctuation"" style=""color: rgb(15, 43, 61);"">${</span><span class=""token template-string interpolation"" style=""color: rgb(15, 43, 61); font-weight: bold;"">this</span><span class=""token template-string interpolation"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token template-string interpolation property-access"">name</span><span class=""token template-string interpolation interpolation-punctuation"" style=""color: rgb(15, 43, 61);"">}</span><span class=""token template-string"" style=""color: rgb(221, 17, 68);"">!</span><span class=""token template-string template-punctuation"" style=""color: rgb(221, 17, 68);"">`</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span><span>  </span><span class=""token"" style=""color: rgb(15, 43, 61);"">}</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(15, 43, 61);"">}</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span></code></div></div></pre>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-js"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">const</span><span> </span><span class=""token maybe-class-name"">Richard</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">=</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">{</span><span>\n</span><span>  </span><span class=""token literal-property"" style=""color: rgb(2, 124, 124);"">name</span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">:</span><span> </span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'Richard\'</span><span class=""token"" style=""color: rgb(15, 43, 61);"">,</span><span>\n</span><span>  </span><span class=""token function-variable"" style=""color: rgb(153, 0, 0); font-weight: bold;"">introduce</span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">:</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">function</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">{</span><span>\n</span><span>    </span><span class=""token console"" style=""color: rgb(68, 85, 136); font-weight: bold;"">console</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token method property-access"" style=""color: rgb(153, 0, 0); font-weight: bold;"">log</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token template-string template-punctuation"" style=""color: rgb(221, 17, 68);"">`</span><span class=""token template-string"" style=""color: rgb(221, 17, 68);"">Hello there! I\'m </span><span class=""token template-string interpolation interpolation-punctuation"" style=""color: rgb(15, 43, 61);"">${</span><span class=""token template-string interpolation"" style=""color: rgb(15, 43, 61); font-weight: bold;"">this</span><span class=""token template-string interpolation"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token template-string interpolation property-access"">name</span><span class=""token template-string interpolation interpolation-punctuation"" style=""color: rgb(15, 43, 61);"">}</span><span class=""token template-string"" style=""color: rgb(221, 17, 68);"">.</span><span class=""token template-string template-punctuation"" style=""color: rgb(221, 17, 68);"">`</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span><span>  </span><span class=""token"" style=""color: rgb(15, 43, 61);"">}</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(15, 43, 61);"">}</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span></code></div></div></pre>\n<p class=""chakra-text css-o3oz8b"">When <code class=""chakra-code css-1u83yg1"">Richard.introduce.call(Andrew);</code> is executed, what is logged to the console?</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><code class=""chakra-code css-1u83yg1"">\'Hello there! I\'m Andrew.\'</code></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><code class=""chakra-code css-1u83yg1"">\'Hello there! I\'m Richard.\'</code></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><code class=""chakra-code css-1u83yg1"">\'Hi, my name is Richard!\'</code></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><code class=""chakra-code css-1u83yg1"">\'Hi, my name is Andrew!\'</code></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Consider the following:</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-js"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">const</span><span> andrew </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">=</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">{</span><span>\n</span><span>  </span><span class=""token literal-property"" style=""color: rgb(2, 124, 124);"">name</span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">:</span><span> </span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'Andrew\'</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(15, 43, 61);"">}</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span>\n<span></span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">function</span><span> </span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">introduce</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token parameter"">language</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">{</span><span>\n</span><span>  </span><span class=""token console"" style=""color: rgb(68, 85, 136); font-weight: bold;"">console</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token method property-access"" style=""color: rgb(153, 0, 0); font-weight: bold;"">log</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token template-string template-punctuation"" style=""color: rgb(221, 17, 68);"">`</span><span class=""token template-string"" style=""color: rgb(221, 17, 68);"">I\'m </span><span class=""token template-string interpolation interpolation-punctuation"" style=""color: rgb(15, 43, 61);"">${</span><span class=""token template-string interpolation"" style=""color: rgb(15, 43, 61); font-weight: bold;"">this</span><span class=""token template-string interpolation"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token template-string interpolation property-access"">name</span><span class=""token template-string interpolation interpolation-punctuation"" style=""color: rgb(15, 43, 61);"">}</span><span class=""token template-string"" style=""color: rgb(221, 17, 68);""> and my favorite programming language is </span><span class=""token template-string interpolation interpolation-punctuation"" style=""color: rgb(15, 43, 61);"">${</span><span class=""token template-string interpolation"">language</span><span class=""token template-string interpolation interpolation-punctuation"" style=""color: rgb(15, 43, 61);"">}</span><span class=""token template-string"" style=""color: rgb(221, 17, 68);"">.</span><span class=""token template-string template-punctuation"" style=""color: rgb(221, 17, 68);"">`</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(15, 43, 61);"">}</span></code></div></div></pre>\n<p class=""chakra-text css-o3oz8b"">Write an expression that uses the <code class=""chakra-code css-1u83yg1"">call()</code> method to produce the message: <code class=""chakra-code css-1u83yg1"">\'I\'m Andrew and my favorite programming language is JavaScript.\'</code></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://github.com/udacity/OOJS-screencasts/blob/master/L3-objects-and-classes/50-callbacks-and-this-demo.js"">Here\'s the code from the preceding video.<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><em class=""chakra-text css-o3oz8b"">If a constructor function is called with the <code class=""chakra-code css-1u83yg1"">new</code> operator, the value of <code class=""chakra-code css-1u83yg1"">this</code> is set to the newly-created object. If a method is invoked on an object, <code class=""chakra-code css-1u83yg1"">this</code> is set to that object itself. And if a function is simply invoked, <code class=""chakra-code css-1u83yg1"">this</code> is set to the global object: <code class=""chakra-code css-1u83yg1"">window</code>.</em></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://github.com/udacity/OOJS-screencasts/blob/master/L3-objects-and-classes/56-using-bind.js"">Here\'s the code from the preceding video.<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">What is true about <code class=""chakra-code css-1u83yg1"">bind()</code>? Select all that apply:</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><code class=""chakra-code css-1u83yg1"">bind()</code> is a method that is called on a function</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><code class=""chakra-code css-1u83yg1"">bind()</code> returns a new function that, when called, has <code class=""chakra-code css-1u83yg1"">this</code> set to the provided object</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">The object passed into <code class=""chakra-code css-1u83yg1"">bind()</code> <em class=""chakra-text css-o3oz8b"">must</em> be the same as the object on which the method was called (e.g., <code class=""chakra-code css-1u83yg1"">dog.growOneYear.bind(dog);</code>)</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><code class=""chakra-code css-1u83yg1"">bind()</code> <em class=""chakra-text css-o3oz8b"">invokes</em> a function, so it can be substituted with <code class=""chakra-code css-1u83yg1"">call()</code> and <code class=""chakra-code css-1u83yg1"">apply()</code></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Consider the following:</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-js"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">const</span><span> driver </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">=</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">{</span><span>\n</span><span>  </span><span class=""token literal-property"" style=""color: rgb(2, 124, 124);"">name</span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">:</span><span> </span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'Danica\'</span><span class=""token"" style=""color: rgb(15, 43, 61);"">,</span><span>\n</span><span>  </span><span class=""token function-variable"" style=""color: rgb(153, 0, 0); font-weight: bold;"">displayName</span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">:</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">function</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">{</span><span>\n</span><span>    </span><span class=""token console"" style=""color: rgb(68, 85, 136); font-weight: bold;"">console</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token method property-access"" style=""color: rgb(153, 0, 0); font-weight: bold;"">log</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token template-string template-punctuation"" style=""color: rgb(221, 17, 68);"">`</span><span class=""token template-string"" style=""color: rgb(221, 17, 68);"">Name: </span><span class=""token template-string interpolation interpolation-punctuation"" style=""color: rgb(15, 43, 61);"">${</span><span class=""token template-string interpolation"" style=""color: rgb(15, 43, 61); font-weight: bold;"">this</span><span class=""token template-string interpolation"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token template-string interpolation property-access"">name</span><span class=""token template-string interpolation interpolation-punctuation"" style=""color: rgb(15, 43, 61);"">}</span><span class=""token template-string template-punctuation"" style=""color: rgb(221, 17, 68);"">`</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span><span>  </span><span class=""token"" style=""color: rgb(15, 43, 61);"">}</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(15, 43, 61);"">}</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span>\n<span></span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">const</span><span> car </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">=</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">{</span><span>\n</span><span>  </span><span class=""token literal-property"" style=""color: rgb(2, 124, 124);"">name</span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">:</span><span> </span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'Fusion\'</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(15, 43, 61);"">}</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span></code></div></div></pre>\n<p class=""chakra-text css-o3oz8b"">Write an expression using <code class=""chakra-code css-1u83yg1"">bind()</code> that allows us to ""borrow"" the <code class=""chakra-code css-1u83yg1"">displayName()</code> method from <code class=""chakra-code css-1u83yg1"">driver</code> for the <code class=""chakra-code css-1u83yg1"">car</code> object to use. Note: The <em class=""chakra-text css-o3oz8b"">expression itself</em> is sufficient (no need to save it to a variable).</p></div>', '<div class=""ureact-markdown css-tc5hjw""><h3 class=""chakra-heading css-k57syw"">Further Research</h3>\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp"">Kyle Simpson\'s <a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://github.com/getify/You-Dont-Know-JS/blob/master/this%20&amp;%20object%20prototypes/README.md#you-dont-know-js-this--object-prototypes"">You Don\'t Know JS<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a></li><li class=""css-cvpopp""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/call"">call()<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a> on MDN</li><li class=""css-cvpopp""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/apply"">apply()<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a> on MDN</li><li class=""css-cvpopp""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind"">bind()<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a> on MDN</li></ul></div>']",['https://video.udacity-data.com/topher/2017/December/5a31c70c_l3-53-this-grid-2/l3-53-this-grid-2.png'],https://www.youtube.com/embed/jMEwWv5hkYI
Object-Oriented JavaScript,Object-Oriented JavaScript,Lesson 3: Classes and Objects,3.5  Prototypal Inheritance,"['<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><em class=""chakra-text css-o3oz8b"">The <code class=""chakra-code css-1u83yg1"">Cat()</code> constructor function is invoked using the <code class=""chakra-code css-1u83yg1"">new</code> operator, which creates the <code class=""chakra-code css-1u83yg1"">bailey</code> instance (object). Note that the <code class=""chakra-code css-1u83yg1"">meow()</code> method is defined in the prototype of the <code class=""chakra-code css-1u83yg1"">bailey</code> object\'s constructor function. The prototype is just an object, and all objects created by that constructor are secretly linked to the prototype. As such, we can execute <code class=""chakra-code css-1u83yg1"">bailey.meow()</code> as if it were <code class=""chakra-code css-1u83yg1"">bailey</code>\'s own method!</em></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://github.com/udacity/OOJS-screencasts/blob/master/L3-objects-and-classes/66-methods-and-prototype.js"">Here\'s the code from the preceding video.<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">For the next quiz, consider the following two code snippets below (i.e., A and B):</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-js"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span class=""token"" style=""color: rgb(113, 113, 101); font-style: italic;"">// (A)</span><span>\n</span>\n<span></span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">function</span><span> </span><span class=""token maybe-class-name"" style=""color: rgb(153, 0, 0); font-weight: bold;"">Dalmatian</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token parameter"">name</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">{</span><span>\n</span><span>  </span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">this</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token property-access"">name</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">=</span><span> name</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span>\n<span>  </span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">this</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token method-variable function-variable method property-access"" style=""color: rgb(153, 0, 0); font-weight: bold;"">bark</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">=</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">function</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">{</span><span>\n</span><span>    </span><span class=""token console"" style=""color: rgb(68, 85, 136); font-weight: bold;"">console</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token method property-access"" style=""color: rgb(153, 0, 0); font-weight: bold;"">log</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token template-string template-punctuation"" style=""color: rgb(221, 17, 68);"">`</span><span class=""token template-string interpolation interpolation-punctuation"" style=""color: rgb(15, 43, 61);"">${</span><span class=""token template-string interpolation"" style=""color: rgb(15, 43, 61); font-weight: bold;"">this</span><span class=""token template-string interpolation"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token template-string interpolation property-access"">name</span><span class=""token template-string interpolation interpolation-punctuation"" style=""color: rgb(15, 43, 61);"">}</span><span class=""token template-string"" style=""color: rgb(221, 17, 68);""> barks!</span><span class=""token template-string template-punctuation"" style=""color: rgb(221, 17, 68);"">`</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span><span>  </span><span class=""token"" style=""color: rgb(15, 43, 61);"">}</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(15, 43, 61);"">}</span></code></div></div></pre>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-js"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span class=""token"" style=""color: rgb(113, 113, 101); font-style: italic;"">// (B)</span><span>\n</span>\n<span></span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">function</span><span> </span><span class=""token maybe-class-name"" style=""color: rgb(153, 0, 0); font-weight: bold;"">Dalmatian</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token parameter"">name</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">{</span><span>\n</span><span>  </span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">this</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token property-access"">name</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">=</span><span> name</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(15, 43, 61);"">}</span><span>\n</span>\n<span></span><span class=""token"" style=""color: rgb(68, 85, 136); font-weight: bold;"">Dalmatian</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token property-access"">prototype</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token method-variable function-variable method property-access"" style=""color: rgb(153, 0, 0); font-weight: bold;"">bark</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">=</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">function</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">{</span><span>\n</span><span>  </span><span class=""token console"" style=""color: rgb(68, 85, 136); font-weight: bold;"">console</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token method property-access"" style=""color: rgb(153, 0, 0); font-weight: bold;"">log</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token template-string template-punctuation"" style=""color: rgb(221, 17, 68);"">`</span><span class=""token template-string interpolation interpolation-punctuation"" style=""color: rgb(15, 43, 61);"">${</span><span class=""token template-string interpolation"" style=""color: rgb(15, 43, 61); font-weight: bold;"">this</span><span class=""token template-string interpolation"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token template-string interpolation property-access"">name</span><span class=""token template-string interpolation interpolation-punctuation"" style=""color: rgb(15, 43, 61);"">}</span><span class=""token template-string"" style=""color: rgb(221, 17, 68);""> barks!</span><span class=""token template-string template-punctuation"" style=""color: rgb(221, 17, 68);"">`</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(15, 43, 61);"">}</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span></code></div></div></pre></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Let\'s say that we want to define a method that can be invoked on instances (objects) of the <code class=""chakra-code css-1u83yg1"">Dalmatian</code> constructor function (we\'ll be instantiating at least 101 of them!).</p>\n<p class=""chakra-text css-o3oz8b"">Which of the preceding two approaches is optimal?</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><strong>(A)</strong> is optimal, because <code class=""chakra-code css-1u83yg1"">bark()</code> can be called directly on an instance of <code class=""chakra-code css-1u83yg1"">Dalmatian</code>. In (B), <code class=""chakra-code css-1u83yg1"">bark()</code> needs to be called on the <code class=""chakra-code css-1u83yg1"">Dalmatian</code> instance\'s prototype for the method to be properly invoked (e.g., spotty.prototype.bark()).</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><strong>(B)</strong> is optimal, because the function that <code class=""chakra-code css-1u83yg1"">bark</code> points to does not need to be recreated each time an instance of <code class=""chakra-code css-1u83yg1"">Dalmatian</code> is created.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><strong>(A)</strong> is optimal, because all methods should always be enclosed within the <code class=""chakra-code css-1u83yg1"">Dalmatian()</code> constructor function itself.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Both approaches (both <strong>(A)</strong> and <strong>(B)</strong>) are equal; there are no differences.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">None. Methods should always be manually added to individual instances of <code class=""chakra-code css-1u83yg1"">Dalmatian</code>.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><h3 class=""chakra-heading css-k57syw"">💡 Replacing the <code class=""chakra-code css-1u83yg1"">prototype</code> Object 💡</h3>\n<p class=""chakra-text css-o3oz8b"">What happens if you completely replace a function\'s <code class=""chakra-code css-1u83yg1"">prototype</code> object? How does this affect objects created by that function? Let\'s look at a simple <code class=""chakra-code css-1u83yg1"">Hamster</code> constructor function and instantiate a few objects:</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-js"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">function</span><span> </span><span class=""token maybe-class-name"" style=""color: rgb(153, 0, 0); font-weight: bold;"">Hamster</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">{</span><span>\n</span><span>  </span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">this</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token property-access"">hasFur</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">=</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">true</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(15, 43, 61);"">}</span><span>\n</span>\n<span></span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">let</span><span> waffle </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">=</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">new</span><span> </span><span class=""token"" style=""color: rgb(68, 85, 136); font-weight: bold;"">Hamster</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">let</span><span> pancake </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">=</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">new</span><span> </span><span class=""token"" style=""color: rgb(68, 85, 136); font-weight: bold;"">Hamster</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span></code></div></div></pre>\n<p class=""chakra-text css-o3oz8b"">First, note that even after we make the new objects, <code class=""chakra-code css-1u83yg1"">waffle</code> and <code class=""chakra-code css-1u83yg1"">pancake</code>, we can still add properties to <code class=""chakra-code css-1u83yg1"">Hamster</code>\'s prototype and it will still be able to access those new properties.</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-js"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span class=""token"" style=""color: rgb(68, 85, 136); font-weight: bold;"">Hamster</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token property-access"">prototype</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token method-variable function-variable method property-access"" style=""color: rgb(153, 0, 0); font-weight: bold;"">eat</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">=</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">function</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">{</span><span>\n</span><span>  </span><span class=""token console"" style=""color: rgb(68, 85, 136); font-weight: bold;"">console</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token method property-access"" style=""color: rgb(153, 0, 0); font-weight: bold;"">log</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'Chomp chomp chomp!\'</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(15, 43, 61);"">}</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span>\n<span>waffle</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token method property-access"" style=""color: rgb(153, 0, 0); font-weight: bold;"">eat</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(113, 113, 101); font-style: italic;"">// \'Chomp chomp chomp!\'</span><span>\n</span>\n<span>pancake</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token method property-access"" style=""color: rgb(153, 0, 0); font-weight: bold;"">eat</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(113, 113, 101); font-style: italic;"">// \'Chomp chomp chomp!\'</span></code></div></div></pre>\n<p class=""chakra-text css-o3oz8b"">Now, let\'s replace <code class=""chakra-code css-1u83yg1"">Hamster</code>\'s <code class=""chakra-code css-1u83yg1"">prototype</code> object with something else entirely:</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-js"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span class=""token"" style=""color: rgb(68, 85, 136); font-weight: bold;"">Hamster</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token property-access"">prototype</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">=</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">{</span><span>\n</span><span>  </span><span class=""token literal-property"" style=""color: rgb(2, 124, 124);"">isHungry</span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">:</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">false</span><span class=""token"" style=""color: rgb(15, 43, 61);"">,</span><span>\n</span><span>  </span><span class=""token literal-property"" style=""color: rgb(2, 124, 124);"">color</span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">:</span><span> </span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'brown\'</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(15, 43, 61);"">}</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span></code></div></div></pre>\n<p class=""chakra-text css-o3oz8b"">The previous objects don\'t have access to the updated prototype\'s properties; they just retain their secret link to the old prototype:</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-js"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span class=""token console"" style=""color: rgb(68, 85, 136); font-weight: bold;"">console</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token method property-access"" style=""color: rgb(153, 0, 0); font-weight: bold;"">log</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span>waffle</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token property-access"">color</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(113, 113, 101); font-style: italic;"">// undefined</span><span>\n</span>\n<span>waffle</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token method property-access"" style=""color: rgb(153, 0, 0); font-weight: bold;"">eat</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(113, 113, 101); font-style: italic;"">// \'Chomp chomp chomp!\'</span><span>\n</span>\n<span></span><span class=""token console"" style=""color: rgb(68, 85, 136); font-weight: bold;"">console</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token method property-access"" style=""color: rgb(153, 0, 0); font-weight: bold;"">log</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span>pancake</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token property-access"">isHungry</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(113, 113, 101); font-style: italic;"">// undefined</span></code></div></div></pre>\n<p class=""chakra-text css-o3oz8b"">As it turns out, any new <code class=""chakra-code css-1u83yg1"">Hamster</code> objects created moving forward will use the updated prototype:</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-js"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">const</span><span> muffin </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">=</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">new</span><span> </span><span class=""token"" style=""color: rgb(68, 85, 136); font-weight: bold;"">Hamster</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span>\n<span>muffin</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token method property-access"" style=""color: rgb(153, 0, 0); font-weight: bold;"">eat</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(113, 113, 101); font-style: italic;"">// TypeError: muffin.eat is not a function</span><span>\n</span>\n<span></span><span class=""token console"" style=""color: rgb(68, 85, 136); font-weight: bold;"">console</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token method property-access"" style=""color: rgb(153, 0, 0); font-weight: bold;"">log</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span>muffin</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token property-access"">isHungry</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(113, 113, 101); font-style: italic;"">// false</span><span>\n</span>\n<span></span><span class=""token console"" style=""color: rgb(68, 85, 136); font-weight: bold;"">console</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token method property-access"" style=""color: rgb(153, 0, 0); font-weight: bold;"">log</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span>muffin</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token property-access"">color</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(113, 113, 101); font-style: italic;"">// \'brown\'</span></code></div></div></pre></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://github.com/udacity/OOJS-screencasts/blob/master/L3-objects-and-classes/72-prototype-demo.js"">Here\'s the code from the preceding video.<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">What is true about <code class=""chakra-code css-1u83yg1"">hasOwnProperty()</code>? Select all that apply:</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">An object is passed into <code class=""chakra-code css-1u83yg1"">hasOwnProperty</code> as an argument</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">It returns a boolean indicating whether the object has the specified property as its own property (i.e., the property isn\'t inherited)</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">A string cannot be passed as an argument into <code class=""chakra-code css-1u83yg1"">hasOwnProperty()</code></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><code class=""chakra-code css-1u83yg1"">hasOwnProperty()</code> is invoked as a method onto an object</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">What is true about <code class=""chakra-code css-1u83yg1"">isPrototypeOf()</code> or <code class=""chakra-code css-1u83yg1"">getPrototypeOf()</code>? Select all that apply:</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><code class=""chakra-code css-1u83yg1"">isPrototypeOf()</code> checks whether or not an object exists in another object\'s prototype chain</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><code class=""chakra-code css-1u83yg1"">isPrototypeOf()</code> takes a single argument: an object whose prototype chain is to be searched</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><code class=""chakra-code css-1u83yg1"">getPrototypeOf()</code> is invoked on an instance of a constructor function (i.e., a single object itself)</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><code class=""chakra-code css-1u83yg1"">getPrototypeOf()</code> returns the prototype of the object passed into it</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">What is true about <code class=""chakra-code css-1u83yg1"">constructor</code> property? Select all that apply:</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Accessing an object\'s <code class=""chakra-code css-1u83yg1"">constructor</code> property returns a reference to the constructor function that created that object (instance)</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">The value of the <code class=""chakra-code css-1u83yg1"">constructor</code> property is just a string of the constructor function\'s name, rather than the function itself</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Every object has a <code class=""chakra-code css-1u83yg1"">constructor</code> property</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Objects created with literal notation are constructed with the <code class=""chakra-code css-1u83yg1"">Object()</code> constructor function</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Let\'s say that we create the following object, <code class=""chakra-code css-1u83yg1"">capitals</code>, using regular object literal notation:</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-js"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">const</span><span> capitals </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">=</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">{</span><span>\n</span><span>  </span><span class=""token literal-property"" style=""color: rgb(2, 124, 124);"">California</span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">:</span><span> </span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'Sacramento\'</span><span class=""token"" style=""color: rgb(15, 43, 61);"">,</span><span>\n</span><span>  </span><span class=""token literal-property"" style=""color: rgb(2, 124, 124);",,
">Washington</span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">:</span><span> </span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'Olympia\'</span><span class=""token"" style=""color: rgb(15, 43, 61);"">,</span><span>\n</span><span>  </span><span class=""token literal-property"" style=""color: rgb(2, 124, 124);"">Oregon</span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">:</span><span> </span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'Salem\'</span><span class=""token"" style=""color: rgb(15, 43, 61);"">,</span><span>\n</span><span>  </span><span class=""token literal-property"" style=""color: rgb(2, 124, 124);"">Texas</span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">:</span><span> </span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'Austin\'</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(15, 43, 61);"">}</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span></code></div></div></pre>\n<p class=""chakra-text css-o3oz8b"">What is returned when <code class=""chakra-code css-1u83yg1"">Object.getPrototypeOf(capitals);</code> is executed?</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">A reference to <code class=""chakra-code css-1u83yg1"">Object()</code>\'s prototype</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><code class=""chakra-code css-1u83yg1"">undefined</code></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><code class=""chakra-code css-1u83yg1"">Object()</code></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><code class=""chakra-code css-1u83yg1"">{}</code></p></div>', '<div class=""ureact-markdown css-tc5hjw""><h3 class=""chakra-heading css-k57syw"">Further Research</h3>\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""http://www.objectplayground.com/"">Object Playground<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a></li><li class=""css-cvpopp""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/hasOwnProperty"">hasOwnProperty()<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a> on MDN</li><li class=""css-cvpopp""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/isPrototypeOf"">isPrototypeOf()<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a> on MDN</li><li class=""css-cvpopp""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/getPrototypeOf"">Object.getPrototypeOf()<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a> on MDN</li><li class=""css-cvpopp""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/constructor"">.constructor<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a> on MDN</li></ul></div>']",['https://video.udacity-data.com/topher/2017/December/5a31c70c_l3-64-prototype-chain-diagram/l3-64-prototype-chain-diagram.png'],https://www.youtube.com/embed/KdHMZEzRI4s,,,,
Object-Oriented JavaScript,Object-Oriented JavaScript,Lesson 3: Classes and Objects,3.6  Prototypal Inheritance: Subclasses,"['<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><em class=""chakra-text css-o3oz8b"">The <code class=""chakra-code css-1u83yg1"">Cat()</code> constructor function is invoked using the <code class=""chakra-code css-1u83yg1"">new</code> operator, which creates the <code class=""chakra-code css-1u83yg1"">bailey</code> instance (object). Note that the <code class=""chakra-code css-1u83yg1"">meow()</code> method is defined in the prototype of the <code class=""chakra-code css-1u83yg1"">bailey</code> object\'s constructor function. The prototype is just an object, and all objects created by that constructor are secretly linked to the prototype. As such, we can execute <code class=""chakra-code css-1u83yg1"">bailey.meow()</code> as if it were <code class=""chakra-code css-1u83yg1"">bailey</code>\'s own method!</em></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">When calling any property on any object, the JavaScript engine will first look for the property in the object itself (i.e., the object\'s <em class=""chakra-text css-o3oz8b"">own</em>, non-inherited properties). If the property is not found, JavaScript will then look at the object\'s prototype. If the property <em class=""chakra-text css-o3oz8b"">still</em> isn\'t found in the object\'s prototype, JavaScript will continue the search up the <strong>prototype chain</strong>.</p>\n<p class=""chakra-text css-o3oz8b"">Again, inheritance in JavaScript is all about setting up this chain!</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Consider the following:</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-js"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">function</span><span> </span><span class=""token maybe-class-name"" style=""color: rgb(153, 0, 0); font-weight: bold;"">GuineaPig</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token parameter"">name</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">{</span><span>\n</span><span>  </span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">this</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token property-access"">name</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">=</span><span> name</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span><span>  </span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">this</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token property-access"">isCute</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">=</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">true</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(15, 43, 61);"">}</span><span>\n</span>\n<span></span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">const</span><span> waffle </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">=</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">new</span><span> </span><span class=""token"" style=""color: rgb(68, 85, 136); font-weight: bold;"">GuineaPig</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'Waffle\'</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span></code></div></div></pre>\n<p class=""chakra-text css-o3oz8b"">What does <code class=""chakra-code css-1u83yg1"">waffle.__proto__</code> refer to?</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><code class=""chakra-code css-1u83yg1"">GuineaPig.__proto__</code></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><code class=""chakra-code css-1u83yg1"">GuineaPig.proto</code></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><code class=""chakra-code css-1u83yg1"">GuineaPig.prototype</code></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><code class=""chakra-code css-1u83yg1"">guineapig.proto</code></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><code class=""chakra-code css-1u83yg1"">GuineaPig</code></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Consider the following:</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-js"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">function</span><span> </span><span class=""token maybe-class-name"" style=""color: rgb(153, 0, 0); font-weight: bold;"">Car</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token parameter"">color</span><span class=""token parameter"" style=""color: rgb(15, 43, 61);"">,</span><span class=""token parameter""> year</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">{</span><span>\n</span><span>  </span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">this</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token property-access"">color</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">=</span><span> color</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span><span>  </span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">this</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token property-access"">year</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">=</span><span> year</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(15, 43, 61);"">}</span><span>\n</span>\n<span></span><span class=""token"" style=""color: rgb(68, 85, 136); font-weight: bold;"">Car</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token property-access"">prototype</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token method-variable function-variable method property-access"" style=""color: rgb(153, 0, 0); font-weight: bold;"">drive</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">=</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">function</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">{</span><span>\n</span><span>  </span><span class=""token console"" style=""color: rgb(68, 85, 136); font-weight: bold;"">console</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token method property-access"" style=""color: rgb(153, 0, 0); font-weight: bold;"">log</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'Vroom vroom!\'</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(15, 43, 61);"">}</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span>\n<span></span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">const</span><span> car </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">=</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">new</span><span> </span><span class=""token"" style=""color: rgb(68, 85, 136); font-weight: bold;"">Car</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'silver\'</span><span class=""token"" style=""color: rgb(15, 43, 61);"">,</span><span> </span><span class=""token"" style=""color: rgb(2, 124, 124);"">1988</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span></code></div></div></pre>\n<p class=""chakra-text css-o3oz8b"">What happens when <code class=""chakra-code css-1u83yg1"">car.drive();</code> is executed? List the following events in the order that they occur:</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">First, the JavaScript engine searches inside the <code class=""chakra-code css-1u83yg1"">car</code> object for a property named <code class=""chakra-code css-1u83yg1"">drive</code>.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">The JavaScript engine then accesses the <code class=""chakra-code css-1u83yg1"">car.__proto__</code> property.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Because <code class=""chakra-code css-1u83yg1"">Car.prototype.drive</code> <em class=""chakra-text css-o3oz8b"">is</em> a defined property, it is returned.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Finally, since <code class=""chakra-code css-1u83yg1"">drive</code> is invoked as a method on <code class=""chakra-code css-1u83yg1"">car</code>, the value of <code class=""chakra-code css-1u83yg1"">this</code> is set to <code class=""chakra-code css-1u83yg1"">car</code>.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">The JavaScript engine does not find <code class=""chakra-code css-1u83yg1"">drive</code> within the <code class=""chakra-code css-1u83yg1"">car</code> object.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Since the <code class=""chakra-code css-1u83yg1"">car.__proto__</code> property points to <code class=""chakra-code css-1u83yg1"">Car.prototype</code>, the JavaScript engine searches for <code class=""chakra-code css-1u83yg1"">drive</code> in the prototype.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">1st</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">2nd</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">3rd</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">4th</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">5th</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">6th</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://github.com/udacity/OOJS-screencasts/blob/master/L3-objects-and-classes/90-objectcreate-demo.js"">Here\'s the code from the preceding video.<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Consider the following:</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-js"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">function</span><span> </span><span class=""token maybe-class-name"" style=""color: rgb(153, 0, 0); font-weight: bold;"">Parent</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">{</span><span>\n</span><span>  </span><span class=""token"" style=""color: rgb(113, 113, 101); font-style: italic;"">// ...</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(15, 43, 61);"">}</span><span>\n</span>\n<span></span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">function</span><span> </span><span class=""token maybe-class-name"" style=""color: rgb(153, 0, 0); font-weight: bold;"">Child</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">{</span><span>\n</span><span>  </span><span class=""token"" style=""color: rgb(113, 113, 101); font-style: italic;"">// ...</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(15, 43, 61);"">}</span><span>\n</span>\n<span></span><span class=""token"" style=""color: rgb(68, 85, 136); font-weight: bold;"">Child</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token property-access"">prototype</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">=</span><span> </span><span class=""token known-class-name"" style=""color: rgb(68, 85, 136); font-weight: bold;"">Object</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token method property-access"" style=""color: rgb(153, 0, 0); font-weight: bold;"">create</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(68, 85, 136); font-weight: bold;"">Parent</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token property-access"">prototype</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span>\n<span></span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">const</span><span> child </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">=</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">new</span><span> </span><span class=""token"" style=""color: rgb(68, 85, 136); font-weight: bold;"">Child</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span></code></div></div></pre>\n<p class=""chakra-text css-o3oz8b"">The following is then executed:</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-js"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span>child </span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">instanceof</span><span> </span><span class=""token"" style=""color: rgb(68, 85, 136); font-weight: bold;"">Parent</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span></code></div></div></pre>\n<p class=""chakra-text css-o3oz8b"">What is printed to the console?</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><code class=""chakra-code css-1u83yg1"">Child</code></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><code class=""chakra-code css-1u83yg1"">undefined</code></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><code class=""chakra-code css-1u83yg1"">false</code></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><code class=""chakra-code css-1u83yg1"">true</code></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">The console will throw an error.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">What is true about <code class=""chakra-code css-1u83yg1"">Object.create()</code>? Select all that apply:</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">It returns a new object whose <code class=""chakra-code css-1u83yg1"">__proto__</code> property is set to the object passed into <code class=""chakra-code css-1u83yg1"">Object.create()</code></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Using <code class=""chakra-code css-1u83yg1"">Object.create()</code>, we can have objects inherit from just about any object we want (i.e., not only the <code class=""chakra-code css-1u83yg1"">prototype</code>)</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><code class=""chakra-code css-1u83yg1"">Object.create()</code> allows us to implement prototypal inheritance without mutating the prototype</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">The method is invoked directly <em class=""chakra-text css-o3oz8b"">on</em> a single object</p></div>', '<div class=""ureact-markdown css-tc5hjw""><h3 class=""chakra-heading css-k57syw"">Further Research</h3>\n<ul role=""list"" class=""css-19qh3zo""><li class=""css-cvpopp""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Inheritance_and_the_prototype_chain"">Inheritance and the prototype chain<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a> on MDN</li><li class=""css-cvpopp""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/create"">Object.create()<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a> on MDN</li></ul></div>']",['https://video.udacity-data.com/topher/2017/December/5a31c70c_l3-83-prototype-chain-diagram/l3-83-prototype-chain-diagram.png'],https://www.youtube.com/embed/K7CKb7MlAT4
Object-Oriented JavaScript,Object-Oriented JavaScript,Lesson 3: Classes and Objects,3.7  Lesson Summary,[],[],https://www.youtube.com/embed/zSg4K0DoAEc
Object-Oriented JavaScript,Object-Oriented JavaScript,Lesson 3: Classes and Objects,3.8  Course Outro,[],[],https://www.youtube.com/embed/60zCDUSyjpI
Object-Oriented JavaScript,Object-Oriented JavaScript,Lesson 4: Object-Oriented Design Patterns,4.1  Introduction,[],[],https://www.youtube.com/embed/_56fnu24pio
Object-Oriented JavaScript,Object-Oriented JavaScript,Lesson 4: Object-Oriented Design Patterns,4.2  Mixins / Extending Object Functionality with Mixins,"['<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><em class=""chakra-text css-o3oz8b"">The <code class=""chakra-code css-1u83yg1"">cat</code> object is prototype-linked to a single object: <code class=""chakra-code css-1u83yg1"">animal</code></em></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">What is true about the following? Select all that apply:</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-js"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">const</span><span> aircraft </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">=</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">{</span><span>\n</span><span>  </span><span class=""token literal-property"" style=""color: rgb(2, 124, 124);"">flies</span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">:</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">true</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(15, 43, 61);"">}</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span>\n<span></span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">const</span><span> helicopter </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">=</span><span> </span><span class=""token known-class-name"" style=""color: rgb(68, 85, 136); font-weight: bold;"">Object</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token method property-access"" style=""color: rgb(153, 0, 0); font-weight: bold;"">create</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span>aircraft</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span>\n<span></span><span class=""token console"" style=""color: rgb(68, 85, 136); font-weight: bold;"">console</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token method property-access"" style=""color: rgb(153, 0, 0); font-weight: bold;"">log</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span>helicopter</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token property-access"">flies</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(113, 113, 101); font-style: italic;"">// true</span></code></div></div></pre></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">The <code class=""chakra-code css-1u83yg1"">helicopter</code> object has no properties of its own</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><code class=""chakra-code css-1u83yg1"">helicopter</code> is prototype-linked to <code class=""chakra-code css-1u83yg1"">aircraft</code></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><code class=""chakra-code css-1u83yg1"">helicopter</code> can actually be prototype-linked to several different objects</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><code class=""chakra-code css-1u83yg1"">console.log(helicopter.flies);</code> should be <code class=""chakra-code css-1u83yg1"">undefined</code></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://github.com/udacity/OOJS-screencasts/blob/master/L4-object-oriented-design-patterns/10-object.assign.js"">Here\'s the link to the commit<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Let\'s modify the above code a bit. What is true after the following?</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-js"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">const</span><span> duck </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">=</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">{</span><span>\n</span><span>  </span><span class=""token literal-property"" style=""color: rgb(2, 124, 124);"">hasBill</span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">:</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">true</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(15, 43, 61);"">}</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">const</span><span> beaver </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">=</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">{</span><span>\n</span><span>  </span><span class=""token literal-property"" style=""color: rgb(2, 124, 124);"">hasTail</span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">:</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">true</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(15, 43, 61);"">}</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">const</span><span> otter </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">=</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">{</span><span>\n</span><span>  </span><span class=""token literal-property"" style=""color: rgb(2, 124, 124);"">hasFur</span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">:</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">true</span><span class=""token"" style=""color: rgb(15, 43, 61);"">,</span><span>\n</span><span>  </span><span class=""token literal-property"" style=""color: rgb(2, 124, 124);"">feet</span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">:</span><span> </span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'webbed\'</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(15, 43, 61);"">}</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span>\n<span></span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">const</span><span> platypus </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">=</span><span> </span><span class=""token known-class-name"" style=""color: rgb(68, 85, 136); font-weight: bold;"">Object</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token method property-access"" style=""color: rgb(153, 0, 0); font-weight: bold;"">assign</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span>duck</span><span class=""token"" style=""color: rgb(15, 43, 61);"">,</span><span> beaver</span><span class=""token"" style=""color: rgb(15, 43, 61);"">,</span><span> otter</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span></code></div></div></pre>\n<p class=""chakra-text css-o3oz8b"">Select all that apply:</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">The console will throw an error because there is no target object passed into <code class=""chakra-code css-1u83yg1"">Object.assign()</code></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><code class=""chakra-code css-1u83yg1"">platypus</code> is an object with four properties</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><code class=""chakra-code css-1u83yg1"">duck</code> becomes an object with four properties</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><code class=""chakra-code css-1u83yg1"">Object.assign()</code> will automatically insert an empty target object as the first argument</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><code class=""chakra-code css-1u83yg1"">platypus === duck</code></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">What is true about multiple inheritance or mixins? Select all that apply:</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Using a mixin is ideal when you want to set up multiple branches in the prototype chain</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Using a mixin allows a JavaScript class to have more than one superclass</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">A mixin supplies properties and/or methods that can be shared</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">We can leverage <code class=""chakra-code css-1u83yg1"">Object.assign()</code> to ""mix in"" properties  and methods from a number of objects into a composite object</p></div>']",['https://video.udacity-data.com/topher/2018/July/5b3a8d8e_singlez/singlez.png'],https://www.youtube.com/embed/OMorcZPV6dw
Object-Oriented JavaScript,Object-Oriented JavaScript,Lesson 4: Object-Oriented Design Patterns,4.3  Functional Mixins,"['<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><em class=""chakra-text css-o3oz8b"">Comparing and contrasting factory functions and constructor functions</em></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://github.com/udacity/OOJS-screencasts/blob/master/L4-object-oriented-design-patterns/22-factory-functions-with-closure.js"">Here\'s the link to the commit<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://github.com/udacity/OOJS-screencasts/blob/master/L4-object-oriented-design-patterns/25-functional-mixins.js"">Here\'s the link to the commit<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">What is true about factory functions or mixins? Select all that apply:</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">A mixin is always meant to be inherited and extended by sub-objects via its prototype</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Factory functions must always close over local variables</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Just like a constructor function, a factory function can be called multiple times to create an object</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">A factory function is normally called with the <code class=""chakra-code css-1u83yg1"">new</code> operator</p></div>']",['https://video.udacity-data.com/topher/2018/July/5b3a918f_screen-shot-2018-07-02-at-1.56.13-pm/screen-shot-2018-07-02-at-1.56.13-pm.png'],https://www.youtube.com/embed/4LonUWj8FPY
Object-Oriented JavaScript,Object-Oriented JavaScript,Lesson 4: Object-Oriented Design Patterns,4.4  The Module Pattern,"['<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Before we jump into how the Module Pattern leverages scope and closures, let\'s make sure we\'re on the same page regarding <strong>scope</strong>. Consider the following:</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-js"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">const</span><span> myName </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">=</span><span> </span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'Richard\'</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span>\n<span></span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">function</span><span> </span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">introduceMyself</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">{</span><span>\n</span><span>  </span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">const</span><span> you </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">=</span><span> </span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'student\'</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span>\n<span>  </span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">function</span><span> </span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">introduce</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token parameter"">message</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">{</span><span>\n</span><span>    </span><span class=""token"" style=""color: rgb(113, 113, 101); font-style: italic;"">// Which variables can be used here?</span><span>\n</span><span>  </span><span class=""token"" style=""color: rgb(15, 43, 61);"">}</span><span>\n</span>\n<span>  </span><span class=""token control-flow"" style=""color: rgb(15, 43, 61); font-weight: bold;"">return</span><span> </span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">introduce</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'Hello\'</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(15, 43, 61);"">}</span></code></div></div></pre>\n<p class=""chakra-text css-o3oz8b"">Which variables does the nested <code class=""chakra-code css-1u83yg1"">introduce()</code> function have access to? Select all that apply:</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><code class=""chakra-code css-1u83yg1"">myName</code></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><code class=""chakra-code css-1u83yg1"">you</code></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><code class=""chakra-code css-1u83yg1"">message</code></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">None</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Consider the following:</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-js"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">let</span><span> sodiumChloride </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">=</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">function</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">{</span><span>\n</span><span>  </span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">let</span><span> chemicalFormula </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">=</span><span> </span><span class=""token"" style=""color: rgb(221, 17, 68);"">\'NaCl\'</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span><span>  </span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">let</span><span> molarMass </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">=</span><span> </span><span class=""token"" style=""color: rgb(2, 124, 124);"">58.44</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span>\n<span>  </span><span class=""token control-flow"" style=""color: rgb(15, 43, 61); font-weight: bold;"">return</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">{</span><span>\n</span><span>    </span><span class=""token function-variable"" style=""color: rgb(153, 0, 0); font-weight: bold;"">getProperties</span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">:</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">function</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">{</span><span>\n</span><span>      </span><span class=""token console"" style=""color: rgb(68, 85, 136); font-weight: bold;"">console</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token method property-access"" style=""color: rgb(153, 0, 0); font-weight: bold;"">log</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token template-string template-punctuation"" style=""color: rgb(221, 17, 68);"">`</span><span class=""token template-string"" style=""color: rgb(221, 17, 68);"">Formula: </span><span class=""token template-string interpolation interpolation-punctuation"" style=""color: rgb(15, 43, 61);"">${</span><span class=""token template-string interpolation"">chemicalFormula</span><span class=""token template-string interpolation interpolation-punctuation"" style=""color: rgb(15, 43, 61);"">}</span><span class=""token template-string template-punctuation"" style=""color: rgb(221, 17, 68);"">`</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span><span>      </span><span class=""token console"" style=""color: rgb(68, 85, 136); font-weight: bold;"">console</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token method property-access"" style=""color: rgb(153, 0, 0); font-weight: bold;"">log</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token template-string template-punctuation"" style=""color: rgb(221, 17, 68);"">`</span><span class=""token template-string"" style=""color: rgb(221, 17, 68);"">Molar Mass: </span><span class=""token template-string interpolation interpolation-punctuation"" style=""color: rgb(15, 43, 61);"">${</span><span class=""token template-string interpolation"">molarMass</span><span class=""token template-string interpolation interpolation-punctuation"" style=""color: rgb(15, 43, 61);"">}</span><span class=""token template-string"" style=""color: rgb(221, 17, 68);""> g/mol</span><span class=""token template-string template-punctuation"" style=""color: rgb(221, 17, 68);"">`</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span><span>    </span><span class=""token"" style=""color: rgb(15, 43, 61);"">}</span><span>\n</span><span>  </span><span class=""token"" style=""color: rgb(15, 43, 61);"">}</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(15, 43, 61);"">}</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span></code></div></div></pre>\n<p class=""chakra-text css-o3oz8b"">When <code class=""chakra-code css-1u83yg1"">sodiumChloride.getProperties();</code> is executed, what is logged to the console?</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">An object with a single <code class=""chakra-code css-1u83yg1"">getProperties</code> method</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">An object with two properties: <code class=""chakra-code css-1u83yg1"">Formula</code> and <code class=""chakra-code css-1u83yg1"">Molar Mass</code></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Two strings: <code class=""chakra-code css-1u83yg1"">\'Formula: NaCl\'</code> and <code class=""chakra-code css-1u83yg1"">\'Molar Mass: 58.44 g/mol\'</code></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Nothing. The entire snippet is not valid JavaScript.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://github.com/udacity/OOJS-screencasts/blob/master/L4-object-oriented-design-patterns/40-module-pattern-demo.js"">Here\'s the link to the commit<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">What is true about the Module Pattern? Select all that apply:</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">The Module Pattern uses closures to create private properties</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Rather than a local variable, a function can simply use a global variable to fulfill the Module Pattern</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Private properties are provided in JavaScript by default, so the Module Pattern is largely unnecessary</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">The Module Pattern requires the use of IIFE\'s</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Unlike calling a constructor function, implementing the Module Pattern returns just one version of an object</p></div>']",[],https://www.youtube.com/embed/VUH_3LlwW64
Object-Oriented JavaScript,Object-Oriented JavaScript,Lesson 4: Object-Oriented Design Patterns,4.5  The Revealing Module Pattern,"['<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://github.com/udacity/OOJS-screencasts/blob/master/L4-object-oriented-design-patterns/51-structure-and-syntax.js"">Here\'s the link to the commit<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Which concepts make up the Revealing Module Pattern? Select all that apply:</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Constructor functions</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">IIFE</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><code class=""chakra-code css-1u83yg1"">Object.assign();</code></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Local variables/functions</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Returned object literal with keys that point to data intended to be revealed</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Mixins</p></div>']",[],https://www.youtube.com/embed/06Xw_DxfYjY
Object-Oriented JavaScript,Object-Oriented JavaScript,Lesson 4: Object-Oriented Design Patterns,4.6  Lesson Summary,[],[],https://www.youtube.com/embed/EEbAYNruSGA
Object-Oriented JavaScript,Object-Oriented JavaScript,Lesson 4: Object-Oriented Design Patterns,4.7  Course Outro,[],[],https://www.youtube.com/embed/ra8-pKC6Qkk
