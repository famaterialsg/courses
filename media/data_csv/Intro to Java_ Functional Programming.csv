course,sub_course,module,sub_module,content_html_list,img_list,video_url
Intro to Java: Functional Programming,Intro to Java: Functional Programming,Lesson 1: Variables and Data Types,1.1  Intro,[],[],https://www.youtube.com/embed/sK8lJ4uI9qE
Intro to Java: Functional Programming,Intro to Java: Functional Programming,Lesson 1: Variables and Data Types,1.2  Course Map,"['<div class=""ureact-markdown css-tc5hjw""><h2 class=""chakra-heading css-fz7yxd"">Hello! You must be here to learn Java!</h2>\n<p class=""chakra-text css-o3oz8b"">This course will give you a foundation in Java syntax that will start your journey towards becoming a successful Java developer.</p>\n<p class=""chakra-text css-o3oz8b""><strong>Java developers are in high demand</strong> in the job market because Java works on any platform, and it’s the core language for building Android apps.</p>\n<p class=""chakra-text css-o3oz8b"">There are so many cool things you can build with Java, but to get there, you’ll have to start from the beginning!</p>\n<p class=""chakra-text css-o3oz8b""><img alt=""examples of Java apps"" src=""http://i.imgur.com/LQnwVTD.png"" class=""chakra-image css-0"" node=""[object Object]"">\n<em class=""chakra-text css-o3oz8b"">Examples of a game, a platform, and an application that use Java, from left to right: Minecraft, Android, NASA Worldwind.</em></p>\n<h3 class=""chakra-heading css-k57syw"">Course Structure</h3>\n<p class=""chakra-text css-o3oz8b"">In this first lesson, you’ll program your computer to remember numbers and text using <strong>variables</strong>, and you’ll get to use variables to do lots of calculations that us humans can’t do!</p>\n<p class=""chakra-text css-o3oz8b"">In lesson 2, you’ll get to teach your computer how to make decisions when faced with multiple choices. This is called conditional programming or <strong>control flow</strong>.</p>\n<p class=""chakra-text css-o3oz8b"">Then in lesson 3, you’ll get to write your own set of instructions for computers to follow using <strong>functions</strong>.</p>\n<p class=""chakra-text css-o3oz8b"">In Lesson 4, you’ll write programs that can repeat instructions over and over, billions of times if needed, using <strong>loops</strong>.</p>\n<p class=""chakra-text css-o3oz8b"">By the end of Lesson 4, you should be ready to work on your first big project! You’ll need to install some tools to get started, but don’t worry, we’ll walk you through that step by step.</p>\n<p class=""chakra-text css-o3oz8b"">Ready? Well then, <strong>let’s start coding!</strong></p>\n<p class=""chakra-text css-o3oz8b""><img alt=""Course Map image"" src=""https://media.giphy.com/media/xT8qB9qqyDL7yzoKIM/giphy.gif"" class=""chakra-image css-0"" node=""[object Object]""></p></div>']",['http://i.imgur.com/LQnwVTD.png'],
Intro to Java: Functional Programming,Intro to Java: Functional Programming,Lesson 1: Variables and Data Types,1.3  Hello World,[],[],https://www.youtube.com/embed/kMrC8mt0m8A
Intro to Java: Functional Programming,Intro to Java: Functional Programming,Lesson 1: Variables and Data Types,1.4  Print a Line,"['<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Try to out put ""Java Rocks!""</p></div>']",[],
Intro to Java: Functional Programming,Intro to Java: Functional Programming,Lesson 1: Variables and Data Types,1.5  The Memory Game,[],[],https://www.youtube.com/embed/OdZcminmyro
Intro to Java: Functional Programming,Intro to Java: Functional Programming,Lesson 1: Variables and Data Types,1.6  Variables,[],[],https://www.youtube.com/embed/TGw5szyZk88
Intro to Java: Functional Programming,Intro to Java: Functional Programming,Lesson 1: Variables and Data Types,1.7  Updating Variables,[],[],https://www.youtube.com/embed/JNAAR9ANRhs
Intro to Java: Functional Programming,Intro to Java: Functional Programming,Lesson 1: Variables and Data Types,1.8  Third Bus Stop,"['<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Note that Java allows you to write multiple instructions in the same statement!</p></div>', '<div class=""ureact-markdown css-tc5hjw""><hr aria-orientation=""horizontal"" aria-hidden=""true"" class=""chakra-divider css-zmjcvi"">\n<h1 class=""chakra-heading css-1b892vb"">Updating vs Setting variables</h1>\n<p class=""chakra-text css-o3oz8b"">When changing a variable value, you could either set it to a new value all together, or update it based on its previous value.</p>\n<p class=""chakra-text css-o3oz8b"">For example, if we have a variable called time and we want to add 5 to it, we write:</p>\n<p class=""chakra-text css-o3oz8b""><code class=""chakra-code css-1u83yg1"">time = time + 5;</code></p>\n<p class=""chakra-text css-o3oz8b"">This will <strong>Add</strong> 5 to whatever value time already had!</p>\n<p class=""chakra-text css-o3oz8b"">But if we want to set time to 5 without caring about what the current value was, we write:</p>\n<p class=""chakra-text css-o3oz8b""><code class=""chakra-code css-1u83yg1"">time = 5;</code></p></div>']",[],https://www.youtube.com/embed/gkh7spDZvPc
Intro to Java: Functional Programming,Intro to Java: Functional Programming,Lesson 1: Variables and Data Types,1.9  Displaying the Output,[],[],https://www.youtube.com/embed/1TuuWTOviOg
Intro to Java: Functional Programming,Intro to Java: Functional Programming,Lesson 1: Variables and Data Types,1.10  Remembering the Stops,[],[],https://www.youtube.com/embed/9g-aMXGqkis
Intro to Java: Functional Programming,Intro to Java: Functional Programming,Lesson 1: Variables and Data Types,1.11  The Bus Driver,[],[],https://www.youtube.com/embed/0b4kkAd7n6M
Intro to Java: Functional Programming,Intro to Java: Functional Programming,Lesson 1: Variables and Data Types,1.12  Variables (Strings),[],[],https://www.youtube.com/embed/NGRBCm0Pxyg
Intro to Java: Functional Programming,Intro to Java: Functional Programming,Lesson 1: Variables and Data Types,1.13  String Concatenation,[],[],https://www.youtube.com/embed/euvUmlJd1H8
Intro to Java: Functional Programming,Intro to Java: Functional Programming,Lesson 1: Variables and Data Types,1.14  String Operations,[],[],https://www.youtube.com/embed/Lc5L5RY8Oco
Intro to Java: Functional Programming,Intro to Java: Functional Programming,Lesson 1: Variables and Data Types,1.15  Variable Names,[],[],https://www.youtube.com/embed/p8naXcgIyZo
Intro to Java: Functional Programming,Intro to Java: Functional Programming,Lesson 1: Variables and Data Types,1.16  Data Types,[],[],https://www.youtube.com/embed/u-MrueO6Di0
Intro to Java: Functional Programming,Intro to Java: Functional Programming,Lesson 1: Variables and Data Types,1.17  Data Types Quiz,[],[],https://www.youtube.com/embed/R8baXQ2eoEU
Intro to Java: Functional Programming,Intro to Java: Functional Programming,Lesson 1: Variables and Data Types,1.18  All the Maths,[],[],https://www.youtube.com/embed/ddwQ8IOXY4E
Intro to Java: Functional Programming,Intro to Java: Functional Programming,Lesson 1: Variables and Data Types,1.19  Casting,[],[],https://www.youtube.com/embed/c1oyLnugYdA
Intro to Java: Functional Programming,Intro to Java: Functional Programming,Lesson 1: Variables and Data Types,1.20  Comments,[],[],https://www.youtube.com/embed/Y2c_rcI3iCU
Intro to Java: Functional Programming,Intro to Java: Functional Programming,Lesson 1: Variables and Data Types,1.21  The 5th Subject,[],[],
Intro to Java: Functional Programming,Intro to Java: Functional Programming,Lesson 1: Variables and Data Types,1.22  Track the Values,[],[],https://www.youtube.com/embed/T6uYDAyPaUk
Intro to Java: Functional Programming,Intro to Java: Functional Programming,Lesson 1: Variables and Data Types,1.23  Summary,[],[],https://www.youtube.com/embed/7q2RiO9nuEg
Intro to Java: Functional Programming,Intro to Java: Functional Programming,Lesson 1: Variables and Data Types,1.24  Lesson 1 Problem Set,"['<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Welcome to the Intro to Java: Functional Programming, Lesson 1 problem set!  These problem sets are an opportunity for you to practice the concepts you learned in class before moving on to the next lesson.  Learning a computer programming language is similar to learning a human language.  Nobody can pick it up overnight, there\'s a lot of vocabulary and syntax to remember.  Language learners often speak of the moment when they realized they stopped translating in their head and actually started thinking in their second language.  This will happen with Java too!  Eventually, you will be able to consider a task that needs coding and immediately imagine what Java code would complete it.  To get there, though, requires practice.</p>\n<p class=""chakra-text css-o3oz8b"">That\'s where the problem sets come in.  They aren\'t mandatory, and they aren\'t graded.  They\'re just extra learning materials to help you along.</p>\n<p class=""chakra-text css-o3oz8b"">You can download the problem set <a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://d17h27t6h515a5.cloudfront.net/topher/2016/July/57881edd_problem-set-1/problem-set-1.pdf"">here<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a>.</p></div>']",[],
Intro to Java: Functional Programming,Intro to Java: Functional Programming,Lesson 2: Control Flow and Conditionals,2.1  Introducing Control Flow,[],[],https://www.youtube.com/embed/MnNqMgiRJdY
Intro to Java: Functional Programming,Intro to Java: Functional Programming,Lesson 2: Control Flow and Conditionals,2.2  Decision Making,[],[],https://www.youtube.com/embed/WwSjnc4xfeA
Intro to Java: Functional Programming,Intro to Java: Functional Programming,Lesson 2: Control Flow and Conditionals,2.3  if Statement,[],[],https://www.youtube.com/embed/UZ8gEnPSHsw
Intro to Java: Functional Programming,Intro to Java: Functional Programming,Lesson 2: Control Flow and Conditionals,2.4  Self-Driving Car,[],[],https://www.youtube.com/embed/azKRGy3NkwM
Intro to Java: Functional Programming,Intro to Java: Functional Programming,Lesson 2: Control Flow and Conditionals,2.5  Recognize Traffic Lights,[],[],https://www.youtube.com/embed/QVQGMx6vB6E
Intro to Java: Functional Programming,Intro to Java: Functional Programming,Lesson 2: Control Flow and Conditionals,2.6  Windshield Wipers,[],[],
Intro to Java: Functional Programming,Intro to Java: Functional Programming,Lesson 2: Control Flow and Conditionals,2.7  Variable Scope,[],[],https://www.youtube.com/embed/N5XYmlvWaOg
Intro to Java: Functional Programming,Intro to Java: Functional Programming,Lesson 2: Control Flow and Conditionals,2.8  What's the Scope?,[],[],https://www.youtube.com/embed/7tr6x82rZ-0
Intro to Java: Functional Programming,Intro to Java: Functional Programming,Lesson 2: Control Flow and Conditionals,2.9  else Statement,[],[],https://www.youtube.com/embed/V5iB3phYtSA
Intro to Java: Functional Programming,Intro to Java: Functional Programming,Lesson 2: Control Flow and Conditionals,2.10  else-if,[],[],https://www.youtube.com/embed/hd_8nc6NfH8
Intro to Java: Functional Programming,Intro to Java: Functional Programming,Lesson 2: Control Flow and Conditionals,2.11  Multiple else-if's,[],[],https://www.youtube.com/embed/GUC_sIwJ8L0
Intro to Java: Functional Programming,Intro to Java: Functional Programming,Lesson 2: Control Flow and Conditionals,2.12  Boolean Expressions,[],[],https://www.youtube.com/embed/zPphSMCTh5Y
Intro to Java: Functional Programming,Intro to Java: Functional Programming,Lesson 2: Control Flow and Conditionals,2.13  Evaluate these Expressions,[],[],https://www.youtube.com/embed/XIPU0pcCS_g
Intro to Java: Functional Programming,Intro to Java: Functional Programming,Lesson 2: Control Flow and Conditionals,2.14  The Art Museum,[],[],https://www.youtube.com/embed/RBao6sZ8QbE
Intro to Java: Functional Programming,Intro to Java: Functional Programming,Lesson 2: Control Flow and Conditionals,2.15  Tickets to the Museum,[],[],https://www.youtube.com/embed/qLgBwHc1IGg
Intro to Java: Functional Programming,Intro to Java: Functional Programming,Lesson 2: Control Flow and Conditionals,2.16  Complete Museum Code,[],[],https://www.youtube.com/embed/SLS6hCosVok
Intro to Java: Functional Programming,Intro to Java: Functional Programming,Lesson 2: Control Flow and Conditionals,2.17  Logical Operators,"['<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><em class=""chakra-text css-o3oz8b"">This code assumes that age and isStudent have both been declared and initialized to have some value.</em></p>\n<p class=""chakra-text css-o3oz8b"">Here is the complete if statement that checks if someone\'s age is less-than or equal to 15 OR greater-than 60 OR if they are a student, and if any of those conditions are met, then they get a discounted ticket price = $5.</p>\n<p class=""chakra-text css-o3oz8b""><img alt=""if statement"" src=""http://i.imgur.com/Qlg3xqo.png?1"" class=""chakra-image css-0"" node=""[object Object]""></p></div>']",[],https://www.youtube.com/embed/FlUmtjTnB5E
Intro to Java: Functional Programming,Intro to Java: Functional Programming,Lesson 2: Control Flow and Conditionals,2.18  Order of Operations for Logical Operators,"['<div class=""ureact-markdown css-tc5hjw""><h3 class=""chakra-heading css-k57syw"">Order of Operations (for Logical Operators)</h3>\n<p class=""chakra-text css-o3oz8b"">Just like how math operators <code class=""chakra-code css-1u83yg1"">(*, /, +, -)</code> have an order that they are evaluated in, ie. multiplication is evaluated before addition, so do logical operators!</p>\n<p class=""chakra-text css-o3oz8b"">The <code class=""chakra-code css-1u83yg1"">!</code> operator will be evaluated first, then <code class=""chakra-code css-1u83yg1"">&amp;&amp;</code>, and finally <code class=""chakra-code css-1u83yg1"">||</code>. If you have a bunch of the same operations in an expression, like multiple <code class=""chakra-code css-1u83yg1"">||</code> combinations, then you just operate from left to right.</p>\n<p class=""chakra-text css-o3oz8b"">To <em class=""chakra-text css-o3oz8b"">change the order of operations</em> you can surround expressions in parentheses because <strong>parentheses will be evaluated before anything else</strong>.</p>\n<p class=""chakra-text css-o3oz8b"">So, the order of operations is:</p>\n<ol role=""list"" class=""css-13a5a39""><li class=""css-cvpopp"">Parentheses</li><li class=""css-cvpopp"">NOT <code class=""chakra-code css-1u83yg1"">!</code></li><li class=""css-cvpopp"">AND <code class=""chakra-code css-1u83yg1"">&amp;&amp;</code></li><li class=""css-cvpopp"">OR <code class=""chakra-code css-1u83yg1"">||</code></li></ol>\n<p class=""chakra-text css-o3oz8b"">For the expression:</p>\n<p class=""chakra-text css-o3oz8b""><code class=""chakra-code css-1u83yg1"">!true || false &amp;&amp; true</code></p>\n<p class=""chakra-text css-o3oz8b"">This will have the NOT <code class=""chakra-code css-1u83yg1"">!</code> operator evaluated first, so this simplifies to:</p>\n<p class=""chakra-text css-o3oz8b""><code class=""chakra-code css-1u83yg1"">false || false &amp;&amp; true</code></p>\n<p class=""chakra-text css-o3oz8b"">Then the AND <code class=""chakra-code css-1u83yg1"">&amp;&amp;</code> operator will be evaluated. The combination <code class=""chakra-code css-1u83yg1"">false &amp;&amp; true</code> equals <code class=""chakra-code css-1u83yg1"">false</code>, and the whole expression becomes:</p>\n<p class=""chakra-text css-o3oz8b""><code class=""chakra-code css-1u83yg1"">false || false</code></p>\n<p class=""chakra-text css-o3oz8b"">Finally the OR <code class=""chakra-code css-1u83yg1"">||</code> operator will be evaluated, and the whole expression evaluates to <code class=""chakra-code css-1u83yg1"">false</code>.</p></div>']",[],
Intro to Java: Functional Programming,Intro to Java: Functional Programming,Lesson 2: Control Flow and Conditionals,2.19  Logical Operators Practice,[],[],https://www.youtube.com/embed/JeYfO7AlwpY
Intro to Java: Functional Programming,Intro to Java: Functional Programming,Lesson 2: Control Flow and Conditionals,2.20  true or false?,[],[],https://www.youtube.com/embed/T-SJm62-JY4
Intro to Java: Functional Programming,Intro to Java: Functional Programming,Lesson 2: Control Flow and Conditionals,2.21  Nested if Statements,[],[],https://www.youtube.com/embed/wHZ9hOThwEU
Intro to Java: Functional Programming,Intro to Java: Functional Programming,Lesson 2: Control Flow and Conditionals,2.22  Restaurant Rating,[],[],https://www.youtube.com/embed/cp3Hs1cx8Ds
Intro to Java: Functional Programming,Intro to Java: Functional Programming,Lesson 2: Control Flow and Conditionals,2.23  switch Statement,"['<div class=""ureact-markdown css-tc5hjw""><h3 class=""chakra-heading css-k57syw"">Switch statement</h3>\n<p class=""chakra-text css-o3oz8b"">A <strong>switch</strong> statement let’s you check the value of a certain variable (like our coffee maker <code class=""chakra-code css-1u83yg1"">passcode</code>) and test it for equality against a list of possible values that it can take.</p>\n<p class=""chakra-text css-o3oz8b"">Each of these specific values is called a <strong>case</strong> and you can program different behavior for each case.</p>\n<p class=""chakra-text css-o3oz8b"">In Java this looks like this:</p>\n<p class=""chakra-text css-o3oz8b""><img alt=""coffee maker switch"" src=""http://i.imgur.com/c7tx8yK.png?1"" class=""chakra-image css-0"" node=""[object Object]""></p>\n<p class=""chakra-text css-o3oz8b""><em class=""chakra-text css-o3oz8b"">This code checks the value of <code class=""chakra-code css-1u83yg1"">passcode</code>, which is some 3-digit integer value, and compares it to the specific case values: <code class=""chakra-code css-1u83yg1"">555</code>, <code class=""chakra-code css-1u83yg1"">312</code>, and <code class=""chakra-code css-1u83yg1"">629</code>.</em></p>\n<p class=""chakra-text css-o3oz8b"">Then if the variable equals a certain case value, the code after that case will be executed. For example, in the code above, if <code class=""chakra-code css-1u83yg1"">passcode</code> is equal to <code class=""chakra-code css-1u83yg1"">312</code> then the <code class=""chakra-code css-1u83yg1"">coffeeType</code> String will be set to <em class=""chakra-text css-o3oz8b"">”Vanilla latte”</em>.</p>\n<h3 class=""chakra-heading css-k57syw"">Break;</h3>\n<p class=""chakra-text css-o3oz8b"">After this code is this word <code class=""chakra-code css-1u83yg1"">break;</code> which will <strong>break</strong> out of the case code and go to the ending curly brace of the switch statement, where this code prints the value of <code class=""chakra-code css-1u83yg1"">coffeeType</code>.</p>\n<p class=""chakra-text css-o3oz8b""><strong>So the break ensures that only one case at a time will have it’s code executed.</strong></p>\n<p class=""chakra-text css-o3oz8b"">If the break were <em class=""chakra-text css-o3oz8b""><strong>not</strong></em> included, Java would continue reading code in the switch statement line by line and keep executing statements (like the default case code) until it reaches the end of the switch statement or hits another break!</p>\n<h3 class=""chakra-heading css-k57syw"">Default case</h3>\n<p class=""chakra-text css-o3oz8b"">The <strong>default</strong> case typically comes at the end of a switch statement and its code will execute whenever the other cases aren’t met. So, if the <code class=""chakra-code css-1u83yg1"">passcode</code> was something like <code class=""chakra-code css-1u83yg1"">914</code>, this code doesn’t have a case for this particular value, and so it would fall into the default category and the <code class=""chakra-code css-1u83yg1"">coffeeType</code> String would be set to “Unknown"".</p></div>']",[],https://www.youtube.com/embed/DukuxLs1gaI
Intro to Java: Functional Programming,Intro to Java: Functional Programming,Lesson 2: Control Flow and Conditionals,2.24  switch(month),[],[],
Intro to Java: Functional Programming,Intro to Java: Functional Programming,Lesson 2: Control Flow and Conditionals,2.25  Conclusion,[],[],https://www.youtube.com/embed/ZNhViTImZ-A
Intro to Java: Functional Programming,Intro to Java: Functional Programming,Lesson 2: Control Flow and Conditionals,2.26  Lesson 2 Problem Set,"['<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Welcome to the Intro to Java: Functional Programming, Lesson 2 problem set!  These problem sets are an opportunity for you to practice the concepts you learned in class before moving on to the next lesson.  Learning a computer programming language is similar to learning a human language.  Nobody can pick it up overnight, there\'s a lot of vocabulary and syntax to remember.  Language learners often speak of the moment when they realized they stopped translating in their head and actually started thinking in their second language.  This will happen with Java too!  Eventually, you will be able to consider a task that needs coding and immediately imagine what Java code would complete it.  To get there, though, requires practice.</p>\n<p class=""chakra-text css-o3oz8b"">That\'s where the problem sets come in.  They aren\'t mandatory, and they aren\'t graded.  They\'re just extra learning materials to help you along.</p>\n<p class=""chakra-text css-o3oz8b"">You can download the problem set <a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://s3.amazonaws.com/video.udacity-data.com/topher/2018/May/5afb348b_problem-set-2/problem-set-2.pdf"">here<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a>.</p></div>']",[],
Intro to Java: Functional Programming,Intro to Java: Functional Programming,Lesson 3: Functions,3.1  Introducing Functions 1,"['<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">If you\'d like to hear <em class=""chakra-text css-o3oz8b"">Heart of Glass</em> by Blondie, (which I highly recommend) you can <a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://www.youtube.com/watch?v=WGU_4-5RaxU"">find it here<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a>!</p></div>']",[],https://www.youtube.com/embed/loAZIvBKWO0
Intro to Java: Functional Programming,Intro to Java: Functional Programming,Lesson 3: Functions,3.2  Introducing Functions 2,[],[],https://www.youtube.com/embed/vtYPptq5MgY
Intro to Java: Functional Programming,Intro to Java: Functional Programming,Lesson 3: Functions,3.3  What is a Function?,[],[],https://www.youtube.com/embed/ePxfZhm0XHA
Intro to Java: Functional Programming,Intro to Java: Functional Programming,Lesson 3: Functions,3.4  Importance of Functions,[],[],https://www.youtube.com/embed/iJJFYsIrJPs
Intro to Java: Functional Programming,Intro to Java: Functional Programming,Lesson 3: Functions,3.5  Function Definition,[],[],https://www.youtube.com/embed/OvJvPhxQU8M
Intro to Java: Functional Programming,Intro to Java: Functional Programming,Lesson 3: Functions,3.6  Practice with Syntax,[],[],https://www.youtube.com/embed/wfL52DiEiy8
Intro to Java: Functional Programming,Intro to Java: Functional Programming,Lesson 3: Functions,3.7  Calling Chorus,[],[],https://www.youtube.com/embed/qJsv3cJ5g_k
Intro to Java: Functional Programming,Intro to Java: Functional Programming,Lesson 3: Functions,3.8  Play Music,[],[],
Intro to Java: Functional Programming,Intro to Java: Functional Programming,Lesson 3: Functions,3.9  Parameters and Arguments,[],[],https://www.youtube.com/embed/fD95pvjMbpk
Intro to Java: Functional Programming,Intro to Java: Functional Programming,Lesson 3: Functions,3.10  Weather Arguments,[],[],https://www.youtube.com/embed/rU2nMms01P4
Intro to Java: Functional Programming,Intro to Java: Functional Programming,Lesson 3: Functions,3.11  Variable Temperature,[],[],https://www.youtube.com/embed/MIqKTKEcp88
Intro to Java: Functional Programming,Intro to Java: Functional Programming,Lesson 3: Functions,3.12  Rollercoaster Parameters,[],[],https://www.youtube.com/embed/EUEfNDk1tYg
Intro to Java: Functional Programming,Intro to Java: Functional Programming,Lesson 3: Functions,3.13  Multiple Parameters Intro,[],[],https://www.youtube.com/embed/d6huYDR2h1o
Intro to Java: Functional Programming,Intro to Java: Functional Programming,Lesson 3: Functions,3.14  Multiple Parameters,[],[],https://www.youtube.com/embed/xvkbadMCp-o
Intro to Java: Functional Programming,Intro to Java: Functional Programming,Lesson 3: Functions,3.15  Argument Order,[],[],https://www.youtube.com/embed/P1cyT93rlTA
Intro to Java: Functional Programming,Intro to Java: Functional Programming,Lesson 3: Functions,3.16  Liking Photos,"['<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">There are many correct ways to write a function call for the function <code class=""chakra-code css-1u83yg1"">likePhoto</code>; as long as you match the number and type of parameters correctly, this counts as a valid call.</p></div>']",[],https://www.youtube.com/embed/5E7dJ-S6EcY
Intro to Java: Functional Programming,Intro to Java: Functional Programming,Lesson 3: Functions,3.17  Return Values,[],[],https://www.youtube.com/embed/v-_m3yM5Cfo
Intro to Java: Functional Programming,Intro to Java: Functional Programming,Lesson 3: Functions,3.18  Popular Photos,[],[],https://www.youtube.com/embed/UCGNvIMr-Nc
Intro to Java: Functional Programming,Intro to Java: Functional Programming,Lesson 3: Functions,3.19  Return Photo Likes,[],[],https://www.youtube.com/embed/FBEaFuZl6gs
Intro to Java: Functional Programming,Intro to Java: Functional Programming,Lesson 3: Functions,3.20  What's Missing?,[],[],https://www.youtube.com/embed/S8uGEC-Xt8Y
Intro to Java: Functional Programming,Intro to Java: Functional Programming,Lesson 3: Functions,3.21  Making Change,[],[],
Intro to Java: Functional Programming,Intro to Java: Functional Programming,Lesson 3: Functions,3.22  Random Numbers,[],[],https://www.youtube.com/embed/B-tP88rWxAQ
Intro to Java: Functional Programming,Intro to Java: Functional Programming,Lesson 3: Functions,3.23  Rolling Dice,[],[],https://www.youtube.com/embed/3ipvETpwI40
Intro to Java: Functional Programming,Intro to Java: Functional Programming,Lesson 3: Functions,3.24  Consider All Sides,[],[],https://www.youtube.com/embed/VfdhKp5ny58
Intro to Java: Functional Programming,Intro to Java: Functional Programming,Lesson 3: Functions,3.25  Improved Dice Roll,[],[],
Intro to Java: Functional Programming,Intro to Java: Functional Programming,Lesson 3: Functions,3.26  Power of Functions,[],[],https://www.youtube.com/embed/wnSb4nZXjfc
Intro to Java: Functional Programming,Intro to Java: Functional Programming,Lesson 3: Functions,3.27  Java Documentation,"['<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">To learn more about the functions and variable types that Java 8 includes, take a look at <a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://docs.oracle.com/javase/8/docs/api/java/lang/package-summary.html"">this documentation<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a>. You can click on the things you find most interesting to learn more about them! Here\'s the documentation for the <a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"">String class<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a> and the <a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://docs.oracle.com/javase/8/docs/api/java/lang/Math.html"">Math class<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a>.</p></div>']",[],https://www.youtube.com/embed/YtBSsc7p23w
Intro to Java: Functional Programming,Intro to Java: Functional Programming,Lesson 3: Functions,3.28  Read this Doc,[],[],https://www.youtube.com/embed/FGK4G1ijZIM
Intro to Java: Functional Programming,Intro to Java: Functional Programming,Lesson 3: Functions,3.29  Importance of Documentation,[],[],https://www.youtube.com/embed/4Vai4YI2_wA
Intro to Java: Functional Programming,Intro to Java: Functional Programming,Lesson 3: Functions,3.30  Java Documentation Comments,"['<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Below are the Java docs that the Java documentation comments create.</p>\n<p class=""chakra-text css-o3oz8b"">General comment structure:</p>\n<p class=""chakra-text css-o3oz8b""><img alt=""Javadoc"" src=""http://i.imgur.com/X1IiVPs.png?1"" class=""chakra-image css-0"" node=""[object Object]""></p>\n<p class=""chakra-text css-o3oz8b"">Generated Java documentation for the <code class=""chakra-code css-1u83yg1"">rollDice(int sides)</code> function:</p>\n<p class=""chakra-text css-o3oz8b""><img alt=""rollDice javaDoc"" src=""http://i.imgur.com/46bfDmi.png?1"" class=""chakra-image css-0"" node=""[object Object]""></p></div>']",[],https://www.youtube.com/embed/-kVaTNFCvsc
Intro to Java: Functional Programming,Intro to Java: Functional Programming,Lesson 3: Functions,3.31  Complete this Doc,"['<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Here is the Java doc comment that produces the incomplete document shown above:</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-php"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span class=""token doc-comment"" style=""color: rgb(113, 113, 101); font-style: italic;"">/**Returns the absolute value of an int value. If the argument is not negative, the argument\n</span><span class=""token doc-comment"" style=""color: rgb(113, 113, 101); font-style: italic;"">/* is returned. If the argument is negative, the negation of the argument is returned.\n</span><span class=""token doc-comment"" style=""color: rgb(113, 113, 101); font-style: italic;"">/*\n</span><span class=""token doc-comment"" style=""color: rgb(113, 113, 101); font-style: italic;"">/* @return </span><span class=""token doc-comment"" style=""color: rgb(68, 85, 136); font-style: italic; font-weight: bold;"">the</span><span class=""token doc-comment"" style=""color: rgb(113, 113, 101); font-style: italic;""> absolute value of the argument.\n</span><span class=""token doc-comment"" style=""color: rgb(113, 113, 101); font-style: italic;"">*/</span></code></div></div></pre></div>']",[],https://www.youtube.com/embed/FpaNWDIMQCQ
Intro to Java: Functional Programming,Intro to Java: Functional Programming,Lesson 3: Functions,3.32  Conclusion,[],[],https://www.youtube.com/embed/ZMm09gGYOv0
Intro to Java: Functional Programming,Intro to Java: Functional Programming,Lesson 3: Functions,3.33  Lesson 3 Problem Set,"['<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Welcome to the Intro to Java: Functional Programming, Lesson 3 problem set!  These problem sets are an opportunity for you to practice the concepts you learned in class before moving on to the next lesson.  Learning a computer programming language is similar to learning a human language.  Nobody can pick it up overnight, there\'s a lot of vocabulary and syntax to remember.  Language learners often speak of the moment when they realized they stopped translating in their head and actually started thinking in their second language.  This will happen with Java too!  Eventually, you will be able to consider a task that needs coding and immediately imagine what Java code would complete it.  To get there, though, requires practice.</p>\n<p class=""chakra-text css-o3oz8b"">That\'s where the problem sets come in.  They aren\'t mandatory, and they aren\'t graded.  They\'re just extra learning materials to help you along.</p>\n<p class=""chakra-text css-o3oz8b"">You can download the problem set <a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://d17h27t6h515a5.cloudfront.net/topher/2016/July/57881f16_problem-set-3/problem-set-3.pdf"">here<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a>.</p></div>']",[],
Intro to Java: Functional Programming,Intro to Java: Functional Programming,Lesson 4: Loops,4.1  Alarm,[],[],https://www.youtube.com/embed/jr65lrpT5nc
Intro to Java: Functional Programming,Intro to Java: Functional Programming,Lesson 4: Loops,4.2  How Many Repeats?,[],[],https://www.youtube.com/embed/H5AynrtulUw
Intro to Java: Functional Programming,Intro to Java: Functional Programming,Lesson 4: Loops,4.3  While Loops,"['<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><code class=""chakra-code css-1u83yg1"">while</code> loops allow you to repeat an <code class=""chakra-code css-1u83yg1"">if</code> condition over and over for as long as that condition remains <code class=""chakra-code css-1u83yg1"">true</code>, hence the name <code class=""chakra-code css-1u83yg1"">while</code>!</p>\n<p class=""chakra-text css-o3oz8b"">To create a <code class=""chakra-code css-1u83yg1"">while</code> loop, simply follow the same steps like an <code class=""chakra-code css-1u83yg1"">if</code> condition, but replace the <code class=""chakra-code css-1u83yg1"">if</code> with a <code class=""chakra-code css-1u83yg1"">while</code> to look something like this:</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-java"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">while</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span>isRaining</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">{</span><span>\n</span><span>   </span><span class=""token"" style=""color: rgb(68, 85, 136); font-weight: bold;"">System</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span>out</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">println</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(221, 17, 68);"">""It\'s still raining outside!""</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span><span>   isRaining </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">=</span><span> </span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">checkWeather</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(15, 43, 61);"">}</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(68, 85, 136); font-weight: bold;"">System</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span>out</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">println</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(221, 17, 68);"">""Now it\'s not raining anymore""</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span></code></div></div></pre>\n<p class=""chakra-text css-o3oz8b"">This code block above will continue to print the message <code class=""chakra-code css-1u83yg1"">""It\'s still raining outside!""</code> for as long as the boolean <code class=""chakra-code css-1u83yg1"">isRaining</code> is <strong>true</strong>, once the function <code class=""chakra-code css-1u83yg1"">checkWeather()</code> returns <strong>false</strong> <code class=""chakra-code css-1u83yg1"">isRaining</code> will no longer be <strong>true</strong>, so the while loop would end and the message <code class=""chakra-code css-1u83yg1"">""Now it\'s not raining anymore""</code> will be displayed.</p>\n<p class=""chakra-text css-o3oz8b"">Unlike <code class=""chakra-code css-1u83yg1"">if</code> blocks however, <code class=""chakra-code css-1u83yg1"">while</code> loops don\'t have <code class=""chakra-code css-1u83yg1"">else</code> blocks, they are simply like a repeated <code class=""chakra-code css-1u83yg1"">if</code> block that would only end when the condition becomes false.</p></div>']",[],https://www.youtube.com/embed/_jrlCI86qOQ
Intro to Java: Functional Programming,Intro to Java: Functional Programming,Lesson 4: Loops,4.4  Googol,[],[],https://www.youtube.com/embed/TXeRINvO7o4
Intro to Java: Functional Programming,Intro to Java: Functional Programming,Lesson 4: Loops,4.5  Yahtzee,[],[],https://www.youtube.com/embed/h7tzm7NDZOQ
Intro to Java: Functional Programming,Intro to Java: Functional Programming,Lesson 4: Loops,4.6  It's a Match,[],[],https://www.youtube.com/embed/5dTi-TF41MA
Intro to Java: Functional Programming,Intro to Java: Functional Programming,Lesson 4: Loops,4.7  Three Dice,[],[],https://www.youtube.com/embed/QA-8hmG-rgM
Intro to Java: Functional Programming,Intro to Java: Functional Programming,Lesson 4: Loops,4.8  Roll a Yahtzee,"['<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">You should modify the function <code class=""chakra-code css-1u83yg1"">int keepRolling()</code> by adding code to check for a 5 dice match (Yahtzee) rather than just 3 dice.</p>\n<p class=""chakra-text css-o3oz8b"">To do so, follow these steps:</p>\n<ol role=""list"" class=""css-13a5a39""><li class=""css-cvpopp"">Add 2 new integer variables <code class=""chakra-code css-1u83yg1"">dice4</code> and <code class=""chakra-code css-1u83yg1"">dice5</code> and initialize them to the function call <code class=""chakra-code css-1u83yg1"">rollDice()</code></li><li class=""css-cvpopp"">Then inside the while loop, make sure you reset the values of those integers to another call of <code class=""chakra-code css-1u83yg1"">rollDice()</code> each.</li><li class=""css-cvpopp"">Finally, update the while loop condition to check for the mismatch of all 5 dice. Remember you can simply check that all dice match and surround that with the <code class=""chakra-code css-1u83yg1"">!</code> not operator like with the existing 3 dice implementation.</li></ol></div>']",[],
Intro to Java: Functional Programming,Intro to Java: Functional Programming,Lesson 4: Loops,4.9  Warning Alert,[],[],https://www.youtube.com/embed/3MNAkbASgQ8
Intro to Java: Functional Programming,Intro to Java: Functional Programming,Lesson 4: Loops,4.10  For Loops,[],[],https://www.youtube.com/embed/27XY809Xj2o
Intro to Java: Functional Programming,Intro to Java: Functional Programming,Lesson 4: Loops,4.11  Loop Counters,[],[],https://www.youtube.com/embed/c-hzUnhSCKg
Intro to Java: Functional Programming,Intro to Java: Functional Programming,Lesson 4: Loops,4.12  Count the Blocks,"['<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">You need to implement this function\n<code class=""chakra-code css-1u83yg1""> public int countBlocks(int levels)</code> that takes the number of levels as an input argument and returns the number of blocks required to build a pyramid made up of that many levels.</p>\n<p class=""chakra-text css-o3oz8b"">Remember that <code class=""chakra-code css-1u83yg1"">for</code> loops help count up to a certain number (which is the value of <code class=""chakra-code css-1u83yg1"">levels</code>  in this case) and inside the loop, the number of blocks for that level would be the result of multiplying the loop counter by itself (for example <code class=""chakra-code css-1u83yg1""> i*i</code>)</p>\n<p class=""chakra-text css-o3oz8b"">This means that if for every level, the number of blocks in that level was added to some variable <code class=""chakra-code css-1u83yg1"">total</code> then by the end of the loop the total number of blocks needed to build the entire pyramid would be in that <code class=""chakra-code css-1u83yg1"">total</code> variable and could be returned as the result of that function!</p></div>']",[],
Intro to Java: Functional Programming,Intro to Java: Functional Programming,Lesson 4: Loops,4.13  Not Just Increment,[],[],https://www.youtube.com/embed/MUUSeckVQaM
Intro to Java: Functional Programming,Intro to Java: Functional Programming,Lesson 4: Loops,4.14  Counting Down,[],[],https://www.youtube.com/embed/HJiLS9t9f58
Intro to Java: Functional Programming,Intro to Java: Functional Programming,Lesson 4: Loops,4.15  Step Faster,[],[],https://www.youtube.com/embed/O3uLxDpFfyY
Intro to Java: Functional Programming,Intro to Java: Functional Programming,Lesson 4: Loops,4.16  Break,[],[],https://www.youtube.com/embed/kClpJWOLGfY
Intro to Java: Functional Programming,Intro to Java: Functional Programming,Lesson 4: Loops,4.17  Know When to Quit Intro,"['<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><strong>Disclaimer:</strong> the Martingale betting system is a terrible idea in practice. You can only keep doubling your bet until you blow through your entire bankroll, and then you\'re stuck. For more commentary check out this article on the <a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://en.wikipedia.org/wiki/Martingale_betting_system"">Martingale betting system<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a>.</p></div>']",[],https://www.youtube.com/embed/s714sIsg6js
Intro to Java: Functional Programming,Intro to Java: Functional Programming,Lesson 4: Loops,4.18  Know When to Quit Quiz,"['<div class=""ureact-markdown css-tc5hjw""><h2 class=""chakra-heading css-fz7yxd"">Quiz</h2>\n<p class=""chakra-text css-o3oz8b"">Modify the <code class=""chakra-code css-1u83yg1"">martingale()</code> method by adding an extra <code class=""chakra-code css-1u83yg1"">if</code> statment that checks if the <code class=""chakra-code css-1u83yg1"">money</code> value has reached or exceeded the target specified, i.e:</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-scss"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">if</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span>money </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">&gt;=</span><span> target</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span></code></div></div></pre>\n<p class=""chakra-text css-o3oz8b"">If it has, then the code should break out of the while loop using the <code class=""chakra-code css-1u83yg1"">break;</code> statement</p></div>']",[],
Intro to Java: Functional Programming,Intro to Java: Functional Programming,Lesson 4: Loops,4.19  Know When to Quit Solution,"['<div class=""ureact-markdown css-tc5hjw""><h2 class=""chakra-heading css-fz7yxd"">Solution</h2>\n<p class=""chakra-text css-o3oz8b"">One solution is to add the <code class=""chakra-code css-1u83yg1"">break</code> statment after the money value has been modified in all possible cases:</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-java"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">public</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">int</span><span> </span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">martingale</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">{</span><span>\n</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">int</span><span> money </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">=</span><span> </span><span class=""token"" style=""color: rgb(2, 124, 124);"">1000</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">int</span><span> target </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">=</span><span> </span><span class=""token"" style=""color: rgb(2, 124, 124);"">1200</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">int</span><span> bet </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">=</span><span> </span><span class=""token"" style=""color: rgb(2, 124, 124);"">10</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">while</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span>money </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">&gt;</span><span> bet</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">{</span><span>\n</span><span>  </span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">boolean</span><span> win </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">=</span><span> </span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">play</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span><span>  </span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">if</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span>win</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">{</span><span>\n</span><span>   money </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">+=</span><span> bet</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span><span>   bet </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">=</span><span> </span><span class=""token"" style=""color: rgb(2, 124, 124);"">10</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span><span>  </span><span class=""token"" style=""color: rgb(15, 43, 61);"">}</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">else</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">{</span><span>\n</span><span>   money </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">-=</span><span> bet</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span><span>   bet </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">*=</span><span> </span><span class=""token"" style=""color: rgb(2, 124, 124);"">2</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span><span>  </span><span class=""token"" style=""color: rgb(15, 43, 61);"">}</span><span>\n</span><span>  </span><span class=""token"" style=""color: rgb(113, 113, 101); font-style: italic;"">// Add the break here:</span><span>\n</span><span>  </span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">if</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span>money </span><span class=""token"" style=""color: rgb(15, 43, 61); background: rgb(255, 255, 255);"">&gt;=</span><span> target</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span>\n</span><span>     </span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">break</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">}</span><span>\n</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">return</span><span> money</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span><span></span><span class=""token"" style=""color: rgb(15, 43, 61);"">}</span></code></div></div></pre>\n<p class=""chakra-text css-o3oz8b"">However, you might find other spots as to where you can add the break that might still work! The key is to make sure that it\'s checked in ALL possible cases.</p>\n<p class=""chakra-text css-o3oz8b""><strong>Note:</strong>  You can actually add this extra check inside the while condition itself making it:</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-lisp"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span>while </span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token car"">money&gt;bet</span><span> &amp;&amp; money&lt;target</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span></code></div></div></pre>\n<p class=""chakra-text css-o3oz8b"">But the goal of this exercise was to practice using the <code class=""chakra-code css-1u83yg1"">break</code> statment, which give you the extra flexibility to break from the while loop at anytime inside the code block instead of waiting for another iteration.</p></div>']",[],
Intro to Java: Functional Programming,Intro to Java: Functional Programming,Lesson 4: Loops,4.20  Press Conference,[],[],https://www.youtube.com/embed/N2lINxKw2QE
Intro to Java: Functional Programming,Intro to Java: Functional Programming,Lesson 4: Loops,4.21  Arrays,[],[],https://www.youtube.com/embed/Xrjcge5lAT4
Intro to Java: Functional Programming,Intro to Java: Functional Programming,Lesson 4: Loops,4.22  Array Index Intro,[],[],https://www.youtube.com/embed/1ehgBgyv_GY
Intro to Java: Functional Programming,Intro to Java: Functional Programming,Lesson 4: Loops,4.23  Array Index Quiz,"['<div class=""ureact-markdown css-tc5hjw""><h2 class=""chakra-heading css-fz7yxd"">Quiz</h2></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">What will the value of <code class=""chakra-code css-1u83yg1"">s</code> become after running the above code?</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">4.0</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">9.1</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">9.99</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">5.1</p></div>']",['https://video.udacity-data.com/topher/2018/May/5afa09a5_screen-shot-2018-05-14-at-3.11.32-pm/screen-shot-2018-05-14-at-3.11.32-pm.png'],
Intro to Java: Functional Programming,Intro to Java: Functional Programming,Lesson 4: Loops,4.24  Press Conference Part 2,[],[],https://www.youtube.com/embed/SQobESRmvUE
Intro to Java: Functional Programming,Intro to Java: Functional Programming,Lesson 4: Loops,4.25  Arrays and Loops,[],[],https://www.youtube.com/embed/2YpyYufl498
Intro to Java: Functional Programming,Intro to Java: Functional Programming,Lesson 4: Loops,4.26  Rubik's Cube Championship,[],[],https://www.youtube.com/embed/5pTu0ys3t1M
Intro to Java: Functional Programming,Intro to Java: Functional Programming,Lesson 4: Loops,4.27  Find the Longest Name,"['<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">You should implement the function <code class=""chakra-code css-1u83yg1"">String findLongestName(String [] names)</code> which takes an array of Strings as an input containing a list of names, and return the String that has the longest name.</p>\n<p class=""chakra-text css-o3oz8b"">To do so, try to follow these steps:</p>\n<ol role=""list"" class=""css-13a5a39""><li class=""css-cvpopp"">\n<p class=""chakra-text css-o3oz8b"">The first step is to calculate and store the length of the input array, this is done using <code class=""chakra-code css-1u83yg1"">names.length;</code> and store that in an integer variable.</p>\n</li><li class=""css-cvpopp"">\n<p class=""chakra-text css-o3oz8b"">Then create a new String called <code class=""chakra-code css-1u83yg1"">longestName</code> that will store the longest name in the array of names, initialize it with the first name in the array, that is <code class=""chakra-code css-1u83yg1"">names[0]</code>.</p>\n</li><li class=""css-cvpopp"">\n<p class=""chakra-text css-o3oz8b"">Next, you should create a <code class=""chakra-code css-1u83yg1"">for</code> loop that will compare every name in the array using <code class=""chakra-code css-1u83yg1"">names[i]</code> against the <code class=""chakra-code css-1u83yg1"">longestName</code>. Only replace the <code class=""chakra-code css-1u83yg1"">longestName</code> value if the <code class=""chakra-code css-1u83yg1"">names[i]</code> is longer .</p>\n</li><li class=""css-cvpopp"">\n<p class=""chakra-text css-o3oz8b"">Finally, return the <code class=""chakra-code css-1u83yg1"">longestName</code> variable as the return value of the function.</p>\n</li></ol></div>']",[],
Intro to Java: Functional Programming,Intro to Java: Functional Programming,Lesson 4: Loops,4.28  What if There's a Tie?,[],[],https://www.youtube.com/embed/XWwXzeQfdk8
Intro to Java: Functional Programming,Intro to Java: Functional Programming,Lesson 4: Loops,4.29  2D Arrays,[],[],https://www.youtube.com/embed/Ylh7_JBeAao
Intro to Java: Functional Programming,Intro to Java: Functional Programming,Lesson 4: Loops,4.30  Sandra's Grade,[],[],
Intro to Java: Functional Programming,Intro to Java: Functional Programming,Lesson 4: Loops,4.31  Iterating Over 2D Arrays,[],[],https://www.youtube.com/embed/Z6VQHzIO_K8
Intro to Java: Functional Programming,Intro to Java: Functional Programming,Lesson 4: Loops,4.32  Nested Loops,[],[],https://www.youtube.com/embed/WFkVk2QCfl4
Intro to Java: Functional Programming,Intro to Java: Functional Programming,Lesson 4: Loops,4.33  Inside a Nested Loop,[],[],https://www.youtube.com/embed/1yNe_lSmnew
Intro to Java: Functional Programming,Intro to Java: Functional Programming,Lesson 4: Loops,4.34  How Nested Loops Work,[],[],https://www.youtube.com/embed/nRiRCf1zZKU
Intro to Java: Functional Programming,Intro to Java: Functional Programming,Lesson 4: Loops,4.35  Summary,[],[],https://www.youtube.com/embed/NqwfQ-DhnT4
Intro to Java: Functional Programming,Intro to Java: Functional Programming,Lesson 4: Loops,4.36  Lesson 4 Problem Set,"['<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Welcome to the Intro to Java: Functional Programming, Lesson 4 problem set!  These problem sets are an opportunity for you to practice the concepts you learned in class before moving on to the next lesson.  Learning a computer programming language is similar to learning a human language.  Nobody can pick it up overnight, there\'s a lot of vocabulary and syntax to remember.  Language learners often speak of the moment when they realized they stopped translating in their head and actually started thinking in their second language.  This will happen with Java too!  Eventually, you will be able to consider a task that needs coding and immediately imagine what Java code would complete it.  To get there, though, requires practice.</p>\n<p class=""chakra-text css-o3oz8b"">That\'s where the problem sets come in.  They aren\'t mandatory, and they aren\'t graded.  They\'re just extra learning materials to help you along.</p>\n<p class=""chakra-text css-o3oz8b"">You can download the problem set <a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://d17h27t6h515a5.cloudfront.net/topher/2016/July/57881f24_problem-set-4/problem-set-4.pdf"">here<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a>.</p></div>']",[],
Intro to Java: Functional Programming,Intro to Java: Functional Programming,Lesson 5: IntelliJ and Debugging,5.1  Introduction,[],[],
Intro to Java: Functional Programming,Intro to Java: Functional Programming,Lesson 5: IntelliJ and Debugging,5.2  JDK,[],['https://cdn.udacity.com/video/84c412ec-d4a2-11e9-a398-2b9295f88044/poster.jpg'],
Intro to Java: Functional Programming,Intro to Java: Functional Programming,Lesson 5: IntelliJ and Debugging,5.3  Mac: Install Java Development Kit,"['<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://classroom.udacity.com/courses/ud282/lessons/8186340458/concepts/ce0dd8b0-beec-4a62-a5be-53d1017b532a"">Click here for instructions for Windows<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a>\n<br>\n<br></p>\n<h2 class=""chakra-heading css-fz7yxd"">1. Verify That You Have Java</h2>\n<p class=""chakra-text css-o3oz8b"">First, check if you have the Java Developer Kit, <strong>version 8 or greater</strong> already installed. To check if you have JDK installed (and which version), open a terminal window and type: <code class=""chakra-code css-1u83yg1"">java -version</code> and hit enter.</p>\n<p class=""chakra-text css-o3oz8b""><em class=""chakra-text css-o3oz8b"">(If you’re not sure how to open a terminal window or what version of Java you have, don’t worry, we’ll go over this in the <a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://classroom.udacity.com/courses/ud282/lessons/8186340458/concepts/f6faaab8-c5b7-4f84-927c-9ddfa3aa306c"">next video<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a>!)</em></p>\n<p class=""chakra-text css-o3oz8b"">The example below shows Java version 1.8.0_91 -- the version number comes after the “1.”</p>\n<p class=""chakra-text css-o3oz8b""><img alt=""terminal java -version image"" src=""http://i.imgur.com/WHIRZWr.png"" class=""chakra-image css-0"" node=""[object Object]""></p>\n<p class=""chakra-text css-o3oz8b"">If you have Java 8 or greater, you computer is set up!\nIf the JDK is not available, or the version is lower than 8, go on to Step 2 below.\n<br>\n<br></p>\n<h2 class=""chakra-heading css-fz7yxd"">2. Download the Java Development Kit</h2>\n<p class=""chakra-text css-o3oz8b"">Download the Java Development Kit, aka, the JDK, <a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""http://www.oracle.com/technetwork/java/javase/downloads/index.html"">from this page<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a>.</p>\n<p class=""chakra-text css-o3oz8b"">Oracle, the company that maintains Java, has a lot of options and acronyms. We\'re looking for the standard edition (SE) JDK. This is the kit you need to start developing your apps with Java.\nAs of June 2016, the download icon for the JDK looked like this:</p>\n<p class=""chakra-text css-o3oz8b""><img alt=""JDK download icon"" src=""http://i.imgur.com/wi2T16C.png?1"" class=""chakra-image css-0"" node=""[object Object]""></p>\n<p class=""chakra-text css-o3oz8b"">After you click the download link, you\'ll see a list of options for download. Go to the Java SE Development Kit menu of options. Do not go to the demos and samples (the menus look very similar, so make sure to read the heading at the top).\n<br>\n<br></p>\n<h2 class=""chakra-heading css-fz7yxd"">3. Install JDK</h2>\n<p class=""chakra-text css-o3oz8b"">This download page has options listed for Mac and Windows and other platforms, and we’re interested in the one Mac option. Download the Mac OS X version (highlighted below).\n<em class=""chakra-text css-o3oz8b"">Note: JDK 8u91 and 8u92 are both okay to download, the important part is that they are both Java version 8.</em></p>\n<p class=""chakra-text css-o3oz8b""><img alt=""image of Mac OS X Java download"" src=""http://i.imgur.com/QKIHRbq.png?2"" class=""chakra-image css-0"" node=""[object Object]""></p>\n<p class=""chakra-text css-o3oz8b"">Before you can download this, you’ll need to click that you accept the license agreement, then you can click the link to download it.\nOnce you\'ve downloaded it, double click it to install.\n<br>\n<br></p>\n<h2 class=""chakra-heading css-fz7yxd"">4. Verify That You Have Java</h2>\n<p class=""chakra-text css-o3oz8b"">Go back to Step 1 and confirm that you have Java version 8 or higher installed. <strong>IntelliJ needs a JDK in order to work</strong>, so make sure you have this installed before proceeding.</p>\n<p class=""chakra-text css-o3oz8b"">If you can\'t get the download to work, look for error messages, and try googling to find a solution.</p>\n<p class=""chakra-text css-o3oz8b""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""http://www.oracle.com/technetwork/java/javase/downloads/index.html"">Link to Java download site<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a></p></div>']",['http://i.imgur.com/WHIRZWr.png'],
Intro to Java: Functional Programming,Intro to Java: Functional Programming,Lesson 5: IntelliJ and Debugging,5.4  Windows: Install Java Development Kit,"['<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://classroom.udacity.com/courses/ud282/lessons/8186340458/concepts/8ddd79b0-5a61-4e10-883a-95ff366e97a9"">Click here for instructions for Mac<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a>\n<br>\n<br></p>\n<h2 class=""chakra-heading css-fz7yxd"">1. Verify That You Have Java</h2>\n<p class=""chakra-text css-o3oz8b"">First, check if you have the Java Developer Kit, <strong>version 8 or greater</strong> already installed. To check if you have JDK installed (and which version), open a command prompt window and type: <code class=""chakra-code css-1u83yg1"">java -version</code> and hit enter.</p>\n<p class=""chakra-text css-o3oz8b""><em class=""chakra-text css-o3oz8b"">(If you’re not sure how to open a command prompt window or what version of Java you have, don’t worry, we’ll go over this in the next video! So, you can skip this step, and proceed to step 2 to install the latest version of the JDK.)</em></p>\n<p class=""chakra-text css-o3oz8b"">The example below shows Java version 1.8.0_92 -- the version number comes after the “1.”</p>\n<p class=""chakra-text css-o3oz8b""><img alt=""command prompt java -version image"" src=""http://i.imgur.com/1DjsTUg.png"" class=""chakra-image css-0"" node=""[object Object]""></p>\n<p class=""chakra-text css-o3oz8b"">If you have Java 8 or greater, you computer is set up!\nIf the JDK is not available, or the version is lower than 8, go on to Step 2 below.\n<br>\n<br></p>\n<h2 class=""chakra-heading css-fz7yxd"">2. Download the Java Development Kit</h2>\n<p class=""chakra-text css-o3oz8b"">Download the Java Development Kit, aka, the JDK, <a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""http://www.oracle.com/technetwork/java/javase/downloads/index.html"">from this page<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a>.</p>\n<p class=""chakra-text css-o3oz8b"">Oracle, the company that maintains Java, has a lot of options and acronyms. We\'re looking for the standard edition (SE) JDK. This is the kit you need to start developing your apps with Java.\nAs of June 2016, the download icon for the JDK looked like this:</p>\n<p class=""chakra-text css-o3oz8b""><img alt=""JDK download link"" src=""http://i.imgur.com/wi2T16C.png?1"" class=""chakra-image css-0"" node=""[object Object]""></p>\n<p class=""chakra-text css-o3oz8b"">After you click the download link, you\'ll see a list of options for download. Go to the Java SE Development Kit menu of options. Do not go to the demos and samples (the menus look very similar, so make sure to read the heading at the top).\n<br>\n<br></p>\n<h2 class=""chakra-heading css-fz7yxd"">3. Install JDK</h2>\n<p class=""chakra-text css-o3oz8b"">This download page has options listed for Mac and Windows and other platforms, and we’re interested in these Windows options. Download the Windows x86 version (highlighted below) which will work on all Windows operating systems.\n<em class=""chakra-text css-o3oz8b"">Note: JDK 8u91 and 8u92 are both okay to download, the important part is that they are both Java version 8.</em></p>\n<p class=""chakra-text css-o3oz8b""><img alt=""image of Mac OS X download"" src=""http://i.imgur.com/Vf81dtq.png?1"" class=""chakra-image css-0"" node=""[object Object]""></p>\n<p class=""chakra-text css-o3oz8b"">Before you can download this, you’ll need to click that you accept the license agreement, then you can click the link to download it.\nOnce you\'ve downloaded it, double click it to install.\n<br>\n<br></p>\n<h2 class=""chakra-heading css-fz7yxd"">4. Verify That You Have Java</h2>\n<p class=""chakra-text css-o3oz8b"">Go back to Step 1 and confirm that you have Java version 8 or higher installed. <strong>IntelliJ needs a JDK in order to work</strong>, so make sure you have this installed before proceeding.</p>\n<p class=""chakra-text css-o3oz8b"">If you can\'t get the download to work, look for error messages, and try googling to find a solution.</p>\n<p class=""chakra-text css-o3oz8b""><a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""http://www.oracle.com/technetwork/java/javase/downloads/index.html"">Link to Java download site<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a></p></div>']",['http://i.imgur.com/1DjsTUg.png'],
Intro to Java: Functional Programming,Intro to Java: Functional Programming,Lesson 5: IntelliJ and Debugging,5.5  Mac: The Terminal,[],['https://cdn.udacity.com/video/84c41378-d4a2-11e9-a39a-27974d2ef10d/poster.jpg'],
Intro to Java: Functional Programming,Intro to Java: Functional Programming,Lesson 5: IntelliJ and Debugging,5.6  Windows: Command Prompt,[],['https://cdn.udacity.com/video/8510b2f0-d4a2-11e9-b1a5-cb67ad2e0830/poster.jpg'],
Intro to Java: Functional Programming,Intro to Java: Functional Programming,Lesson 5: IntelliJ and Debugging,5.7  Mac: Hello Java!,"['<div class=""ureact-markdown css-tc5hjw""><pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-javascript"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span class=""token"" style=""color: rgb(113, 113, 101); font-style: italic;"">// Java code for printing Hello World</span><span>\n</span>\n<span></span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">public</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">class</span><span> </span><span class=""token"" style=""color: rgb(68, 85, 136); font-weight: bold;"">HelloWorld</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">{</span><span>\n</span>\t\n<span>\t</span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">public</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">static</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">void</span><span> </span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">main</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token parameter known-class-name"" style=""color: rgb(68, 85, 136); font-weight: bold;"">String</span><span class=""token parameter"" style=""color: rgb(15, 43, 61);"">[</span><span class=""token parameter"" style=""color: rgb(15, 43, 61);"">]</span><span class=""token parameter""> args</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">{</span><span>\n</span><span>\t</span><span class=""token"" style=""color: rgb(113, 113, 101); font-style: italic;"">//write code you want to execute here</span><span>\n</span>\n<span>\t\t</span><span class=""token maybe-class-name"">System</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token property-access"">out</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token method property-access"" style=""color: rgb(153, 0, 0); font-weight: bold;"">println</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(221, 17, 68);"">""Hello world!""</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span><span>\t</span><span class=""token"" style=""color: rgb(15, 43, 61);"">}</span><span>\n</span>\n<span></span><span class=""token"" style=""color: rgb(15, 43, 61);"">}</span></code></div></div></pre></div>']",['https://cdn.udacity.com/video/84c4140e-d4a2-11e9-a39c-779a1dffb6a5/poster.jpg'],
Intro to Java: Functional Programming,Intro to Java: Functional Programming,Lesson 5: IntelliJ and Debugging,5.8  Windows: Hello Java!,"['<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><strong><em class=""chakra-text css-o3oz8b"">NOTE for earlier versions of Windows</em>: Use the <em class=""chakra-text css-o3oz8b"">dir</em> command instead of <em class=""chakra-text css-o3oz8b"">cd</em> to change directories.</strong>\n````\n// Java code for printing Hello world!</p>\n<pre class=""css-0""><div data-defines-codeblock=""true"" tabindex=""0"" class=""css-1y373wj""><div style=""color: rgb(15, 43, 61); text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><code class=""language-javascript"" style=""color: rgb(15, 43, 61); background: none; text-shadow: white 0px 1px; font-family: &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 1em; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;""><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">public</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">class</span><span> </span><span class=""token"" style=""color: rgb(68, 85, 136); font-weight: bold;"">HelloWorld</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">{</span><span>\n</span>\t\n<span>\t</span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">public</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">static</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61); font-weight: bold;"">void</span><span> </span><span class=""token"" style=""color: rgb(153, 0, 0); font-weight: bold;"">main</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token parameter known-class-name"" style=""color: rgb(68, 85, 136); font-weight: bold;"">String</span><span class=""token parameter"" style=""color: rgb(15, 43, 61);"">[</span><span class=""token parameter"" style=""color: rgb(15, 43, 61);"">]</span><span class=""token parameter""> args</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span> </span><span class=""token"" style=""color: rgb(15, 43, 61);"">{</span><span>\n</span><span>\t</span><span class=""token"" style=""color: rgb(113, 113, 101); font-style: italic;"">//write code in here that you want to execute</span><span>\n</span>\n<span>\t\t</span><span class=""token maybe-class-name"">System</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token property-access"">out</span><span class=""token"" style=""color: rgb(15, 43, 61);"">.</span><span class=""token method property-access"" style=""color: rgb(153, 0, 0); font-weight: bold;"">println</span><span class=""token"" style=""color: rgb(15, 43, 61);"">(</span><span class=""token"" style=""color: rgb(221, 17, 68);"">""Hello world!""</span><span class=""token"" style=""color: rgb(15, 43, 61);"">)</span><span class=""token"" style=""color: rgb(15, 43, 61);"">;</span><span>\n</span><span>\t</span><span class=""token"" style=""color: rgb(15, 43, 61);"">}</span><span>\n</span>\n<span></span><span class=""token"" style=""color: rgb(15, 43, 61);"">}</span><span>\n</span><span></span><span class=""token template-string template-punctuation"" style=""color: rgb(221, 17, 68);"">`</span><span class=""token template-string template-punctuation"" style=""color: rgb(221, 17, 68);"">`</span><span class=""token template-string template-punctuation"" style=""color: rgb(221, 17, 68);"">`</span><span class=""token template-string template-punctuation"" style=""color: rgb(221, 17, 68);"">`</span></code></div></div></pre></div>']",['https://cdn.udacity.com/video/84c413be-d4a2-11e9-a39b-c76440bef71f/poster.jpg'],
Intro to Java: Functional Programming,Intro to Java: Functional Programming,Lesson 5: IntelliJ and Debugging,5.9  Windows: Changing Environment Variables,"['<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">After you’ve verified that you have a version of the java development kit installed, you have one more step before you start programming on your own computer!</p>\n<p class=""chakra-text css-o3oz8b"">You need to tell our computer where to find the JDK by changing your computer’s <strong>environment variables</strong>.</p>\n<h2 class=""chakra-heading css-fz7yxd"">1. Go to Advanced System Settings</h2>\n<p class=""chakra-text css-o3oz8b"">To get to your computer\'s environment variables, right click on your start menu and go to <em class=""chakra-text css-o3oz8b"">System</em>.\n<em class=""chakra-text css-o3oz8b"">You can also get to your System settings by going to your main Control Panel.</em></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Select System from the start menu.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Then you should see a System window with options on the left side that include <em class=""chakra-text css-o3oz8b"">Advanced system settings</em>, which is what we want to change, so click on this option.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Select Advanced system settings.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><h2 class=""chakra-heading css-fz7yxd"">2. Select Environment Variables</h2>\n<p class=""chakra-text css-o3oz8b"">After clicking on Advanced system settings, you’ll see a window pop up for <em class=""chakra-text css-o3oz8b"">System Properties</em>. Click on the button at the bottom right labelled <em class=""chakra-text css-o3oz8b"">Environment Variables</em>.</p>\n<p class=""chakra-text css-o3oz8b"">These variables affect how your computer runs, and deleting or changing one could cause your computer to crash, so make sure to follow along with these next steps closely!</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Environment Variables button.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><h2 class=""chakra-heading css-fz7yxd"">3. Edit the Path variable</h2>\n<p class=""chakra-text css-o3oz8b"">Next, you should see a list of the environment variables that your computer recognizes.</p>\n<p class=""chakra-text css-o3oz8b"">There\'s only one variable you want to edit and that\'s the <em class=""chakra-text css-o3oz8b"">Path</em> variable. The path is where our computer looks for programming resources, and we need to add our JDK to this path.</p>\n<p class=""chakra-text css-o3oz8b"">So select <em class=""chakra-text css-o3oz8b"">Path</em> and click Edit.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Select the Path system variable and click Edit...</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Then <strong>create a <em class=""chakra-text css-o3oz8b"">new</em> item</strong> and name it new. Don\'t change any of the exisiting listed files.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Click on New in this edit window.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Name the new variable ""new.""</p></div>', '<div class=""ureact-markdown css-tc5hjw""><h2 class=""chakra-heading css-fz7yxd"">4. Browse to the JDK bin file</h2>\n<p class=""chakra-text css-o3oz8b"">Select your ""new"" field that you just created and click <em class=""chakra-text css-o3oz8b"">Browse...</em>, which will let you browse and select the JDK file that you want to add the Path variable. Navigate to your main C: drive then to <em class=""chakra-text css-o3oz8b"">Programs (x86) &gt; Java &gt; jdk &gt;</em> <em class=""chakra-text css-o3oz8b"">bin</em>**, and select the bin folder.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">bin folder location.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><h2 class=""chakra-heading css-fz7yxd"">5. Click Okay Twice!</h2>\n<p class=""chakra-text css-o3oz8b"">To finish this process, make sure you click Okay in this edit window <em class=""chakra-text css-o3oz8b"">and</em> Okay in the Environment Variables window, otherwise your edit will not be saved.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Okay in edit window.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Okay in environment variables window.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><strong>And you\'re done!!</strong></p></div>']","['https://video.udacity-data.com/topher/2016/June/576da142_system-select1/system-select1.png', 'https://video.udacity-data.com/topher/2016/June/576da2fc_system-window2/system-window2.png', 'https://video.udacity-data.com/topher/2016/June/576db38a_sys-props3/sys-props3.png', 'https://video.udacity-data.com/topher/2016/June/576db522_env-vars4/env-vars4.png', 'https://video.udacity-data.com/topher/2016/June/576db64e_edit-vars-5new/edit-vars-5new.png', 'https://video.udacity-data.com/topher/2016/June/576db86e_new-6-new/new-6-new.png', 'https://video.udacity-data.com/topher/2016/June/576dbc58_bin-7new/bin-7new.png', 'https://video.udacity-data.com/topher/2016/June/576dbe28_bin-added-8/bin-added-8.png', 'https://video.udacity-data.com/topher/2016/June/576dbe4c_okay-again-9/okay-again-9.png']",
Intro to Java: Functional Programming,Intro to Java: Functional Programming,Lesson 5: IntelliJ and Debugging,5.10  IntelliJ,[],['https://cdn.udacity.com/video/84c58848-d4a2-11e9-a807-47835c8dd473/poster.jpg'],
Intro to Java: Functional Programming,Intro to Java: Functional Programming,Lesson 5: IntelliJ and Debugging,5.11  Mac: Install IntelliJ,[],['https://cdn.udacity.com/video/84c587bc-d4a2-11e9-a805-ff33875f1eed/poster.jpg'],
Intro to Java: Functional Programming,Intro to Java: Functional Programming,Lesson 5: IntelliJ and Debugging,5.12  Mac: Install IntelliJ 2,"['<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><em class=""chakra-text css-o3oz8b"">This text contains the most up-to-date installation instructions for installing IntelliJ as of June 2016.</em>\n<br>\n<br></p>\n<h2 class=""chakra-heading css-fz7yxd"">1. Install IntelliJ</h2>\n<p class=""chakra-text css-o3oz8b"">We’ll be using IntelliJ for the rest of this class. So, let’s download and install it first!</p>\n<p class=""chakra-text css-o3oz8b"">Download IntelliJ <a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://www.jetbrains.com/idea/download/#"">from this website<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a>.\nThis is the JetBrains website, and JetBrains is a company that aims to provide developers with helpful tools.</p>\n<p class=""chakra-text css-o3oz8b"">Once you get to this page, make sure the OS X version is selected, choose the free <strong>Community version</strong>, and click Download.\n<img alt=""IntelliJ download page"" src=""http://i.imgur.com/qkmd9q4.png"" class=""chakra-image css-0"" node=""[object Object]""></p>\n<p class=""chakra-text css-o3oz8b"">There are two versions of IntelliJ: Community and Ultimate. The Community version has all the tools we’ll need to write our own Java programs and it’s free!</p>\n<p class=""chakra-text css-o3oz8b"">And you should see a downloading file pop up at the bottom of your screen.\n<img alt=""IntelliJ download pop-up"" src=""http://i.imgur.com/YQVHFCx.png?1"" class=""chakra-image css-0"" node=""[object Object]""></p>\n<p class=""chakra-text css-o3oz8b"">After the download finishes, click on it to open it and start the installation.\n<br>\n<br></p>\n<h2 class=""chakra-heading css-fz7yxd"">2. Add IntelliJ to your Applications</h2>\n<p class=""chakra-text css-o3oz8b"">After IntelliJ is done installing, add it to the Applications that your computer can use by dragging and dropping it into your Applications Folder.</p>\n<p class=""chakra-text css-o3oz8b""><img alt=""dragNdrop IntelliJ"" src=""http://i.imgur.com/90VyjOh.png?1"" class=""chakra-image css-0"" node=""[object Object]""></p>\n<p class=""chakra-text css-o3oz8b""><strong>Congrats!</strong> Now you’re ready to open this up and write Java programs!</p></div>']",['http://i.imgur.com/qkmd9q4.png'],
Intro to Java: Functional Programming,Intro to Java: Functional Programming,Lesson 5: IntelliJ and Debugging,5.13  Windows: Install IntelliJ,"['<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><em class=""chakra-text css-o3oz8b"">This text contains the most up-to-date installation instructions for installing IntelliJ as of June 2016.</em>\n<br>\n<br></p>\n<h2 class=""chakra-heading css-fz7yxd"">1. Install IntelliJ</h2>\n<p class=""chakra-text css-o3oz8b"">We’ll be using IntelliJ for the rest of this class. So, let’s download and install it first!</p>\n<p class=""chakra-text css-o3oz8b"">Download IntelliJ <a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://www.jetbrains.com/idea/download/#section=windows"">from this website<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a>.\nThis is the JetBrains website, and JetBrains is a company that aims to provide developers with helpful tools.</p>\n<p class=""chakra-text css-o3oz8b"">Once you get to this page, make sure the Windows version is selected, choose the free <strong>Community version</strong>, and click Download.\n<img alt=""IntelliJ download page"" src=""http://i.imgur.com/LeP9yAd.png"" class=""chakra-image css-0"" node=""[object Object]""></p>\n<p class=""chakra-text css-o3oz8b"">There are two versions of IntelliJ: Community and Ultimate. The Community version has all the tools we’ll need to write our own Java programs and it’s free!</p>\n<p class=""chakra-text css-o3oz8b"">And you should see a downloading file pop up at the bottom of your screen. After the download finishes, click on it to open it and start the installation.</p>\n<p class=""chakra-text css-o3oz8b""><img alt=""IntelliJ download pop-up"" src=""http://i.imgur.com/Gi1ynYl.png?1"" class=""chakra-image css-0"" node=""[object Object]"">\n<br>\n<br></p>\n<h2 class=""chakra-heading css-fz7yxd"">2. Setup Wizard and Installation Location</h2>\n<p class=""chakra-text css-o3oz8b""><em class=""chakra-text css-o3oz8b"">You may be prompted with a pop-up window that asks ""Do you want to allow this app to make changes to your PC?"" If you are, select Yes and move on.</em></p>\n<p class=""chakra-text css-o3oz8b"">Next, you should see a Setup Wizard window appear, which will guide you through the installation process. Click Next here.</p>\n<p class=""chakra-text css-o3oz8b""><img alt=""Setup wizard"" src=""http://i.imgur.com/44Fdlu8.png"" class=""chakra-image css-0"" node=""[object Object]""></p>\n<p class=""chakra-text css-o3oz8b"">Then choose the destination folder for this installation. The setup wizard will pick a default location, and this should be the correct location in your computer\'s Program Files. Take note of this location, and click Next.</p>\n<p class=""chakra-text css-o3oz8b""><img alt=""Install_location"" src=""http://i.imgur.com/Ek4yFSH.png"" class=""chakra-image css-0"" node=""[object Object]"">\n<br>\n<br></p>\n<h2 class=""chakra-heading css-fz7yxd"">3. Choose Installation Options</h2>\n<p class=""chakra-text css-o3oz8b"">Next you will be asked about Installation Options. These are optional steps, but to make IntelliJ easier to find and to make it your default Java text editor, I recommend selecting 1) that a Shortcut be made, and 2) that .java files will be opened using IntelliJ.</p>\n<p class=""chakra-text css-o3oz8b""><img alt=""Installation options"" src=""http://i.imgur.com/G0d5SZY.png"" class=""chakra-image css-0"" node=""[object Object]""></p>\n<p class=""chakra-text css-o3oz8b"">Then select the name for your shortcut - you\'re Start Menu folder -  if you\'ve chosen to create one, and <strong>click Install</strong>.</p>\n<p class=""chakra-text css-o3oz8b""><img alt=""JetBrains shortcut"" src=""http://i.imgur.com/7HAiCmg.png"" class=""chakra-image css-0"" node=""[object Object]"">\n<br>\n<br></p>\n<h2 class=""chakra-heading css-fz7yxd"">4. Complete the Setup Wizard</h2>\n<p class=""chakra-text css-o3oz8b"">Finally, select <em class=""chakra-text css-o3oz8b"">Run IntelliJ</em> and click <strong>Finish</strong> to complete the installation and open up an IntelliJ window!\n<br>\n<img alt=""finish screen"" src=""http://i.imgur.com/iPUnmQK.png"" class=""chakra-image css-0"" node=""[object Object]""></p>\n<h2 class=""chakra-heading css-fz7yxd"">5. Complete Installation</h2>\n<p class=""chakra-text css-o3oz8b"">Great, you\'re almost done with the installation process!! Next, you\'ll be asked if you want to import settings from a previous version of IntelliJ. Since this is your first version, and you want to start without any custom settings, choose <em class=""chakra-text css-o3oz8b""><strong>I do not have a previous version of IntelliJ..</strong></em> and click Okay.</p>\n<p class=""chakra-text css-o3oz8b""><img alt=""import settings"" src=""http://i.imgur.com/wc3VaCZ.png"" class=""chakra-image css-0"" node=""[object Object]""></p>\n<p class=""chakra-text css-o3oz8b""><em class=""chakra-text css-o3oz8b"">You will also be asked to accept the JetBrains Privacy Policy, select I Agree here and move on.</em></p>\n<p class=""chakra-text css-o3oz8b"">And finally, you\'ll be asked to complete the installation by selecting if you want any custom user interface (UI) components for IntelliJ, again we will be using the default settings, and recommend that you select <em class=""chakra-text css-o3oz8b""><strong>Skip All and Set Defaults</strong></em>.\n<img alt=""default UI"" src=""http://i.imgur.com/awoF7LL.png"" class=""chakra-image css-0"" node=""[object Object]""></p>\n<p class=""chakra-text css-o3oz8b""><strong>Congrats!</strong> Now you’re ready to use IntelliJ to write Java programs!</p></div>']","['http://i.imgur.com/LeP9yAd.png', 'http://i.imgur.com/44Fdlu8.png', 'http://i.imgur.com/Ek4yFSH.png', 'http://i.imgur.com/G0d5SZY.png', 'http://i.imgur.com/7HAiCmg.png', 'http://i.imgur.com/iPUnmQK.png', 'http://i.imgur.com/wc3VaCZ.png', 'http://i.imgur.com/awoF7LL.png']",
Intro to Java: Functional Programming,Intro to Java: Functional Programming,Lesson 5: IntelliJ and Debugging,5.14  Setup a Project,"['<div class=""ureact-markdown css-tc5hjw""><h3 class=""chakra-heading css-k57syw"">A note on the JDK location</h3>\n<p class=""chakra-text css-o3oz8b"">If you have to select a Project SDK, the default location for the JDK Home folder that you want to select is...</p>\n<p class=""chakra-text css-o3oz8b"">Mac: <em class=""chakra-text css-o3oz8b"">C: &gt; Program Files (x86) &gt; Java &gt; JavaVirtualMachines &gt; jdk_1.8.0_.. &gt;</em> <em class=""chakra-text css-o3oz8b"">Home</em>**</p>\n<p class=""chakra-text css-o3oz8b"">Windows: <em class=""chakra-text css-o3oz8b"">C: &gt; Program Files &gt; Java &gt; JavaVirtualMachines &gt; jdk_1.8.0_.. &gt;</em> <em class=""chakra-text css-o3oz8b"">Home</em>**</p></div>']",['https://cdn.udacity.com/video/84c40f22-d4a2-11e9-a38b-a3f32a7fcbfa/poster.jpg'],
Intro to Java: Functional Programming,Intro to Java: Functional Programming,Lesson 5: IntelliJ and Debugging,5.15  IntelliJ Environment,[],['https://cdn.udacity.com/video/84c41332-d4a2-11e9-a399-9b838f4ff21c/poster.jpg'],
Intro to Java: Functional Programming,Intro to Java: Functional Programming,Lesson 5: IntelliJ and Debugging,5.16  Hello World in IntelliJ,"['<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Now that we’ve downloaded IntelliJ, let’s take a look at how to use it. Below are the text instructions for creating a <em class=""chakra-text css-o3oz8b"">Hello world</em> program in IntelliJ!\n<br>\n<br></p>\n<h2 class=""chakra-heading css-fz7yxd"">1. Open IntelliJ</h2>\n<p class=""chakra-text css-o3oz8b"">When you first open IntelliJ, you’ll see this welcome screen and options to create a new project, import, or open a project.</p>\n<p class=""chakra-text css-o3oz8b"">You’ll be starting a project from scratch, so choose <strong>Create New Project</strong>.</p>\n<p class=""chakra-text css-o3oz8b""><img alt=""welcome screen"" src=""http://i.imgur.com/YPC4IFz.png"" class=""chakra-image css-0"" node=""[object Object]""></p>\n<h2 class=""chakra-heading css-fz7yxd"">2. Select the Java SDK</h2>\n<p class=""chakra-text css-o3oz8b"">Next IntelliJ should show a window that asks for the <strong>Java SDK</strong> we want to use for our project. This is why we needed to install a java development kit beforehand, so that we can use it in our development environment here!</p>\n<p class=""chakra-text css-o3oz8b"">IntelliJ may have automatically found the correct JDK, and if it did, the Project JDK field should look like this:</p>\n<p class=""chakra-text css-o3oz8b""><img alt=""Project JDK"" src=""http://i.imgur.com/KsdlqOD.png"" class=""chakra-image css-0"" node=""[object Object]""></p>\n<p class=""chakra-text css-o3oz8b"">But if this field is blank, you can search for the version you want to use (Java 8)!</p>\n<p class=""chakra-text css-o3oz8b"">To find the correct JDK, click New.. to the side of the “Project JDK” text box and your computer should automatically search for the correct java folder.</p>\n<p class=""chakra-text css-o3oz8b""><img alt=""JDK selection screen"" src=""http://i.imgur.com/xSd1crY.png"" class=""chakra-image css-0"" node=""[object Object]""></p>\n<p class=""chakra-text css-o3oz8b"">The JDK you are looking for should be called something like <em class=""chakra-text css-o3oz8b"">jdk_1.8_..</em>\nAnd the folder that IntelliJ is interested in is the jdk1.8_.. &gt; Contents &gt; Home folder. This is where IntelliJ can find our java compiler and other developer tools.</p>\n<p class=""chakra-text css-o3oz8b""><img alt=""jdk Home folder"" src=""http://i.imgur.com/AhTlhrI.png?1"" class=""chakra-image css-0"" node=""[object Object]""></p>\n<p class=""chakra-text css-o3oz8b"">Once you have the correct version of Java selected, click Okay and you\'ll return the the New Project Window.</p>\n<p class=""chakra-text css-o3oz8b"">In this same window, IntelliJ also asks for any external libraries or frameworks, which are collections of Java code and functions that someone else has written. We’ll just be using functions that Java already has built-in, so we aren’t going to need any external code, so let’s <em class=""chakra-text css-o3oz8b"">leave these unchecked</em> and <strong>click Next</strong>.\n<br>\n<br></p>\n<h2 class=""chakra-heading css-fz7yxd"">3. Select Command Line App Template</h2>\n<p class=""chakra-text css-o3oz8b"">Next, IntelliJ will ask if you’re using a template. And you will!</p>\n<p class=""chakra-text css-o3oz8b"">We only have one option here called the <strong>Command Line App</strong>. So select that option and click Next.</p>\n<p class=""chakra-text css-o3oz8b"">And remember Command Line is another word for the terminal or command prompt and this template will include some starting code that will make it easier to write, compile, and run our own code.</p>\n<p class=""chakra-text css-o3oz8b""><img alt=""Command Line App"" src=""http://i.imgur.com/bzIZrFH.png"" class=""chakra-image css-0"" node=""[object Object]""></p>\n<p class=""chakra-text css-o3oz8b""><em class=""chakra-text css-o3oz8b"">Note: If you forget to click this template in future, don’t worry, you can always manually type in any code that you need later.</em>\n<br>\n<br></p>\n<h2 class=""chakra-heading css-fz7yxd"">4. Name Your Project</h2>\n<p class=""chakra-text css-o3oz8b"">Next you’ll be asked to give your project a name, and it’s always a good idea to give a simple, descriptive name.</p>\n<p class=""chakra-text css-o3oz8b"">You’ll be writing a simple Hello World program that prints out “Hello world!”  to your computer screen, so name this project <strong>HelloWorld</strong>.</p>\n<p class=""chakra-text css-o3oz8b"">In this window, you’ll also see the Project Location and Base Package.</p>\n<p class=""chakra-text css-o3oz8b"">The Project Location is where all of your IntelliJ projects will be saved. IntelliJ creates a convenient Project folder for us, so keep this the way it is.</p>\n<p class=""chakra-text css-o3oz8b"">The Base Package is named <em class=""chakra-text css-o3oz8b"">com.company</em> and you can leave this as is. The only time you would change the package name is if you were creating an application to distribute to the web or a mobile device.</p>\n<p class=""chakra-text css-o3oz8b"">So, once you’ve named your project, <strong>click Finish</strong>.</p>\n<p class=""chakra-text css-o3oz8b""><img alt=""Project Name"" src=""http://i.imgur.com/IH9gnEE.png"" class=""chakra-image css-0"" node=""[object Object]"">\n<br>\n<br></p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><em class=""chakra-text css-o3oz8b"">Now that you\'ve setup a project, let\'s look at the IntelliJ environment and start coding!</em>\n<br>\n<br></p>\n<h2 class=""chakra-heading css-fz7yxd"">1. IntelliJ Environment</h2>\n<p class=""chakra-text css-o3oz8b"">Now that we’ve set up our Hello World project, we should be able to see our IntelliJ environment, which is this split screen.</p>\n<p class=""chakra-text css-o3oz8b""><img alt=""IntelliJ environment"" src=""http://i.imgur.com/8PhmIjc.png"" class=""chakra-image css-0"" node=""[object Object]""></p>\n<p class=""chakra-text css-o3oz8b"">On the left we have our project layout that shows our main project folder named Hello World and a bunch of other folders inside this one that will hold our code.</p>\n<p class=""chakra-text css-o3oz8b"">Expand this folder to HelloWorld &gt; src &gt; com.company.\n<em class=""chakra-text css-o3oz8b"">Seen on the left side of the image below.</em></p>\n<p class=""chakra-text css-o3oz8b""><img alt=""expanded src"" src=""http://i.imgur.com/xR49JSl.png"" class=""chakra-image css-0"" node=""[object Object]""></p>\n<p class=""chakra-text css-o3oz8b"">The <em class=""chakra-text css-o3oz8b"">src</em> folder is short for source, which refers to the source code or main code of our program. And inside here is the package our code is held in, <em class=""chakra-text css-o3oz8b"">com.company</em>, and then we have something called Main inside here.</p>\n<p class=""chakra-text css-o3oz8b"">Main is a class file and you’ll learn more about classes when we talk about objects later, but for now know that all the code and functions you write will be inside classes.</p>\n<p class=""chakra-text css-o3oz8b"">And in fact, on the right side of the screen is all the code in that’s in our Main class.\n<br>\n<br></p>\n<h2 class=""chakra-heading css-fz7yxd"">2. Main class, main function</h2>\n<p class=""chakra-text css-o3oz8b"">Inside the Main class, is something called the <strong>main</strong> function. Whenever you write a program, your computer needs to know where to start running your code, and by default it will always start at this main function.</p>\n<p class=""chakra-text css-o3oz8b"">So inside this function is where you’ll place all the lines of code you want to execute, like println’s or function calls.</p>\n<p class=""chakra-text css-o3oz8b""><img alt=""main function"" src=""http://i.imgur.com/eQROeCA.png"" class=""chakra-image css-0"" node=""[object Object]"">\n<em class=""chakra-text css-o3oz8b"">The main function.</em>\n<br>\n<br></p>\n<h2 class=""chakra-heading css-fz7yxd"">3. Hello, world!</h2>\n<p class=""chakra-text css-o3oz8b"">For this program you just want to execute a line of code that prints out “Hello world!”, and you can do that just by writing a simple println statement inside of main.</p>\n<p class=""chakra-text css-o3oz8b""><img alt=""Hello world print"" src=""http://i.imgur.com/XynquJk.png"" class=""chakra-image css-0"" node=""[object Object]""></p>\n<p class=""chakra-text css-o3oz8b"">And once you write new code, it\'s always good practice to <strong>save it</strong> (File &gt; Save or cmd/ctrl + s).\n<br>\n<br></p>\n<h2 class=""chakra-heading css-fz7yxd"">4. Edit Configurations</h2>\n<p class=""chakra-text css-o3oz8b"">And we have one more thing to check before we run this program! Click on the Run tab and go to <strong>Edit Configurations</strong>.</p>\n<p class=""chakra-text css-o3oz8b""><img alt=""Run > Edit configurations"" src=""http://i.imgur.com/ncb6gCG.png"" class=""chakra-image css-0"" node=""[object Object]"">\n<br></p>\n<p class=""chakra-text css-o3oz8b""><em class=""chakra-text css-o3oz8b"">Then this window pops up and you should see these four filled in fields.</em></p>\n<p class=""chakra-text css-o3oz8b""><img alt=""edit config image"" src=""http://i.imgur.com/mcyis5k.png"" class=""chakra-image css-0"" node=""[object Object]""></p>\n<ol role=""list"" class=""css-13a5a39""><li class=""css-cvpopp"">\nFirst is the name of the Main class that you want to run.</li><li class=""css-cvpopp"">\nSecond is the working directory, which is where you are saving this project.</li><li class=""css-cvpopp"">\nThird is the classpath of your module, which should have your project folder selected (the folder named Hello World).</li><li class=""css-cvpopp"">\nAnd fourth is the version of the Java Runtime Environment that you’re running, which should be version 8 that you’ve downloaded.</li></ol>\n<p class=""chakra-text css-o3oz8b"">Great! this information is usually filled in automatically, but it’s always good to double check and correct things if they are not correctly filled in. So press Okay here and we’ll go back to our program screen!\n<br>\n<br></p>\n<h2 class=""chakra-heading css-fz7yxd"">5. Run Your Program!</h2>\n<p class=""chakra-text css-o3oz8b"">Now let’s run this! We can run this program by clicking this play button at the top right of our screen or selecting Run &gt; Run \'Main\' from the top toolbar. Both options do the same thing and are shown below.</p>\n<p class=""chakra-text css-o3oz8b""><img alt=""run button"" src=""http://i.imgur.com/RQCAotT.png"" class=""chakra-image css-0"" node=""[object Object]""></p>\n<p class=""chakra-text css-o3oz8b"">And you can see that a third window pops up at the bottom of your screen! This is called a console, and this is where all of your print statements will print out. So whenever you write System.out.println() in your main function, the lines will print out here in the order that they are called in your main function.</p>\n<p class=""chakra-text css-o3oz8b""><img alt=""Console image"" src=""http://i.imgur.com/QBNdSMx.png"" class=""chakra-image css-0"" node=""[object Object]""></p>\n<p class=""chakra-text css-o3oz8b"">And IntelliJ will <strong>automatically compile our code</strong> before you run it, so if you go in and change the print statement to Hello Java! You can just save this code and run it again!</p>\n<br>\n**Congrats on completing your first Hello World program in IntelliJ!** I’d recommend adding onto this program with a few lines of code of your own. Try adding two numbers and printing out that value, or displaying a message of your own. \n<p class=""chakra-text css-o3oz8b"">This is the best way to get familiar with it and comfortable writing programs on your own computer!</p></div>']","['http://i.imgur.com/YPC4IFz.png', 'http://i.imgur.com/KsdlqOD.png', 'http://i.imgur.com/xSd1crY.png', 'http://i.imgur.com/bzIZrFH.png', 'http://i.imgur.com/IH9gnEE.png', 'http://i.imgur.com/8PhmIjc.png', 'http://i.imgur.com/xR49JSl.png', 'http://i.imgur.com/eQROeCA.png', 'http://i.imgur.com/XynquJk.png', 'http://i.imgur.com/ncb6gCG.png', 'http://i.imgur.com/mcyis5k.png', 'http://i.imgur.com/RQCAotT.png', 'http://i.imgur.com/QBNdSMx.png']",
Intro to Java: Functional Programming,Intro to Java: Functional Programming,Lesson 5: IntelliJ and Debugging,5.17  Tic Tac Toe,[],[],
Intro to Java: Functional Programming,Intro to Java: Functional Programming,Lesson 5: IntelliJ and Debugging,5.18  Download Tic Tac Toe,"['<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">For your project, you’ll be downloading our Tic Tac Toe code as an IntelliJ project and completing it!\n<strong>To make sure you import our code correctly, it\'s <em class=""chakra-text css-o3oz8b"">really</em> important that you follow along with these instructions</strong>. So, let\'s get started!</p>\n<h2 class=""chakra-heading css-fz7yxd"">1. Download the Tic Tac Toe Code</h2>\n<p class=""chakra-text css-o3oz8b"">All the code for this tic tac toe project is in our <a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://github.com/udacity/ud282"">java github repository (click here)<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a>.</p>\n<p class=""chakra-text css-o3oz8b"">Github just gives us a place to store our programs online so that we can share and edit our code. If you want to learn more about Github, you can check out our class on How to Use Git and Github.</p>\n<p class=""chakra-text css-o3oz8b"">Once you get to the java-nd repository, click the <strong>Clone or Download</strong> button to the top right of the code, and click <strong>Download Zip</strong>.</p>\n<p class=""chakra-text css-o3oz8b"">This should download all the project files you need into one .zip file named <em class=""chakra-text css-o3oz8b"">java-nd-master</em>.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Download the ZIP file for this project.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><h2 class=""chakra-heading css-fz7yxd"">2. Unzip the Project Files</h2>\n<p class=""chakra-text css-o3oz8b"">After you’ve downloaded all our code in a .zip file, I recommend that you save it to your Desktop for easy access. You can do this by copy-pasting the file there or by dragging it from your Download folder to your Desktop.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Zipped file.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Then double click the .zip file to unzip the files so that you can access them! And you should get a folder like the one seen below.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Unzipped file.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">And if you click to open this folder, you should see a folder named <strong>Project 1 - TicTacToe</strong>.</p>\n<p class=""chakra-text css-o3oz8b"">Keep this directory in mind for when we import a project into IntelliJ next!</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Project folder.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><em class=""chakra-text css-o3oz8b"">After downloading the Tic Tac Toe code, you\'ll need to import it into IntelliJ!</em></p></div>']","['https://video.udacity-data.com/topher/2016/June/576dcdfc_dowloadzip-1/dowloadzip-1.png', 'https://video.udacity-data.com/topher/2016/June/576dce89_zipped2/zipped2.png', 'https://video.udacity-data.com/topher/2016/June/576dcec9_unzipped2/unzipped2.png', 'https://video.udacity-data.com/topher/2016/June/576dcf1d_insidefolder3/insidefolder3.png']",
Intro to Java: Functional Programming,Intro to Java: Functional Programming,Lesson 5: IntelliJ and Debugging,5.19  Import the Project Code into IntelliJ,"['<div class=""ureact-markdown css-tc5hjw""><h2 class=""chakra-heading css-fz7yxd"">1. Import the Project into IntelliJ</h2>\n<p class=""chakra-text css-o3oz8b"">Open IntelliJ and if you have any programs open, close out of them to get to the Welcome screen again. This time, instead of selecting Create New Project, select <strong>Import Project</strong>.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Import Project screen.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">When you click <em class=""chakra-text css-o3oz8b"">Import Project</em> a window should pop up prompting you to import the project from some folder.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Navigate to where you’ve saved the ud282-master folder, if that’s your desktop, the file path will be: <em class=""chakra-text css-o3oz8b"">Desktop &gt; ud282-master &gt;</em> <em class=""chakra-text css-o3oz8b"">Project 1 - TicTacToe</em>**</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Select Project 1 - TicTacToe.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Select the <strong>Project 1 - TicTacToe</strong> folder, as above, and click Okay.\n<br>\n<br></p>\n<h2 class=""chakra-heading css-fz7yxd"">2. Import using Gradle (external model)</h2>\n<p class=""chakra-text css-o3oz8b"">The next window will ask you if you want to import a project from an <em class=""chakra-text css-o3oz8b"">external model</em>, and you do!</p>\n<p class=""chakra-text css-o3oz8b"">Select this button and <strong>choose the Gradle option</strong>, then click Next!</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Gradle is something called a <em class=""chakra-text css-o3oz8b"">build tool</em> that helps developers package projects.\n<br>\n<br></p>\n<h2 class=""chakra-heading css-fz7yxd"">3. Use the Gradle Wrapper</h2>\n<p class=""chakra-text css-o3oz8b"">Our code includes a Gradle wrapper in it, which is basically a way to use Gradle without making you download anything extra. So, select this wrapper and click Finish!</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Use gradle wrapper task configuration.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><h2 class=""chakra-heading css-fz7yxd"">4. Open Game.java</h2>\n<p class=""chakra-text css-o3oz8b"">IntelliJ should now have successfully imported all the Tic Tac Toe code! And you should see an IntelliJ window open up with the project directory an the left side of the screen and an empty window on the right.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Imported project.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">The code that runs the Tic Tac Toe game, and that you\'ll be adding to, is in one file called <strong>Game.java</strong>.</p>\n<p class=""chakra-text css-o3oz8b"">Open this file by navigating to <em class=""chakra-text css-o3oz8b"">Project 1 &gt; src &gt; main &gt; java &gt; com.udacity &gt; Game</em> in your project directory. Double-click on Game to open it.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Open Game.java.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">And you should see the Game.java code appear on the right side of your screen! Even though this code is incomplete (it can\'t yet detect when a player wins), you can still run it, but before you can run it, you\'ll have to build it and set up the run configuration.</p>\n<p class=""chakra-text css-o3oz8b"">Usually gradle will run a build automatically once imported, but incase that didn\'t happen, navigate through the project directory and right click on <em class=""chakra-text css-o3oz8b"">Project 1 &gt; build.gradle</em> then click on the run build option in the menu</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Once the build is complete you should see the log message BUILD SUCCESSFUL appear in the bottom panel.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">**\nNext, let\'s edit the run configurations and run the game!!\n**</p></div>']","['https://video.udacity-data.com/topher/2016/June/5772ddda_import-welcomescreen/import-welcomescreen.png', 'https://video.udacity-data.com/topher/2016/June/5771ef42_project-selection/project-selection.png', 'https://video.udacity-data.com/topher/2016/June/5772e151_external-model/external-model.png', 'https://video.udacity-data.com/topher/2016/June/5772e45d_gradle-wrapper/gradle-wrapper.png', 'https://video.udacity-data.com/topher/2016/June/5772e68a_emptyprojectij/emptyprojectij.png', 'https://video.udacity-data.com/topher/2016/June/5772e905_game-java-nav/game-java-nav.png', 'https://video.udacity-data.com/topher/2017/October/59f44e15_screen-shot-2017-10-28-at-11.27.22-am/screen-shot-2017-10-28-at-11.27.22-am.png', 'https://video.udacity-data.com/topher/2017/October/59f44e55_screen-shot-2017-10-28-at-11.27.47-am/screen-shot-2017-10-28-at-11.27.47-am.png']",
Intro to Java: Functional Programming,Intro to Java: Functional Programming,Lesson 5: IntelliJ and Debugging,5.20  Run the Game!,"['<div class=""ureact-markdown css-tc5hjw""><h2 class=""chakra-heading css-fz7yxd"">1. Edit Run Configurations</h2>\n<p class=""chakra-text css-o3oz8b"">Right now, there is a lot of code in this project and IntelliJ needs to be told what to run. To tell it to run Game.java, you need to go to Run &gt; Edit Configurations, and set up a New configuration.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Edit Configurations... drop down menu.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Then in the Run Configurations window, click the <code class=""chakra-code css-1u83yg1"">+</code> button at the top left of this window to add a new configuration, and select <em class=""chakra-text css-o3oz8b"">Application</em>.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Add new Application configuration.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Then you\'ll see this configurations window, and the first thing you want to do is to <strong>name your configuration</strong>, and I\'ll name this <em class=""chakra-text css-o3oz8b"">Run Game</em>.</p>\n<p class=""chakra-text css-o3oz8b"">Then you\'ll see the four fields that we\'ve seen before:</p>\n<ol role=""list"" class=""css-13a5a39""><li class=""css-cvpopp"">The main class that we want to run.</li><li class=""css-cvpopp"">The project directory for Project 1 - TicTacToe.</li><li class=""css-cvpopp"">The classpath of the module.</li><li class=""css-cvpopp"">The version of Java you\'re using.</li></ol>\n<p class=""chakra-text css-o3oz8b"">You\'ll want to make sure these are all set to the correct fields before moving on and running the game. You\'ll also need to select the correct <em class=""chakra-text css-o3oz8b"">main class</em> and <em class=""chakra-text css-o3oz8b"">module</em>; the project directory and version of Java should be automatically chosen by IntelliJ.</p>\n<p class=""chakra-text css-o3oz8b"">So, after changing the name, the first thing you should select is the <em class=""chakra-text css-o3oz8b"">Main class</em> by clicking the <code class=""chakra-code css-1u83yg1"">...</code> to the side of the Main class field. Then, a window will prompt you to select the Game class. Select this and click Okay.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Main class selection screen.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Next select the correct <em class=""chakra-text css-o3oz8b"">module</em> by using the drop-down menu to the right of this field, and choose the <strong>Project_1_-_TicTacToe_main</strong> module. Make sure you select the <strong>main</strong> module and not the test or default project modules.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Module selection.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">So, your final configuration should have the following fields:</p>\n<ol role=""list"" class=""css-13a5a39""><li class=""css-cvpopp"">The main class that we want to run should be <strong>com.udacity.Game</strong>.</li><li class=""css-cvpopp"">The project directory for Project 1 - TicTacToe (left as is).</li><li class=""css-cvpopp"">The classpath of the module, which should be <strong>Project_1_-_TicTacToe_main</strong>.</li><li class=""css-cvpopp"">The version of Java you\'re using, which should be version 8.</li></ol></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Correct run configuration.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b""><em class=""chakra-text css-o3oz8b"">Make sure all of these fields are correct and match the picture before proceeding.</em></p>\n<p class=""chakra-text css-o3oz8b"">After you\'ve named and set your configuration to run Game.java, click Apply then Okay to get back to your program.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Click Apply... then Okay!</p></div>', '<div class=""ureact-markdown css-tc5hjw""><h2 class=""chakra-heading css-fz7yxd"">2. Run the Game!</h2>\n<p class=""chakra-text css-o3oz8b"">After your run configuration is set up, you should see it\'s name appear in the top right of your screen next to the Run button. Now, you can simply click this button and Game.java will run.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Run Game button.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">When you click Run, you should see a tic tac toe grid appear!</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Tic Tac Toe!</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">You can even play a one or two player game of Tic Tac Toe, but this game code does not yet detect when a player wins!</p></div>']","['https://video.udacity-data.com/topher/2016/June/57743310_editconfigmenu/editconfigmenu.png', 'https://video.udacity-data.com/topher/2016/June/57743456_new-application-select/new-application-select.png', 'https://video.udacity-data.com/topher/2016/June/57743834_main-classselection/main-classselection.png', 'https://video.udacity-data.com/topher/2016/June/57743952_module-select/module-select.png', 'https://video.udacity-data.com/topher/2016/June/57743ac2_completed-config/completed-config.png', 'https://video.udacity-data.com/topher/2016/June/577440d0_apply-button/apply-button.png', 'https://video.udacity-data.com/topher/2016/June/57744269_rungamebuttonchanged/rungamebuttonchanged.png', 'https://video.udacity-data.com/topher/2016/June/577442b2_tictactoegrid/tictactoegrid.png']",
Intro to Java: Functional Programming,Intro to Java: Functional Programming,Lesson 5: IntelliJ and Debugging,5.21  The Grid,[],['https://cdn.udacity.com/video/84c4129c-d4a2-11e9-a397-63afc70e2dee/poster.jpg'],
Intro to Java: Functional Programming,Intro to Java: Functional Programming,Lesson 5: IntelliJ and Debugging,5.22  2D Coordinates,[],['https://cdn.udacity.com/video/84e1de44-d4a2-11e9-9e67-a392ee73aac3/poster.jpg'],
Intro to Java: Functional Programming,Intro to Java: Functional Programming,Lesson 5: IntelliJ and Debugging,5.23  Winning Conditions,[],['https://cdn.udacity.com/video/84c41120-d4a2-11e9-a392-5b881e8c38a5/poster.jpg'],
Intro to Java: Functional Programming,Intro to Java: Functional Programming,Lesson 5: IntelliJ and Debugging,5.24  Detect a Win,[],[],
Intro to Java: Functional Programming,Intro to Java: Functional Programming,Lesson 5: IntelliJ and Debugging,5.25  What type of error,"['<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">This program is supposed to print the numbers 1 to 100.</p></div>']",['https://cdn.udacity.com/video/84dee1da-d4a2-11e9-9526-4f512df5c55f/poster.jpg'],
Intro to Java: Functional Programming,Intro to Java: Functional Programming,Lesson 5: IntelliJ and Debugging,5.26  Debugging in IntelliJ,[],['https://cdn.udacity.com/video/84c40edc-d4a2-11e9-a38a-875bfe32bcd1/poster.jpg'],
Intro to Java: Functional Programming,Intro to Java: Functional Programming,Lesson 5: IntelliJ and Debugging,5.27  Project Instructions,"['<div class=""ureact-markdown css-tc5hjw""><h2 class=""chakra-heading css-fz7yxd"">Summary</h2>\n<p class=""chakra-text css-o3oz8b"">In this project, you are required to complete the code for a Tic-Tac-Toe game. The source code of the game GUI and computer logic can be downloaded <a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://github.com/udacity/ud282"">here<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a>. While you can start compiling and playing straight away, the code is not complete because the game never detects the winner!</p>\n<h2 class=""chakra-heading css-fz7yxd"">Rules of the Game</h2>\n<p class=""chakra-text css-o3oz8b"">Tic-Tac-Toe is a 2 player board game. One player is X and the other player is O. The game starts with an empty 3x3 grid with 9 cells. The players take turns marking each cell with either an X or an O. The goal for the X player is to get 3 X’s in one line either vertically, horizontally or diagonally. The goal for the O player is to get 3 O’s in one line either vertically, horizontally or diagonally.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">X wins by forming a diagonal line</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">O wins by forming a horizontal line</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Once a line is formed the game ends and the player who formed that line wins!</p>\n<p class=""chakra-text css-o3oz8b"">Sometimes there is no winner. This occurs when all of the cells are filled in but there is no line of 3 X\'s or 3 O\'s. This often happens, especially when both players are good. In this case, this game ends as a tie.</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">Game ends as a tie</p></div>', '<div class=""ureact-markdown css-tc5hjw""><h2 class=""chakra-heading css-fz7yxd"">Code design</h2>\n<p class=""chakra-text css-o3oz8b"">The source code includes 2 main Java files, <strong>Game.java</strong> and <strong>GameUI.java</strong>.</p>\n<ol role=""list"" class=""css-13a5a39""><li class=""css-cvpopp""><strong>Game.java</strong> is where all the game logic code exists.</li><li class=""css-cvpopp""><strong>GameUI.java</strong> is where all the user interface code exists.  You can take a look at GameUI.java if you like, but it is not necessary to change any code there to complete the project.</li></ol>\n<p class=""chakra-text css-o3oz8b"">Your job is to implement the <strong>checkGameWinner()</strong> function in the <strong>Game.java</strong> file.</p>\n<p class=""chakra-text css-o3oz8b""><code class=""chakra-code css-1u83yg1"">String checkGameWinner(char [][] grid)</code> has a 2D char array as an input representing the game grid (see below for details) and it returns a String message indicating which player has won (X wins , O wins, Tie, or None if the game hasn\'t ended yet)</p>\n<p class=""chakra-text css-o3oz8b""><strong>doChecks()</strong>  is another function that is responsible for calling checkGameWinner every time a player takes a turn, so you should not worry about fitting this function into the rest of the program, this is already taken care of.</p>\n<p class=""chakra-text css-o3oz8b"">The Grid is represented as a 2D array of characters, indexed as follows:</p></div>', '<div class=""ureact-markdown css-tc5hjw""><p class=""chakra-text css-o3oz8b"">2D Array Indicies</p></div>', '<div class=""ureact-markdown css-tc5hjw""><h2 class=""chakra-heading css-fz7yxd"">Requirements</h2>\n<p class=""chakra-text css-o3oz8b"">In checkGameWinner() you should access those cells in the 2D array to find out if X or O has won the game by checking if there’s 3 of the same kind in a row either horizontally, vertically or diagonally!</p>\n<ol role=""list"" class=""css-13a5a39""><li class=""css-cvpopp"">If you detect a winner, set the variable result to either “X wins” or “O wins” depending on the player who won.</li><li class=""css-cvpopp"">If the game ends as a tie, set result to “Tie.”</li><li class=""css-cvpopp"">If the game has not ended yet set result to “None.”</li></ol>\n<p class=""chakra-text css-o3oz8b"">Then make sure the function returns that variable result at the end (you can also return the string literal directly as you detect a winner or tie).</p>\n<p class=""chakra-text css-o3oz8b"">You are allowed to create and use extra functions if you want, but you should not need to do so.</p>\n<p class=""chakra-text css-o3oz8b"">As a free student, you will not be able to submit your project to Udacity for review. Make sure you test the code by playing the game many times with different outcomes (X wins, O wins, tie). If you find a bug, remember that you can use the debugging feature in IntelliJ to point you to the right direction. Check the forums for help from your fellow students.</p>\n<p class=""chakra-text css-o3oz8b"">Good luck! We hope you enjoyed taking this course.</p></div>']","['https://video.udacity-data.com/topher/2016/June/576c6395_image00/image00.png', 'https://video.udacity-data.com/topher/2016/June/576c64ae_image04/image04.png', 'https://video.udacity-data.com/topher/2016/June/576c653b_image03/image03.png', 'https://video.udacity-data.com/topher/2016/June/576c6597_image01/image01.png']",
Intro to Java: Functional Programming,Intro to Java: Functional Programming,Lesson 5: IntelliJ and Debugging,5.28  Next Steps,"['<div class=""ureact-markdown css-tc5hjw""><h2 class=""chakra-heading css-fz7yxd"">What next?</h2>\n<p class=""chakra-text css-o3oz8b"">Congratulations on completing this course and we hope you\'ve enjoyed it.</p>\n<p class=""chakra-text css-o3oz8b"">The next step will be to learn how to design complete Java projects using Object Oriented Programming principles.</p>\n<p class=""chakra-text css-o3oz8b"">Enrol now in the free course <a target=""_blank"" rel=""noopener noreferrer"" class=""chakra-link css-190botj"" href=""https://www.udacity.com/course/object-oriented-programming-in-java--ud283"">OOP in Java<span class=""chakra-text css-1lktits"">(opens in a new tab)</span></a> and let <strong>Asser Samak</strong> and <strong>James Williams</strong> take you on a journey through the world of objects ...</p></div>']",['https://video.udacity-data.com/topher/2017/August/59a62333_screen-shot-2017-08-30-at-12.29.32-pm/screen-shot-2017-08-30-at-12.29.32-pm.png'],
